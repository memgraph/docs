"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5105],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var m=a.createContext({}),i=function(e){var t=a.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=i(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=i(r),h=n,d=c["".concat(m,".").concat(h)]||c[h]||u[h]||s;return r?a.createElement(d,o(o({ref:t},p),{},{components:r})):a.createElement(d,o({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var i=2;i<s;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},56173:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var a=r(87462),n=(r(67294),r(3905)),s=r(93996);const o={id:"pulsar-streams",title:"How to manage Pulsar streams",sidebar_label:"Pulsar streams",slug:"/how-to-guides/streams/manage-pulsar-streams"},l=void 0,m={unversionedId:"how-to-guides/streams/pulsar-streams",id:"how-to-guides/streams/pulsar-streams",title:"How to manage Pulsar streams",description:"The stream functionality enables Memgraph to connect to a Kafka, Pulsar or",source:"@site/gqlalchemy/how-to-guides/streams/pulsar-streams.md",sourceDirName:"how-to-guides/streams",slug:"/how-to-guides/streams/manage-pulsar-streams",permalink:"/docs/gqlalchemy/how-to-guides/streams/manage-pulsar-streams",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/how-to-guides/streams/pulsar-streams.md",tags:[],version:"current",frontMatter:{id:"pulsar-streams",title:"How to manage Pulsar streams",sidebar_label:"Pulsar streams",slug:"/how-to-guides/streams/manage-pulsar-streams"},sidebar:"gqlalchemy",previous:{title:"Kafka streams",permalink:"/docs/gqlalchemy/how-to-guides/streams/manage-kafka-streams"},next:{title:"Import table data as a graph",permalink:"/docs/gqlalchemy/how-to-guides/table-to-graph-importer"}},i={},p=[{value:"1. Create a Pulsar stream in Memgraph",id:"1-create-a-pulsar-stream-in-memgraph",level:2},{value:"2. Start the stream",id:"2-start-the-stream",level:2},{value:"3. Check the status of the stream",id:"3-check-the-status-of-the-stream",level:2},{value:"4. Delete the stream",id:"4-delete-the-stream",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The stream functionality enables Memgraph to connect to a Kafka, Pulsar or\nRedpanda cluster and run graph analytics on the data stream."),(0,n.kt)(s.ZP,{mdxType:"Neo4jWarning"}),(0,n.kt)("h2",{id:"1-create-a-pulsar-stream-in-memgraph"},"1. Create a Pulsar stream in Memgraph"),(0,n.kt)("p",null,"To set up the streams, first, create a ",(0,n.kt)("inlineCode",{parentName:"p"},"MemgraphPulsarStream")," object with all\nthe required arguments:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"name: str")," \u27a1 The name of the stream."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"topics: List[str]")," \u27a1 List of topic names."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"transform: str")," \u27a1 The transformation procedure for mapping incoming messages\nto Cypher queries."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"batch_interval: str = None")," \u27a1 Maximum wait time in milliseconds for consuming\nmessages before calling the transform procedure."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"batch_size: str = None")," \u27a1 Maximum number of messages to wait for before\ncalling the transform procedure."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"service_url: str = None")," \u27a1 URL to the running Pulsar cluster.")),(0,n.kt)("p",null,"Now you just have to call the ",(0,n.kt)("inlineCode",{parentName:"p"},"create_stream()")," method with the newly created\n",(0,n.kt)("inlineCode",{parentName:"p"},"MemgraphPulsarStream")," object:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import MemgraphPulsarStream\n\nstream = MemgraphPulsarStream(name="ratings_stream", topics=["ratings"], transform="movielens.rating", service_url="localhost:6650")\ndb.create_stream(stream)\n')),(0,n.kt)("h2",{id:"2-start-the-stream"},"2. Start the stream"),(0,n.kt)("p",null,"To start the stream, just call the ",(0,n.kt)("inlineCode",{parentName:"p"},"start_stream()")," method:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"db.start_stream(stream)\n")),(0,n.kt)("h2",{id:"3-check-the-status-of-the-stream"},"3. Check the status of the stream"),(0,n.kt)("p",null,"To check the status of the stream in Memgraph, just run the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"check = db.get_streams()\n")),(0,n.kt)("h2",{id:"4-delete-the-stream"},"4. Delete the stream"),(0,n.kt)("p",null,"You can use the ",(0,n.kt)("inlineCode",{parentName:"p"},"drop_stream()")," method to delete a stream:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"check = db.drop_stream(stream)\n")))}c.isMDXComponent=!0},93996:(e,t,r)=>{r.d(t,{ZP:()=>o});var a=r(87462),n=(r(67294),r(3905));const s={toc:[]};function o(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"important"},(0,n.kt)("p",{parentName:"admonition"},"This feature only works with Memgraph. Neo4j is not supported.")))}o.isMDXComponent=!0}}]);