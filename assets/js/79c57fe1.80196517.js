"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[54862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(h,l(l({ref:t},s),{},{components:n})):r.createElement(h,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},52664:(e,t,n)=>{n.r(t),n.d(t,{Highlight:()=>m,assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905)),o=n(74866),l=n(85162),u=n(83523);const i={id:"export-util",title:"export_util",sidebar_label:"export_util"},p=void 0,s={unversionedId:"query-modules/python/export-util",id:"query-modules/python/export-util",title:"export_util",description:"Module for exporting a graph database in different formats. Currently, this",source:"@site/mage/query-modules/python/export-util.md",sourceDirName:"query-modules/python",slug:"/query-modules/python/export-util",permalink:"/docs/mage/query-modules/python/export-util",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/mage/query-modules/python/export-util.md",tags:[],version:"current",frontMatter:{id:"export-util",title:"export_util",sidebar_label:"export_util"},sidebar:"mage",previous:{title:"elasticsearch_synchronization",permalink:"/docs/mage/query-modules/python/elasticsearch-synchronization"},next:{title:"graph_analyzer",permalink:"/docs/mage/query-modules/python/graph-analyzer"}},d={},c=[{value:"Procedures",id:"procedures",level:2},{value:"<code>json(path)</code>",id:"jsonpath",level:3},{value:"Input:",id:"input",level:4},{value:"Usage:",id:"usage",level:4},{value:"Example - Exporting database to a JSON file",id:"example---exporting-database-to-a-json-file",level:2}],m=e=>{let{children:t,color:n}=e;return(0,a.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},h={toc:c,Highlight:m};function g(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Module for exporting a graph database in different formats. Currently, this\nmodule supports only the export to JSON file format."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage/blob/main/python/export_util.py"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-export_util-FB6E00?logo=github&style=for-the-badge",alt:"docs-source"}))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Trait"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Module type")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,a.kt)("strong",{parentName:"td"},"util")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Implementation")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,a.kt)("strong",{parentName:"td"},"Python")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Parallelism")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,a.kt)("strong",{parentName:"td"},"sequential")))))),(0,a.kt)("h2",{id:"procedures"},"Procedures"),(0,a.kt)(u.ZP,{mdxType:"RunOnSubgraph"}),(0,a.kt)("h3",{id:"jsonpath"},(0,a.kt)("inlineCode",{parentName:"h3"},"json(path)")),(0,a.kt)("h4",{id:"input"},"Input:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path: string")," \u27a1 Path to the JSON file containing the exported graph database.")),(0,a.kt)("h4",{id:"usage"},"Usage:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," you have to provide as procedure argument depends on how you started\nMemgraph."),(0,a.kt)(o.Z,{groupId:"export_to_json_usage",defaultValue:"docker",values:[{label:"Docker",value:"docker"},{label:"Linux",value:"linux"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"docker",mdxType:"TabItem"},(0,a.kt)("p",null,"If you ran Memgraph with Docker, database will be exported to a JSON file inside\nthe Docker container. We recommend exporting the database to the JSON file\ninside the ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules")," directory."),(0,a.kt)("p",null,"You can call the procedure by running the following query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"CALL export_util.json(path);\n")),(0,a.kt)("p",null,"where ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," is the path to the JSON file inside the\n",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules")," directory in the running Docker container (e.g.,\n",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules/export.json"),")."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can copy the exported JSON file to your local file system using the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/cp/"},(0,a.kt)("inlineCode",{parentName:"a"},"docker cp"))," command: "),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"docker cp <container_id>:/usr/lib/memgraph/query_modules/export.json /path_to_local_folder/export.json\n")))),(0,a.kt)(l.Z,{value:"linux",mdxType:"TabItem"},(0,a.kt)("p",null,"To export database to a local JSON file create a new directory (for example,\n",(0,a.kt)("inlineCode",{parentName:"p"},"export_folder"),") and run the following command to give the user ",(0,a.kt)("inlineCode",{parentName:"p"},"memgraph")," the\nnecessary permissions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo chown memgraph export_folder\n")),(0,a.kt)("p",null,"Then, call the procedure by running the following query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"CALL export_util.json(path);\n")),(0,a.kt)("p",null,"where ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," is the path to a local JSON file that will be created inside the\n",(0,a.kt)("inlineCode",{parentName:"p"},"export_folder")," (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"/users/my_user/export_folder/export.json"),")."))),(0,a.kt)("h2",{id:"example---exporting-database-to-a-json-file"},"Example - Exporting database to a JSON file"),(0,a.kt)(o.Z,{groupId:"export_to_json_example",defaultValue:"input",values:[{label:"Step 1: Cypher load commands",value:"load"},{label:"Step 2: Input graph",value:"input"},{label:"Step 3: Running command",value:"run"},{label:"Step 4: Results",value:"result"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"load",mdxType:"TabItem"},(0,a.kt)("p",null,"You can create a simple graph database by running the following queries:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},'CREATE (n:Person {name:"Anna"}), (m:Person {name:"John"}), (k:Person {name:"Kim"})\nCREATE (n)-[:IS_FRIENDS_WITH]->(m), (n)-[:IS_FRIENDS_WITH]->(k), (m)-[:IS_MARRIED_TO]->(k);\n'))),(0,a.kt)(l.Z,{value:"input",mdxType:"TabItem"},(0,a.kt)("p",null,"Below you can see how the data looks like after you created the nodes and relationships:"),(0,a.kt)("img",{src:n(14193).Z})),(0,a.kt)(l.Z,{value:"run",mdxType:"TabItem"},(0,a.kt)("p",null,"If you're using ",(0,a.kt)("strong",{parentName:"p"},"Memgraph with Docker"),", then the following Cypher query will\nexport the database to the ",(0,a.kt)("inlineCode",{parentName:"p"},"export.json")," file in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules")," directory inside the running Docker container."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},'CALL export_util.json("/usr/lib/memgraph/query_modules/export.json");\n')),(0,a.kt)("p",null,"If you're using ",(0,a.kt)("strong",{parentName:"p"},"Memgraph on Ubuntu, Debian, RPM package or WSL"),", then the\nfollowing Cypher query will export the database to the ",(0,a.kt)("inlineCode",{parentName:"p"},"export.json")," file in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"/users/my_user/export_folder"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},'CALL export_util.json("/users/my_user/export_folder/export.json");\n'))),(0,a.kt)(l.Z,{value:"result",mdxType:"TabItem"},(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"export.json")," file should be similar to the one below, except for the\n",(0,a.kt)("inlineCode",{parentName:"p"},"id")," values that depend on the internal database ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," values:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "id": 6114,\n        "labels": [\n            "Person"\n        ],\n        "properties": {\n            "name": "Anna"\n        },\n        "type": "node"\n    },\n    {\n        "id": 6115,\n        "labels": [\n            "Person"\n        ],\n        "properties": {\n            "name": "John"\n        },\n        "type": "node"\n    },\n    {\n        "id": 6116,\n        "labels": [\n            "Person"\n        ],\n        "properties": {\n            "name": "Kim"\n        },\n        "type": "node"\n    },\n    {\n        "end": 6115,\n        "id": 21120,\n        "label": "IS_FRIENDS_WITH",\n        "properties": {},\n        "start": 6114,\n        "type": "relationship"\n    },\n    {\n        "end": 6116,\n        "id": 21121,\n        "label": "IS_FRIENDS_WITH",\n        "properties": {},\n        "start": 6114,\n        "type": "relationship"\n    },\n    {\n        "end": 6116,\n        "id": 21122,\n        "label": "IS_MARRIED_TO",\n        "properties": {},\n        "start": 6115,\n        "type": "relationship"\n    }\n]\n')))))}g.isMDXComponent=!0},83523:(e,t,n)=>{n.d(t,{ZP:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={toc:[]};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you want to execute this algorithm on graph projections, subgraphs or portions\nof the graph, be sure to check out the guide on\n",(0,a.kt)("a",{parentName:"p",href:"/mage/how-to-guides/run-a-subgraph-module"},"How to run a MAGE module on subgraphs"),".")))}l.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>x});var r=n(87462),a=n(67294),o=n(86010),l=n(12466),u=n(16550),i=n(91980),p=n(67392),s=n(50012);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function c(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,u.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=c(e),[l,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[i,p]=h({queryString:n,groupId:r}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,s.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),f=(()=>{const e=i??d;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{f&&u(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),p(e),g(e)}),[p,g,o]),tabValues:o}}var f=n(72389);const y="tabList__CuJ",b="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:u,selectValue:i,tabValues:p}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),c=e=>{const t=e.currentTarget,n=s.indexOf(t),r=p[n].value;r!==u&&(d(t),i(r))},m=e=>{var t;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>s.push(e),onKeyDown:m,onClick:c},l,{className:(0,o.Z)("tabs__item",b,null==l?void 0:l.className,{"tabs__item--active":u===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function N(e){const t=g(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",y)},a.createElement(k,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function x(e){const t=(0,f.Z)();return a.createElement(N,(0,r.Z)({key:String(t)},e))}},14193:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/export-util-1-6f272764c2ffb63fae58905c1dded702.png"}}]);