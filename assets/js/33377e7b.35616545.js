"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2565],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),g=c(n),m=r,u=g["".concat(l,".").concat(m)]||g[m]||p[m]||o;return n?a.createElement(u,i(i({ref:t},h),{},{components:n})):a.createElement(u,i({ref:t},h))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},75398:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return h},default:function(){return g}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"graph-coloring-algorithm",title:"Graph Coloring",sidebar_label:"Graph Coloring"},l=void 0,c={unversionedId:"algorithms/traditional-graph-analytics/graph-coloring-algorithm",id:"algorithms/traditional-graph-analytics/graph-coloring-algorithm",title:"Graph Coloring",description:"Description",source:"@site/mage/algorithms/traditional-graph-analytics/graph-coloring.md",sourceDirName:"algorithms/traditional-graph-analytics",slug:"/algorithms/traditional-graph-analytics/graph-coloring-algorithm",permalink:"/docs/mage/algorithms/traditional-graph-analytics/graph-coloring-algorithm",editUrl:"https://github.com/memgraph/docs/tree/master/mage/algorithms/traditional-graph-analytics/graph-coloring.md",tags:[],version:"current",frontMatter:{id:"graph-coloring-algorithm",title:"Graph Coloring",sidebar_label:"Graph Coloring"},sidebar:"mage",previous:{title:"Cycle Detection",permalink:"/docs/mage/algorithms/traditional-graph-analytics/cycle-detection-algorithm"},next:{title:"Node Similarity",permalink:"/docs/mage/algorithms/traditional-graph-analytics/node-similarity-algorithm"}},h=[{value:"Description",id:"description",children:[],level:2},{value:"Materials",id:"materials",children:[{value:"Implementation",id:"implementation",children:[],level:3},{value:"Blog posts",id:"blog-posts",children:[],level:3}],level:2},{value:"Use cases",id:"use-cases",children:[],level:2}],p={toc:h};function g(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Certain applications require the special labeling of a graph called ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Graph_coloring"},(0,o.kt)("strong",{parentName:"a"},"graph\ncoloring")),". This \u201cspecial\u201d\nlabeling refers to the assignment of labels (which we call colors) in such a way\nthat connected neighbors must not be given the same color. Since this problem is\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/NP-hardness"},"NP-hard"),", there doesn't exist an\nalgorithm that can solve the problem in a polynomial time. Therefore, various\ncomputer science techniques called\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Heuristic_(computer_science)"},"heuristics")," are\nused to solve ",(0,o.kt)("strong",{parentName:"p"},"graph coloring"),"."),(0,o.kt)("p",null,"Of course, the main part of the problem is in assigning a minimum number of\nlabels. There are greedy algorithms that solve the problem, however not optimal.\nUsing dynamic programming, the fastest algorithm guarantees O(2.44 ^ n)\ncomplexity. While on the other hand, there are heuristic applications like the\none with ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Genetic_algorithm"},"genetic algorithms"),"."),(0,o.kt)("img",{src:"https://i.imgur.com/aZfNygb.png",alt:"drawing",width:"600"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Example of graph coloring on a simple graph. Labels are denoted with different\ncolors.")),(0,o.kt)("h2",{id:"materials"},"Materials"),(0,o.kt)("h3",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage/blob/main/python/graph_coloring.py"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Graph_Coloring-Implementation-FB6E00?style=for-the-badge&logo=github&logoColor=white",alt:"Graph\nColoring"}))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/mage/query-modules/python/graph-coloring"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Graph_Coloring-Documentation-FCC624?style=for-the-badge&logo=python&logoColor=white",alt:"Graph\nColoring"}))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Graph Coloring")," is implemented as part of the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage"},(0,o.kt)("strong",{parentName:"a"},"MAGE"))," project. Be sure to check it out in\nthe link above. \u261d\ufe0f"),(0,o.kt)("h3",{id:"blog-posts"},"Blog posts"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://memgraph.com/blog/optimizing_telco_networks_with_graph_coloring_and_memgraph_mage"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Optimizing_Telco_Networks_with_graph_coloring-FCC624?style=for-the-badge&logo=image/png;base64,iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAMrSURBVFiFzddvqJ9jGAfwz7Mdm3Wm+Q1Dps04e0HbpJMQU0rJO4QQpZgVauTP8v8NIzQ5aSJZRPZCSuQ0ZP6seMOMCCXRwZE5OztH/s1+XlzXsz399sz5nZ1fP75199zPfd/PfX2f67ru7/U8/Mco0MBN6Ouy7a/wYIHX8Cs2dpnAOZgJf2IeDsPqnIAeXIMV2S8fWp1rp4rD8Qc0RRhewSBGsAQ34NNsq7A05wZz7VTRQHNaZeAgDCWrXsxOgyPZ78257/O+Yyg90IcnhNulwfuxJvuwMtcc1wG7DTSLJHAexjuw6WQwGy+VBLbg7y4TmI4T2ROCbqOBZk9lYCFuxbTa5XvjG5EfcBsWtPncLpFbO9hzvgkx+noSBL5rIdNuCHelrd3oZggW4GqcgQPwVJVAP37GL222TZWN397Hmi05XwgxG8ULQktWlBNNzMX2ZNhuCEaxLfuHYE7NmjHMwtNCei/HR1iWpE+t5sBMLJoEgZ8qBI4S9WQn3surNDiQY/34Pcc/xgMYqHpgvohJuwS+wGXZfx6L0/Al4s0fT6PrRLlfJlxfYmES6XgSnosfRD7dnWOPirJf5P2ReAPrqx6YY/91gJDWh4Wsr8RneB9n4XN8mES24TGRjDd3SgdOwzNpaAmGc/yuHO/H9cILw7gUb+E+phaCGbhXlOyrauYLvI4X8a3IldJWI21PWgdW5QYnCLe+K05PHWZhvXD7xS1zexEoRGYumqAdKERkO+4RVa0OS0WWbxQnrMTReE5NMdqXDozhg+zPF3Gci+XYWmO4RxSnG/O6rnzTxDycUl1cok9UqVYCO3B2rn0Vh4ovot9qjC/Gs2nwZHxZmTsea3GwKEi7MS5cPxHWCPncKt6uigLXirDc2fJiJXpxAS5McsdgrBAuWi7kshXjuCUfGMRJIgc2i4r2CY7AkzgWV+BH3G7i43w6Nk0XMR0SyTTS0obFZ/mgcNtD4vw3cYfQjpfxDi4SR61HeHS0Zr9q24C1pTT+GwZEco7jL3GWzxT6PoQr8WYb++wXZog/pw3CEztFOX0E5+vA/0E7HrhOlNvNQnRGp2r0f4V/AIO15zW1WziLAAAAAElFTkSuQmCC&logoColor=white",alt:"Betweenness\nCentrality"}))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("em",{parentName:"p"},"When making a call, the phone must have an established connection with the\nbase station. The antenna on the base station has a particular signal strength\nthat decreases with distance, so the phone should be connected to the base\nstation nearby to provide the required quality. The major challenge is to\nensure the quality of calls on the move. If the phone moves away from the base\nstation, the signal diminishes, and the phone disconnects. To avoid call\ninterruptions, the phone should find a new base station, the closest one at\nthat moment, and connect to it."))),(0,o.kt)("h2",{id:"use-cases"},"Use cases"),(0,o.kt)("p",null,"Many problems can be modeled as the problem of coloring graphs. Basically, such\nproblems are of an optimization and planning nature."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/mage/use-cases/transportation"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Transportation-Application-8A477F?style=for-the-badge",alt:"Transportation"}))),(0,o.kt)("p",null,"Problems such as assigning aircraft to flights or designing a taxi schedule,\nwhen shaped as graphs, are possible to solve using graph coloring. The coloring\ngraph can help with conflicting systems, where there must not be any particular\nassignment, and such nodes are colored with other colors."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/mage/use-cases/telecommunication"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Telecommunications-Application-8A477F?style=for-the-badge",alt:"Telecommunications"}))),(0,o.kt)("p",null,"The phone needs to distinguish base stations to ensure a smooth transition\nbetween them. Various coding systems are used to identify base stations in the\nnetwork. The number of different codes in a particular coding system is limited,\nso they need to be reused. However, if two close base stations have the same\ncode, their signals interfere, and the phone cannot distinguish them. In case\nthe phone moves between two base stations with the same code, the phone can\nincorrectly reconnect to the base station from which area it moves out, causing\nthe call to drop."),(0,o.kt)("p",null,"Therefore, careful code assignment (code planning) is required to prevent\nneighboring base stations from using the same code. If done properly, code\nassigning significantly reduces the number of errors that occur while the phone\nswitches base stations."))}g.isMDXComponent=!0}}]);