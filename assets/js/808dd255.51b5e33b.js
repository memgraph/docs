"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[52925],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return g}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),h=l(a),g=r,d=h["".concat(s,".").concat(g)]||h[g]||c[g]||o;return a?n.createElement(d,i(i({ref:t},m),{},{components:a})):n.createElement(d,i({ref:t},m))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},10592:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return c}});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=["components"],p={id:"temporal-graph-networks",title:"Temporal Graph Networks",sidebar_label:"Temporal Graph Networks"},s=void 0,l={unversionedId:"algorithms/machine-learning-graph-analytics/temporal-graph-networks",id:"algorithms/machine-learning-graph-analytics/temporal-graph-networks",title:"Temporal Graph Networks",description:"Description",source:"@site/mage/algorithms/machine-learning-graph-analytics/temporal-graph-networks.md",sourceDirName:"algorithms/machine-learning-graph-analytics",slug:"/algorithms/machine-learning-graph-analytics/temporal-graph-networks",permalink:"/docs/mage/algorithms/machine-learning-graph-analytics/temporal-graph-networks",editUrl:"https://github.com/memgraph/docs/tree/master/mage/algorithms/machine-learning-graph-analytics/temporal-graph-networks.md",tags:[],version:"current",frontMatter:{id:"temporal-graph-networks",title:"Temporal Graph Networks",sidebar_label:"Temporal Graph Networks"},sidebar:"mage",previous:{title:"Graph Clustering",permalink:"/docs/mage/algorithms/machine-learning-graph-analytics/graph-clustering-algorithm"},next:{title:"Bioinformatics",permalink:"/docs/mage/use-cases/bioinformatics"}},m={},c=[{value:"Description",id:"description",level:2},{value:"Materials",id:"materials",level:2},{value:"Implementation",id:"implementation",level:3},{value:"Use cases",id:"use-cases",level:2}],h={toc:c};function g(e){var t=e.components,p=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},h,p,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"temporal_graph_networks (TGNs)")," are a type of ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://distill.pub/2021/gnn-intro/"},"graph neural network\n(GNN)"))," for dynamic graphs. In recent\nyears, ",(0,o.kt)("strong",{parentName:"p"},"GNNs")," have become very popular due to their ability to perform a wide\nvariety of machine learning tasks on graphs, such as link prediction, node\nclassification, and so on. This rise started with ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://arxiv.org/pdf/1609.02907.pdf"},"Graph convolutional\nnetworks (GCN)"))," introduced by ",(0,o.kt)("em",{parentName:"p"},"Kipf et\nal."),", followed by ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://arxiv.org/pdf/1706.02216.pdf"},"GraphSAGE")),"\nintroduced by ",(0,o.kt)("em",{parentName:"p"},"Hamilton et al."),", and recently a new method was presented which\nintroduces ",(0,o.kt)("strong",{parentName:"p"},"attention mechanism")," to graphs, known as ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://arxiv.org/pdf/1710.10903.pdf?ref=https://githubhelp.com"},"Graph attention\nnetworks\n(GAT)")),", by\n",(0,o.kt)("em",{parentName:"p"},"Veli\u010dkovi\u0107 et al"),". The last two methods offer a great possibility for inductive\nlearning. But they haven't been specifically developed to handle different\nevents occurring on graphs, such as ",(0,o.kt)("strong",{parentName:"p"},"node features updates"),", ",(0,o.kt)("strong",{parentName:"p"},"node\ndeletion"),", ",(0,o.kt)("strong",{parentName:"p"},"edge deletion")," and so on. These events happen regularly in\n",(0,o.kt)("strong",{parentName:"p"},"real-world")," examples such as the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://twitter.com/memgraphmage"},"Twitter\nnetwork")),", where users update their profile,\ndelete their profile or just unfollow another user."),(0,o.kt)("p",null,"In their work, Rossi et al. introduce ",(0,o.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/2006.10637"},(0,o.kt)("strong",{parentName:"a"},"Temporal graph\nnetworks")),", an architecture for machine\nlearning on streamed graphs, a rapidly-growing ML use case."),(0,o.kt)("p",null,"There exist two main modalities of ",(0,o.kt)("strong",{parentName:"p"},"dynamic")," graphs. Discrete-time dynamic\ngraphs (DTDG) represent snapshots of static graphs taken at intervals in time.\nOn the other hand, continuous-time dynamic graphs (CTDG) are more general and\ncan be represented as timestamped lists of events which may include edge\naddition or deletion, node addition or deletion, and node or edge feature\ntransformations."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Temporal graph networks")," is a modality of ",(0,o.kt)("strong",{parentName:"p"},"CTDG")," that consists of temporal\n(timestamped) events. An ",(0,o.kt)("strong",{parentName:"p"},"interaction")," event represents a temporal edge\ncreation, and a ",(0,o.kt)("strong",{parentName:"p"},"nodewise")," event represents node creation or feature update."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"temporal-computation-graph",src:a(4431).Z,width:"1743",height:"1175"})),(0,o.kt)("h2",{id:"materials"},"Materials"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Firstly, read the ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://arxiv.org/pdf/2006.10637.pdf"},"original paper")),"."),(0,o.kt)("li",{parentName:"ul"},"Afterward, you can also watch an explanation of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.youtube.com/watch?v=0tw66aTfWaI&t=1759s&ab_channel=TheAIEpiphany"},"temporal graph\nnetworks")),"."),(0,o.kt)("li",{parentName:"ul"},"Be sure to check our explanation of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://memgraph.com/blog/introduction-to-node-embedding"},"node\nembeddings"))," if you\nstill have a problem with understanding what node embeddings are.")),(0,o.kt)("p",null,"And finally, we prepared an example of ",(0,o.kt)("a",{parentName:"p",href:"https://hackmd.io/yy1mb9CVTYadmZz78iN5Jg"},(0,o.kt)("strong",{parentName:"a"},"link prediction")," on the Amazon\ndataset"),"."),(0,o.kt)("h3",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage/blob/main/python/tgn.py"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Temporal_Graph_Networks-Implementation-FB6E00?style=for-the-badge&logo=github&logoColor=white",alt:"Temporal Graph\nNetworks"}))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/mage/query-modules/python/temporal-graph-networks"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Temporal_Graph_Networks-Documentation-FCC624?style=for-the-badge&logo=python&logoColor=white",alt:"Temporal Graph\nNetworks"}))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Temporal graph networks")," are implemented as part of the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage"},(0,o.kt)("strong",{parentName:"a"},"MAGE"))," project. Make sure to check it out\nin the link above. \u261d\ufe0f"),(0,o.kt)("h2",{id:"use-cases"},"Use cases"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/mage/use-cases/social-media"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Social_networks-Application-8A477F?style=for-the-badge",alt:"Social\nnetworks"}))),(0,o.kt)("p",null,"Temporal graph networks can be used to find communities in social networks like\n",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com"},"Twitter"),", ",(0,o.kt)("a",{parentName:"p",href:"https://www.facebook.com/"},"Facebook"),", and so\non. To find communities, we can use ",(0,o.kt)("strong",{parentName:"p"},"semi-supervised")," learning, and from\n",(0,o.kt)("strong",{parentName:"p"},"graph structure")," and ",(0,o.kt)("strong",{parentName:"p"},"available")," labels, ",(0,o.kt)("strong",{parentName:"p"},"TGN")," will try to predict new\n",(0,o.kt)("strong",{parentName:"p"},"labels")," and find communities that way."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/mage/algorithms/machine-learning-graph-analytics/link-prediction-algorithm"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Link_prediction-Application-8A477F?style=for-the-badge",alt:"Link\nprediction"}))),(0,o.kt)("p",null,"We can use temporal graph networks in the case of link prediction. In the link\nprediction task, ",(0,o.kt)("strong",{parentName:"p"},"TGN")," needs to correctly predict which edges won't appear -\n",(0,o.kt)("em",{parentName:"p"},"positive samples")," and which edges will not appear - ",(0,o.kt)("em",{parentName:"p"},"negative samples"),". We use\nthe edges that arrive in batches of a stream as a ",(0,o.kt)("em",{parentName:"p"},"positive sample"),", and we\nartificially create ",(0,o.kt)("em",{parentName:"p"},"negative samples"),". The ",(0,o.kt)("em",{parentName:"p"},"Negative samples")," consist of nodes\nthat are not linked. Now, all that is left is to fire up ",(0,o.kt)("strong",{parentName:"p"},"TGN")," in\n",(0,o.kt)("strong",{parentName:"p"},"self_supervised")," mode and it will do the work for you."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/mage/algorithms/machine-learning-graph-analytics/node-classification-algorithm"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Node_classification-Application-8A477F?style=for-the-badge",alt:"Node\nclassification"}))),(0,o.kt)("p",null,"Furthermore, we can use temporal graph networks for the task of node\nclassification. Again, with ",(0,o.kt)("strong",{parentName:"p"},"edge features"),", ",(0,o.kt)("strong",{parentName:"p"},"node features"),", and ",(0,o.kt)("strong",{parentName:"p"},"graph\nstructure"),", we will try to predict labels. In social networks, labels may\nindicate interests, beliefs, or demographics."))}g.isMDXComponent=!0},4431:function(e,t,a){t.Z=a.p+"assets/images/temporal-computation-graph-d1862b386d2a0a9db60e66dc8eb43dbd.png"}}]);