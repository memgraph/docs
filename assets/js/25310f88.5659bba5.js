"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[98103],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},65639:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"javascript",title:"JavaScript quick start",sidebar_label:"JavaScript"},p=void 0,l={unversionedId:"connect-to-memgraph/methods/building-applications/javascript",id:"version-2.0.0/connect-to-memgraph/methods/building-applications/javascript",isDocsHomePage:!1,title:"JavaScript quick start",description:"At the end of this guide, you will have created a simple JavaScript **`Hello,",source:"@site/memgraph_versioned_docs/version-2.0.0/connect-to-memgraph/methods/building-applications/javascript.md",sourceDirName:"connect-to-memgraph/methods/building-applications",slug:"/connect-to-memgraph/methods/building-applications/javascript",permalink:"/docs/memgraph/2.0.0/connect-to-memgraph/methods/building-applications/javascript",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.0.0/connect-to-memgraph/methods/building-applications/javascript.md",tags:[],version:"2.0.0",frontMatter:{id:"javascript",title:"JavaScript quick start",sidebar_label:"JavaScript"},sidebar:"version-2.0.0/memgraph",previous:{title:"Node.js",permalink:"/docs/memgraph/2.0.0/connect-to-memgraph/methods/building-applications/nodejs"},next:{title:"PHP",permalink:"/docs/memgraph/2.0.0/connect-to-memgraph/methods/building-applications/php"}},c=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Basic Setup",id:"basic-setup",children:[],level:2},{value:"Where to next?",id:"where-to-next",children:[],level:2}],m={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"At the end of this guide, you will have created a simple JavaScript ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Hello,\nWorld!"))," program that connects to the Memgraph database and executes simple\nqueries."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Running queries directly from a web browser is ",(0,o.kt)("strong",{parentName:"p"},"not a recommended usage"),"\nbecause of additional requirements and possible performance issues. In other\nwords, we encourage users to use server-side libraries and clients for top\nperformance whenever possible."))),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"To follow this guide, you will need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("strong",{parentName:"li"},"running Memgraph instance"),". If you need to set up Memgraph, take a look\nat the ",(0,o.kt)("a",{parentName:"li",href:"/docs/memgraph/2.0.0/installation"},"Installation guide"),"."),(0,o.kt)("li",{parentName:"ul"},"A basic understanding of graph databases and the property graph model.")),(0,o.kt)("h2",{id:"basic-setup"},"Basic Setup"),(0,o.kt)("p",null,"Memgraph doesn't have integrated support for ",(0,o.kt)("inlineCode",{parentName:"p"},"WebSocket")," which is required\nduring the execution of Cypher commands in any web browser. If you want to run\n",(0,o.kt)("inlineCode",{parentName:"p"},"Cypher")," queries from a web browser,\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/novnc/websockify-js"},"websockify")," has to be up and running.\nRequests from web browsers are wrapped into ",(0,o.kt)("inlineCode",{parentName:"p"},"WebSocket")," messages, and a proxy is\nneeded to handle the overhead. The proxy has to be configured so that the web\nbrowser driver sends requests to the proxy port which sends them to Memgraph's\nBolt port. Presented with Cypher language, the communication goes like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},'(:Browser:Javascript)-[:CONNECTS_TO]->(:Websockify { mode: "WS" })-[:PROXY_TO]->(:Memgraph { "encryption": "off" })\n')),(0,o.kt)("p",null,"Proxy ",(0,o.kt)("inlineCode",{parentName:"p"},"Websockify")," runs in unencrypted HTTP (ws://) mode by default which isn't\nencrypted, so to match that, Memgraph needs to be running with encryption turned\noff (the default setting)."),(0,o.kt)("p",null,"The code snippet below outlines a basic usage example that executes a couple of\nelementary queries. The first two steps are about starting Websockify to proxy\nqueries to the database."),(0,o.kt)("p",null,"Let's jump in and connect a simple program to Memgraph."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1.")," Create a new directory for your application, for example ",(0,o.kt)("inlineCode",{parentName:"p"},"/MyApp")," and\nposition yourself in it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2.")," Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"websockify.sh")," script with the\nfollowing code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\nif [ ! -d "websockify-js" ]; then\n    git clone https://github.com/novnc/websockify-js.git\nfi\ncd websockify-js/websockify\nnpm install\n./websockify.js 9999 :7687\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3.")," Run ",(0,o.kt)("inlineCode",{parentName:"p"},"Websockify")," with the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"bash websockify.sh\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4.")," To make the actual program, create a ",(0,o.kt)("inlineCode",{parentName:"p"},"program.html")," file and add the\nfollowing code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>Javascript Browser Example | Memgraph</title>\n    <script src="https://cdn.jsdelivr.net/npm/neo4j-driver"><\/script>\n  </head>\n  <body>\n    <p>Check console for Cypher query outputs...</p>\n    <script>\n      const driver = neo4j.driver(\n        "bolt://localhost:9999",\n        neo4j.auth.basic("", "")\n      );\n\n      (async function main() {\n        const session = driver.session();\n\n        try {\n          await session.run("MATCH (n) DETACH DELETE n;");\n          console.log("Database cleared.");\n\n          await session.run("CREATE (alice:Person {name: \'Alice\', age: 22});");\n          console.log("Record created.");\n\n          const result = await session.run("MATCH (n) RETURN n;");\n\n          console.log("Record matched.");\n          const alice = result.records[0].get("n");\n          const label = alice.labels[0];\n          const name = alice.properties["name"];\n          const age = alice.properties["age"];\n\n          if (label != "Person" || name != "Alice" || age != 22) {\n            console.error("Data doesn\'t match.");\n          }\n\n          console.log("Label: " + label);\n          console.log("Name: " + name);\n          console.log("Age: " + age);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          session.close();\n        }\n\n        driver.close();\n      })();\n    <\/script>\n  </body>\n</html>\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"5.")," Open the ",(0,o.kt)("inlineCode",{parentName:"p"},"program.html")," file in your browser and look for the output in\nthe console."),(0,o.kt)("p",null,"You should see an output similar to the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Database cleared.\nRecord created.\nRecord matched.\nLabel: Person\nName: Alice\nAge: 22\n")),(0,o.kt)("h2",{id:"where-to-next"},"Where to next?"),(0,o.kt)("p",null,"For real-world examples of how to use Memgraph, we suggest you take a look at\nthe ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.0.0/tutorials"},"Tutorials"))," page. You can also browse through\nthe ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.0.0/database-functionalities"},"Database functionalities")),"\nsection to get an overview of all the functionalities Memgraph offers."))}u.isMDXComponent=!0}}]);