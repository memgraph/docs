(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{190:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return b}));var a=n(3),o=n(8),r=(n(0),n(356)),i=n(361),s=n(362),l={id:"windows-installation-troubleshooting",title:"Troubleshooting installation on Windows",sidebar_label:"Installation troubleshooting",slug:"/windows-installation-troubleshooting"},c={unversionedId:"installation/windows/windows-installation-troubleshooting",id:"installation/windows/windows-installation-troubleshooting",isDocsHomePage:!1,title:"Troubleshooting installation on Windows",description:"<Tabs",source:"@site/docs/installation/windows/windows-installation-troubleshooting.md",slug:"/windows-installation-troubleshooting",permalink:"/memgraph/next/windows-installation-troubleshooting",editUrl:"https://github.com/memgraph/docs/tree/master/docs/installation/windows/windows-installation-troubleshooting.md",version:"current",sidebar_label:"Installation troubleshooting",sidebar:"memgraph",previous:{title:"Install Memgraph on Windows with WSL",permalink:"/memgraph/next/install-memgraph-on-windows-wsl"},next:{title:"Tutorials overview",permalink:"/memgraph/next/tutorials/tutorials"}},u=[{value:"Issues when connecting to Memgraph",id:"issues-when-connecting-to-memgraph",children:[]},{value:"Issues with connecting <strong>mg_client</strong> to the database",id:"issues-with-connecting-mg_client-to-the-database",children:[]},{value:"Find the IP address of a Docker Container",id:"find-the-ip-address-of-a-docker-container",children:[]},{value:"Accessing files from your Windows system",id:"accessing-files-from-your-windows-system",children:[]},{value:"Unable to install the Memgraph package with <code>dpkg</code>",id:"unable-to-install-the-memgraph-package-with-dpkg",children:[]},{value:"Multiple notes when starting Memgraph",id:"multiple-notes-when-starting-memgraph",children:[]}],p={toc:u};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)(i.a,{groupId:"operating-systems",defaultValue:"docker",values:[{label:"Docker \ud83d\udc33",value:"docker"},{label:"Windows Subsystem for Linux (WSL)",value:"wsl"}],mdxType:"Tabs"},Object(r.b)(s.a,{value:"docker",mdxType:"TabItem"},Object(r.b)("h2",{id:"issues-when-connecting-to-memgraph"},"Issues when connecting to Memgraph"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"docker run memgraph \n")),Object(r.b)("p",null,"While this command will start a Memgraph instance, not publishing the port will\ncause problems when trying to connect to the database via ",Object(r.b)("strong",{parentName:"p"},"Memgraph Lab"),",\n",Object(r.b)("strong",{parentName:"p"},"mg_client")," or ",Object(r.b)("strong",{parentName:"p"},"mgconsole"),". To avoid this, you should publish the\ncontainer's port to the host using the ",Object(r.b)("inlineCode",{parentName:"p"},"-p")," flag and by specifying the port:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"docker run -p 7687:7687 memgraph \n")),Object(r.b)("h2",{id:"issues-with-connecting-mg_client-to-the-database"},"Issues with connecting ",Object(r.b)("strong",{parentName:"h2"},"mg_client")," to the database"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"docker run -it --entrypoint=mg_client memgraph --host HOST --use-ssl=False \n")),Object(r.b)("p",null,"Although unlikely, sometimes there are issues with connecting ",Object(r.b)("strong",{parentName:"p"},"mg_client")," to\nthe Docker Container\u2019s IP address because it is running on a custom IP rather\nthan ",Object(r.b)("inlineCode",{parentName:"p"},"localhost"),". This problem is most often accompanied with the following\nerror:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"Connection failure: Couldn't connect to 127.0.0.1:7687! \n")),Object(r.b)("p",null,"To fix this issue, just replace ",Object(r.b)("inlineCode",{parentName:"p"},"HOST")," from the first command with\n",Object(r.b)("inlineCode",{parentName:"p"},"host.docker.internal"),". To find out more about networking in Docker, take a\nlook at ",Object(r.b)("a",{parentName:"p",href:"https://docs.docker.com/docker-for-windows/networking/"},"this guide"),"."),Object(r.b)("h2",{id:"find-the-ip-address-of-a-docker-container"},"Find the IP address of a Docker Container"),Object(r.b)("p",null,"Although unlikely, some users might experience minor difficulties after the\nDocker installation. Instead of running on ",Object(r.b)("inlineCode",{parentName:"p"},"localhost"),", a Docker container for\nMemgraph may be running on a custom IP address. Fortunately, that IP address can\nbe found as follows:"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"1.")," Determine the ID of the Memgraph Container by issuing the\ncommand ",Object(r.b)("inlineCode",{parentName:"p"},"docker ps"),". The user should get an output similar to the following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},'CONTAINER ID    IMAGE       COMMAND                  CREATED\n9397623cd87e    memgraph    "/usr/lib/memgraph/m\u2026"   2 seconds ago \n')),Object(r.b)("p",null,"At this point, it is important to remember the container ID of the Memgraph\nImage. In our case, that is ",Object(r.b)("inlineCode",{parentName:"p"},"9397623cd87e"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"2.")," Use the this ID to retrieve the IP address of the Container:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' 9397623cd87e \n")),Object(r.b)("p",null,"The command above will yield the IP address that should be used when connecting\nto Memgraph via ",Object(r.b)("strong",{parentName:"p"},"Memgraph Lab"),", ",Object(r.b)("strong",{parentName:"p"},"mgconsole")," or ",Object(r.b)("strong",{parentName:"p"},"mg_client")," as described in\nthe ",Object(r.b)("a",{parentName:"p",href:"/memgraph/next/getting-started/querying"},"querying")," section. Just replace\n",Object(r.b)("inlineCode",{parentName:"p"},"HOST")," from the following command with the appropriate IP address: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"docker run -it --entrypoint=mg_client memgraph --host HOST --use-ssl=False \n"))),Object(r.b)(s.a,{value:"wsl",mdxType:"TabItem"},Object(r.b)("h2",{id:"accessing-files-from-your-windows-system"},"Accessing files from your Windows system"),Object(r.b)("p",null,"Usually, you can find the Windows users directories in this location:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"/mnt/<drive>/Users/<username>\n")),Object(r.b)("h2",{id:"unable-to-install-the-memgraph-package-with-dpkg"},"Unable to install the Memgraph package with ",Object(r.b)("inlineCode",{parentName:"h2"},"dpkg")),Object(r.b)("p",null,"While running the following ",Object(r.b)("inlineCode",{parentName:"p"},"dpkg")," command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"dpkg -i /path/to/memgraph_<version>.deb\n")),Object(r.b)("p",null,"you may encounter errors that resemble the following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"dpkg: error processing package memgraph (--install): dependency problems -\nleaving unconfigured Errors were encountered while processing: memgraph\n")),Object(r.b)("p",null,"These errors indicate that you don\u2019t have all of the necessary dependencies\ninstalled. To install the missing dependencies and finish the installation,\nissue the following command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"sudo apt-get install -f\n")),Object(r.b)("h2",{id:"multiple-notes-when-starting-memgraph"},"Multiple notes when starting Memgraph"),Object(r.b)("p",null,"When you start a Memgraph instance, you may see the following list of notes in\nyour terminal:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-console"},"You are running Memgraph v1.4.0-community\n\nNOTE: Please install networkx to be able to use graph_analyzer module. Using Python:\n3.8.2 (default, Jul 16 2020, 14:00:26)\n[GCC 9.3.0]\n\nNOTE: Please install networkx to be able to use Memgraph NetworkX wrappers. Using Python:\n3.8.2 (default, Jul 16 2020, 14:00:26)\n[GCC 9.3.0]\n\nNOTE: Please install networkx, numpy, scipy to be able to use proxied NetworkX algorithms. E.g., CALL nxalg.pagerank(...).\nUsing Python:\n3.8.2 (default, Jul 16 2020, 14:00:26)\n[GCC 9.3.0]\n\nNOTE: Please install networkx to be able to use wcc module.\nUsing Python:\n3.8.2 (default, Jul 16 2020, 14:00:26)\n[GCC 9.3.0]\n")),Object(r.b)("p",null,"If you wish to work with built-in NetworkX modules in Memgraph, you need to\ninstall the following Python libraries: "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://numpy.org/"},"NumPy")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://www.scipy.org/"},"SciPy")," "),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://networkx.org/"},"NetworkX"))),Object(r.b)("p",null,"For more information on how to install Python libraries in WSL, follow ",Object(r.b)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/python/web-frameworks#install-python-pip-and-venv"},"this\nguide"),".\nIf you are not interested in working with query modules that depend on these\nlibraries, you can ignore the warnings."))))}b.isMDXComponent=!0},356:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),u=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,d=p["".concat(i,".").concat(m)]||p[m]||b[m]||r;return n?o.a.createElement(d,s(s({ref:t},c),{},{components:n})):o.a.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},357:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},359:function(e,t,n){"use strict";var a=n(0),o=n(360);t.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},360:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)(void 0);t.a=o},361:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(359),i=n(357),s=n(59),l=n.n(s);var c=37,u=39;t.a=function(e){var t=e.lazy,n=e.block,s=e.defaultValue,p=e.values,b=e.groupId,m=e.className,d=Object(r.a)(),h=d.tabGroupChoices,g=d.setTabGroupChoices,f=Object(a.useState)(s),w=f[0],O=f[1],j=a.Children.toArray(e.children),y=[];if(null!=b){var v=h[b];null!=v&&v!==w&&p.some((function(e){return e.value===v}))&&O(v)}var N=function(e){var t=e.target,n=y.indexOf(t),a=j[n].props.value;O(a),null!=b&&(g(b,a),setTimeout((function(){var e,n,a,o,r,i,s,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,o=e.bottom,r=e.right,i=window,s=i.innerHeight,c=i.innerWidth,n>=0&&r<=c&&o<=s&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l.a.tabItemActive),setTimeout((function(){return t.classList.remove(l.a.tabItemActive)}),2e3))}),150))},k=function(e){var t,n;switch(e.keyCode){case u:var a=y.indexOf(e.target)+1;n=y[a]||y[0];break;case c:var o=y.indexOf(e.target)-1;n=y[o]||y[y.length-1]}null===(t=n)||void 0===t||t.focus()};return o.a.createElement("div",{className:"tabs-container"},o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n},m)},p.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":w===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:k,onFocus:N,onClick:N},n)}))),t?Object(a.cloneElement)(j.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},j.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}},362:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return o.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}}}]);