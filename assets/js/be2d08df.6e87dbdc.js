(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4241],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69290:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var r=n(22122),o=n(19756),a=(n(67294),n(3905)),i=["components"],l={id:"go",title:"Go quick start",sidebar_label:"Go"},p=void 0,s={unversionedId:"connect-to-memgraph/methods/building-applications/go",id:"connect-to-memgraph/methods/building-applications/go",isDocsHomePage:!1,title:"Go quick start",description:"At the end of this guide, you will have created a simple Go Hello, World! program that connects to the Memgraph database and executes simple queries.",source:"@site/docs/connect-to-memgraph/methods/building-applications/go.md",sourceDirName:"connect-to-memgraph/methods/building-applications",slug:"/connect-to-memgraph/methods/building-applications/go",permalink:"/memgraph/next/connect-to-memgraph/methods/building-applications/go",editUrl:"https://github.com/memgraph/docs/tree/master/docs/connect-to-memgraph/methods/building-applications/go.md",version:"current",frontMatter:{id:"go",title:"Go quick start",sidebar_label:"Go"},sidebar:"memgraph",previous:{title:"Java",permalink:"/memgraph/next/connect-to-memgraph/methods/building-applications/java"},next:{title:"JavaScript",permalink:"/memgraph/next/connect-to-memgraph/methods/building-applications/javascript"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Basic Setup",id:"basic-setup",children:[]},{value:"Where to next?",id:"where-to-next",children:[]}],u={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"At the end of this guide, you will have created a simple Go ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Hello, World!"))," program that connects to the Memgraph database and executes simple queries."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"To follow this guide, you will need:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("strong",{parentName:"li"},"running Memgraph instance"),". If you need to set up Memgraph, take a look at the ",(0,a.kt)("a",{parentName:"li",href:"/memgraph/next/installation"},"Installation guide"),"."),(0,a.kt)("li",{parentName:"ul"},"A basic understanding of graph databases and the property graph model."),(0,a.kt)("li",{parentName:"ul"},"The newest version of ",(0,a.kt)("strong",{parentName:"li"},"Go")," ",(0,a.kt)("a",{parentName:"li",href:"https://golang.org/doc/install"},"installed"),".")),(0,a.kt)("h2",{id:"basic-setup"},"Basic Setup"),(0,a.kt)("p",null,"We'll be using a simple Go application to demonstrate how to connect to a running Memgraph instance."),(0,a.kt)("p",null,"Let's jump in and create our application."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1.")," Create a new directory for your app, for example ",(0,a.kt)("inlineCode",{parentName:"p"},"/MyApp")," and position yourself in it.",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"2.")," Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"program.go")," file and add the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Go"},'package main\n\nimport "github.com/neo4j/neo4j-go-driver/neo4j"\nimport "fmt"\n\nfunc main() {\n    driver, err := neo4j.NewDriver("bolt://localhost:7687", neo4j.BasicAuth("", "", ""))\n\n    if err != nil {\n        fmt.Println(err)\n    }\n    defer driver.Close()\n\n    session, err := driver.Session(neo4j.AccessModeWrite)\n    if err != nil {\n        fmt.Println(err)\n    }\n    defer session.Close()\n\n    greeting, err := session.WriteTransaction(func(transaction neo4j.Transaction) (interface{}, error) {\n        result, err := transaction.Run(\n            "CREATE (a:Greeting) SET a.message = $message RETURN \'Node \' + id(a) + \': \' + a.message",\n            map[string]interface{}{"message": "Hello, World!"})\n        if err != nil {\n            return nil, err\n        }\n\n        if result.Next() {\n            return result.Record().GetByIndex(0), nil\n        }\n\n        return nil, result.Err()\n    })\n    if err != nil {\n        fmt.Println(err)\n    }\n\n    fmt.Println(greeting.(string))\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3.")," Add the ",(0,a.kt)("strong",{parentName:"p"},"Bolt driver")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"/MyApp")," directory with the command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"go get github.com/neo4j/neo4j-go-driver/neo4j\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4.")," Run the app with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"go run .\\program.go\n")),(0,a.kt)("p",null,"You should see an output similar to the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Node 1: Hello, World!\n")),(0,a.kt)("h2",{id:"where-to-next"},"Where to next?"),(0,a.kt)("p",null,"For real-world examples of how to use Memgraph, we suggest you take a look at the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph/next/tutorials"},"Tutorials"))," page.\nYou can also browse through the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph/next/database-functionalities"},"Database functionalities"))," section to get an overview of all the functionalities Memgraph offers."))}m.isMDXComponent=!0}}]);