"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8967],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return g}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),m=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=m(r),g=a,h=u["".concat(s,".").concat(g)]||u[g]||c[g]||o;return r?n.createElement(h,i(i({ref:t},l),{},{components:r})):n.createElement(h,i({ref:t},l))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},38849:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return l},default:function(){return u}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],p={id:"drivers",title:"Drivers",sidebar_label:"Drivers"},s=void 0,m={unversionedId:"connect-to-memgraph/methods/drivers",id:"version-2.1.1/connect-to-memgraph/methods/drivers",title:"Drivers",description:"Quick start guides",source:"@site/memgraph_versioned_docs/version-2.1.1/connect-to-memgraph/methods/drivers.md",sourceDirName:"connect-to-memgraph/methods",slug:"/connect-to-memgraph/methods/drivers",permalink:"/docs/memgraph/connect-to-memgraph/methods/drivers",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.1.1/connect-to-memgraph/methods/drivers.md",tags:[],version:"2.1.1",frontMatter:{id:"drivers",title:"Drivers",sidebar_label:"Drivers"},sidebar:"version-2.1.1/memgraph",previous:{title:"mgconsole",permalink:"/docs/memgraph/connect-to-memgraph/methods/mgconsole"},next:{title:"Python",permalink:"/docs/memgraph/connect-to-memgraph/methods/building-applications/python"}},l=[{value:"Quick start guides",id:"quick-start-guides",children:[],level:2},{value:"Supported Languages",id:"supported-languages",children:[],level:2},{value:"Secure Sockets Layer (SSL)",id:"secure-sockets-layer",children:[],level:2}],c={toc:l};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"quick-start-guides"},"Quick start guides"),(0,o.kt)("p",null,"The following guides describe how to create a simple ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Hello, World!"))," program\nthat connects to Memgraph and executes simple queries:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/python"},"Python"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/rust"},"Rust"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/c-sharp"},"C#"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/java"},"Java"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/go"},"Go"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/nodejs"},"Node.js"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/javascript"},"JavaScript"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/connect-to-memgraph/methods/building-applications/php"},"PHP")))),(0,o.kt)("h2",{id:"supported-languages"},"Supported Languages"),(0,o.kt)("p",null,"If users wish to query Memgraph programmatically, they can do so using the ",(0,o.kt)("a",{parentName:"p",href:"https://7687.org/"},"Bolt\nprotocol"),". Bolt was designed for efficient communication with\ngraph databases and ",(0,o.kt)("strong",{parentName:"p"},"Memgraph supports versions 1 and 4")," of the protocol. Bolt\nprotocol drivers for some popular programming languages are listed below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/pymgclient"},"Python"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mgclient"},"C/C++"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/rsmgclient"},"Rust"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-javascript-driver"},"Node.js"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-dotnet-driver"},"C#"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-go-driver"},"Go"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/zmactep/hasbolt"},"Haskell"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-java-driver"},"Java"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-javascript-driver"},"JavaScript"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4j-php/Bolt"},"PHP"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/neo4jrb/neo4j"},"Ruby")))),(0,o.kt)("h2",{id:"secure-sockets-layer"},"Secure Sockets Layer (SSL)"),(0,o.kt)("p",null,"Secure connections are supported and disabled by default. The server initially\nships with a self-signed testing certificate. The certificate can be replaced by\nediting the following parameters in ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/memgraph/memgraph.conf"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"--bolt-cert-file=/path/to/ssl/certificate.pem\n--bolt-key-file=/path/to/ssl/privatekey.pem\n")),(0,o.kt)("p",null,"To disable SSL support and use insecure connections to the database you should\nset both parameters (",(0,o.kt)("inlineCode",{parentName:"p"},"--bolt-cert-file")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--bolt-key-file"),") to empty values."))}u.isMDXComponent=!0}}]);