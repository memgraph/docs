"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67512],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96860:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={id:"go",title:"Go quick start",sidebar_label:"Go"},i=void 0,s={unversionedId:"connect-to-memgraph/drivers/go",id:"connect-to-memgraph/drivers/go",title:"Go quick start",description:"At the end of this guide, you will have created a simple Go Hello, World!",source:"@site/docs/connect-to-memgraph/drivers/go.md",sourceDirName:"connect-to-memgraph/drivers",slug:"/connect-to-memgraph/drivers/go",permalink:"/docs/memgraph/next/connect-to-memgraph/drivers/go",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/docs/connect-to-memgraph/drivers/go.md",tags:[],version:"current",frontMatter:{id:"go",title:"Go quick start",sidebar_label:"Go"},sidebar:"memgraph",previous:{title:"Java",permalink:"/docs/memgraph/next/connect-to-memgraph/drivers/java"},next:{title:"Node.js",permalink:"/docs/memgraph/next/connect-to-memgraph/drivers/nodejs"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Where to next?",id:"where-to-next",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"At the end of this guide, you will have created a simple Go ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Hello, World!")),"\nprogram that connects to the Memgraph database and executes simple queries."),(0,o.kt)("admonition",{title:"Go driver",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You can find the official Go driver on\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/neo4j/neo4j-go-driver"},"GitHub"),".")),(0,o.kt)("admonition",{title:"Go Object Modeled Graph (OMG)",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you are looking for something similar to the Object Graph Mapper for Go, check out ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/prahaladd/gograph"},(0,o.kt)("inlineCode",{parentName:"a"},"gograph")),". This project aims to provide a mechanism to interact with any graph database using a unified and minimalistic API layer for the core operations on a graph database. It is an open-source project not maintained by the Memgraph team.")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"To follow this guide, you will need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("strong",{parentName:"li"},"running Memgraph instance"),". If you need to set up Memgraph, take a look\nat the ",(0,o.kt)("a",{parentName:"li",href:"/docs/memgraph/next/installation"},"Installation guide"),"."),(0,o.kt)("li",{parentName:"ul"},"A basic understanding of graph databases and the property graph model."),(0,o.kt)("li",{parentName:"ul"},"The newest version of ",(0,o.kt)("strong",{parentName:"li"},"Go")," ",(0,o.kt)("a",{parentName:"li",href:"https://golang.org/doc/install"},"installed"),".")),(0,o.kt)("h2",{id:"basic-setup"},"Basic Setup"),(0,o.kt)("p",null,"We'll be using a simple Go application to demonstrate how to connect to a\nrunning Memgraph instance."),(0,o.kt)("p",null,"Let's jump in and create our application."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1.")," Create a new directory for your app, for example ",(0,o.kt)("inlineCode",{parentName:"p"},"/MyApp")," and position\nyourself in it.",(0,o.kt)("br",null)," ",(0,o.kt)("strong",{parentName:"p"},"2.")," Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"program.go")," file and add the following\ncode:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "github.com/neo4j/neo4j-go-driver/v5/neo4j"\n)\n\nfunc main() {\n    dbUri := "bolt://localhost:7687"\n    driver, err := neo4j.NewDriver(dbUri, neo4j.BasicAuth("", "", ""))\n    if err != nil {\n        panic(err)\n    }\n    // Handle driver lifetime based on your application lifetime requirements  driver\'s lifetime is usually\n    // bound by the application lifetime, which usually implies one driver instance per application\n    defer driver.Close()\n    item, err := insertItem(driver)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Printf("%v\\n", item.Message)\n}\n\nfunc insertItem(driver neo4j.Driver) (*Item, error) {\n    // Sessions are short-lived, cheap to create and NOT thread safe. Typically create one or more sessions\n    // per request in your web application. Make sure to call Close on the session when done.\n    // For multi-database support, set sessionConfig.DatabaseName to requested database\n    // Session config will default to write mode, if only reads are to be used configure session for\n    // read mode.\n    session := driver.NewSession(neo4j.SessionConfig{})\n    defer session.Close()\n    result, err := session.WriteTransaction(createItemFn)\n    if err != nil {\n        return nil, err\n    }\n    return result.(*Item), nil\n}\n\nfunc createItemFn(tx neo4j.Transaction) (interface{}, error) {\n    records, err := tx.Run(\n        "CREATE (a:Greeting) SET a.message = $message RETURN \'Node \' + id(a) + \': \' + a.message",\n        map[string]interface{}{"message": "Hello, World!"})\n    // In face of driver native errors, make sure to return them directly.\n    // Depending on the error, the driver may try to execute the function again.\n    if err != nil {\n        return nil, err\n    }\n    record, err := records.Single()\n    if err != nil {\n        return nil, err\n    }\n    // You can also retrieve values by name, with e.g. `id, found := record.Get("n.id")`\n    return &Item{\n        Message: record.Values[0].(string),\n    }, nil\n}\n\ntype Item struct {\n    Message string\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3.")," Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"go.mod")," file by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"go mod init example.com/hello\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4.")," Add the ",(0,o.kt)("strong",{parentName:"p"},"Bolt driver")," with the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"go get github.com/neo4j/neo4j-go-driver/v5\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"5.")," Run the app with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"go run ./program.go\n")),(0,o.kt)("p",null,"You should see an output similar to the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Node 0: Hello, World!\n")),(0,o.kt)("h2",{id:"where-to-next"},"Where to next?"),(0,o.kt)("p",null,"For real-world examples of how to use Memgraph, we suggest you take a look at\nthe ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/tutorials"},"Tutorials"))," page. You can also browse through\nthe ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/how-to-guides"},"How-to guides"))," section to get an overview\nof all the functionalities Memgraph offers."))}m.isMDXComponent=!0}}]);