"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79741],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),g=m(r),u=n,h=g["".concat(s,".").concat(u)]||g[u]||c[u]||o;return r?a.createElement(h,i(i({ref:t},l),{},{components:r})):a.createElement(h,i({ref:t},l))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=g;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var m=2;m<o;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},71749:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var a=r(87462),n=(r(67294),r(3905));const o={id:"drivers",title:"Drivers",sidebar_label:"Drivers"},i=void 0,p={unversionedId:"connect-to-memgraph/methods/drivers",id:"version-2.1.0/connect-to-memgraph/methods/drivers",title:"Drivers",description:"Quick start guides",source:"@site/memgraph_versioned_docs/version-2.1.0/connect-to-memgraph/methods/drivers.md",sourceDirName:"connect-to-memgraph/methods",slug:"/connect-to-memgraph/methods/drivers",permalink:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/drivers",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.1.0/connect-to-memgraph/methods/drivers.md",tags:[],version:"2.1.0",frontMatter:{id:"drivers",title:"Drivers",sidebar_label:"Drivers"},sidebar:"version-2.1.0/memgraph",previous:{title:"mgconsole",permalink:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/mgconsole"},next:{title:"Python",permalink:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/python"}},s={},m=[{value:"Quick start guides",id:"quick-start-guides",level:2},{value:"Supported Languages",id:"supported-languages",level:2},{value:"Secure Sockets Layer (SSL)",id:"secure-sockets-layer",level:2}],l={toc:m};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"quick-start-guides"},"Quick start guides"),(0,n.kt)("p",null,"The following guides describe how to create a simple ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Hello, World!"))," program\nthat connects to Memgraph and executes simple queries:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/python"},"Python"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/rust"},"Rust"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/c-sharp"},"C#"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/java"},"Java"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/go"},"Go"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/nodejs"},"Node.js"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/javascript"},"JavaScript"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.0/connect-to-memgraph/methods/building-applications/php"},"PHP")))),(0,n.kt)("h2",{id:"supported-languages"},"Supported Languages"),(0,n.kt)("p",null,"If users wish to query Memgraph programmatically, they can do so using the ",(0,n.kt)("a",{parentName:"p",href:"https://7687.org/"},"Bolt\nprotocol"),". Bolt was designed for efficient communication with\ngraph databases and ",(0,n.kt)("strong",{parentName:"p"},"Memgraph supports versions 1 and 4")," of the protocol. Bolt\nprotocol drivers for some popular programming languages are listed below:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/pymgclient"},"Python"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mgclient"},"C/C++"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/rsmgclient"},"Rust"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-javascript-driver"},"Node.js"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-dotnet-driver"},"C#"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-go-driver"},"Go"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/zmactep/hasbolt"},"Haskell"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-java-driver"},"Java"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4j/neo4j-javascript-driver"},"JavaScript"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4j-php/Bolt"},"PHP"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/neo4jrb/neo4j"},"Ruby")))),(0,n.kt)("h2",{id:"secure-sockets-layer"},"Secure Sockets Layer (SSL)"),(0,n.kt)("p",null,"Secure connections are supported and disabled by default. The server initially\nships with a self-signed testing certificate. The certificate can be replaced by\nediting the following parameters in ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/memgraph/memgraph.conf"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"--bolt-cert-file=/path/to/ssl/certificate.pem\n--bolt-key-file=/path/to/ssl/privatekey.pem\n")),(0,n.kt)("p",null,"To disable SSL support and use insecure connections to the database you should\nset both parameters (",(0,n.kt)("inlineCode",{parentName:"p"},"--bolt-cert-file")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"--bolt-key-file"),") to empty values."))}c.isMDXComponent=!0}}]);