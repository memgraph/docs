"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[11569],{3905:function(e,t,r){r.d(t,{Zo:function(){return o},kt:function(){return d}});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},o=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,i=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),y=c(r),d=l,m=y["".concat(i,".").concat(d)]||y[d]||p[d]||n;return r?a.createElement(m,u(u({ref:t},o),{},{components:r})):a.createElement(m,u({ref:t},o))}));function d(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,u=new Array(n);u[0]=y;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,u[1]=s;for(var c=2;c<n;c++)u[c]=r[c];return a.createElement.apply(null,u)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},80022:function(e,t,r){r.r(t),r.d(t,{assets:function(){return o},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=r(87462),l=r(63366),n=(r(67294),r(3905)),u=["components"],s={sidebar_label:"query_builder",title:"gqlalchemy.query_builder"},i=void 0,c={unversionedId:"reference/query_builder",id:"reference/query_builder",title:"gqlalchemy.query_builder",description:"WhereConditionPartialQuery Objects",source:"@site/gqlalchemy/reference/query_builder.md",sourceDirName:"reference",slug:"/reference/query_builder",permalink:"/docs/gqlalchemy/reference/query_builder",editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/reference/query_builder.md",tags:[],version:"current",frontMatter:{sidebar_label:"query_builder",title:"gqlalchemy.query_builder"},sidebar:"gqlalchemy",previous:{title:"models",permalink:"/docs/gqlalchemy/reference/models"},next:{title:"transformations",permalink:"/docs/gqlalchemy/reference/transformations"}},o={},p=[{value:"WhereConditionPartialQuery Objects",id:"whereconditionpartialquery-objects",level:2},{value:"construct_query",id:"construct_query",level:4},{value:"NodePartialQuery Objects",id:"nodepartialquery-objects",level:2},{value:"construct_query",id:"construct_query-1",level:4},{value:"EdgePartialQuery Objects",id:"edgepartialquery-objects",level:2},{value:"construct_query",id:"construct_query-2",level:4},{value:"UnwindPartialQuery Objects",id:"unwindpartialquery-objects",level:2},{value:"construct_query",id:"construct_query-3",level:4},{value:"dict_to_alias_statement",id:"dict_to_alias_statement",level:4},{value:"WithPartialQuery Objects",id:"withpartialquery-objects",level:2},{value:"construct_query",id:"construct_query-4",level:4},{value:"UnionPartialQuery Objects",id:"unionpartialquery-objects",level:2},{value:"construct_query",id:"construct_query-5",level:4},{value:"DeletePartialQuery Objects",id:"deletepartialquery-objects",level:2},{value:"construct_query",id:"construct_query-6",level:4},{value:"RemovePartialQuery Objects",id:"removepartialquery-objects",level:2},{value:"construct_query",id:"construct_query-7",level:4},{value:"YieldPartialQuery Objects",id:"yieldpartialquery-objects",level:2},{value:"construct_query",id:"construct_query-8",level:4},{value:"ReturnPartialQuery Objects",id:"returnpartialquery-objects",level:2},{value:"construct_query",id:"construct_query-9",level:4},{value:"OrderByPartialQuery Objects",id:"orderbypartialquery-objects",level:2},{value:"construct_query",id:"construct_query-10",level:4},{value:"LimitPartialQuery Objects",id:"limitpartialquery-objects",level:2},{value:"construct_query",id:"construct_query-11",level:4},{value:"SkipPartialQuery Objects",id:"skippartialquery-objects",level:2},{value:"construct_query",id:"construct_query-12",level:4},{value:"DeclarativeBase Objects",id:"declarativebase-objects",level:2},{value:"match",id:"match",level:4},{value:"merge",id:"merge",level:4},{value:"create",id:"create",level:4},{value:"call",id:"call",level:4},{value:"node",id:"node",level:4},{value:"to",id:"to",level:4},{value:"from_",id:"from_",level:4},{value:"where",id:"where",level:4},{value:"and_where",id:"and_where",level:4},{value:"or_where",id:"or_where",level:4},{value:"unwind",id:"unwind",level:4},{value:"with_",id:"with_",level:4},{value:"union",id:"union",level:4},{value:"delete",id:"delete",level:4},{value:"remove",id:"remove",level:4},{value:"yield_",id:"yield_",level:4},{value:"return_",id:"return_",level:4},{value:"order_by",id:"order_by",level:4},{value:"limit",id:"limit",level:4},{value:"skip",id:"skip",level:4},{value:"get_single",id:"get_single",level:4},{value:"execute",id:"execute",level:4}],y={toc:p};function d(e){var t=e.components,r=(0,l.Z)(e,u);return(0,n.kt)("wrapper",(0,a.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"whereconditionpartialquery-objects"},"WhereConditionPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class WhereConditionPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Constructs a where partial query."),(0,n.kt)("h2",{id:"nodepartialquery-objects"},"NodePartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class NodePartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-1"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Constructs a node partial query."),(0,n.kt)("h2",{id:"edgepartialquery-objects"},"EdgePartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class EdgePartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-2"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Constructs an edge partial query."),(0,n.kt)("h2",{id:"unwindpartialquery-objects"},"UnwindPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class UnwindPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-3"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Constructs an unwind partial query."),(0,n.kt)("h4",{id:"dict_to_alias_statement"},"dict","_","to","_","alias","_","statement"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def dict_to_alias_statement(alias_dict: Dict[str, str]) -> str\n")),(0,n.kt)("p",null,"Creates a string expression of alias statements from a dictionary of\nexpression, variable name dictionary."),(0,n.kt)("h2",{id:"withpartialquery-objects"},"WithPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class WithPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-4"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a WITH statement Cypher partial query."),(0,n.kt)("h2",{id:"unionpartialquery-objects"},"UnionPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class UnionPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-5"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a UNION statement Cypher partial query."),(0,n.kt)("h2",{id:"deletepartialquery-objects"},"DeletePartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class DeletePartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-6"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a DELETE statement Cypher partial query."),(0,n.kt)("h2",{id:"removepartialquery-objects"},"RemovePartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class RemovePartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-7"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a REMOVE statement Cypher partial query."),(0,n.kt)("h2",{id:"yieldpartialquery-objects"},"YieldPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class YieldPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-8"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a YIELD statement Cypher partial query."),(0,n.kt)("h2",{id:"returnpartialquery-objects"},"ReturnPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class ReturnPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-9"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a RETURN statement Cypher partial query."),(0,n.kt)("h2",{id:"orderbypartialquery-objects"},"OrderByPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class OrderByPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-10"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a ORDER BY statement Cypher partial query."),(0,n.kt)("h2",{id:"limitpartialquery-objects"},"LimitPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class LimitPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-11"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a LIMIT statement Cypher partial query."),(0,n.kt)("h2",{id:"skippartialquery-objects"},"SkipPartialQuery Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class SkipPartialQuery(PartialQuery)\n")),(0,n.kt)("h4",{id:"construct_query-12"},"construct","_","query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def construct_query() -> str\n")),(0,n.kt)("p",null,"Creates a SKIP statement Cypher partial query."),(0,n.kt)("h2",{id:"declarativebase-objects"},"DeclarativeBase Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class DeclarativeBase(ABC)\n")),(0,n.kt)("h4",{id:"match"},"match"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def match(optional: bool = False) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a MATCH statement Cypher partial query."),(0,n.kt)("h4",{id:"merge"},"merge"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def merge() -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a MERGE statement Cypher partial query."),(0,n.kt)("h4",{id:"create"},"create"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def create() -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a CREATE statement Cypher partial query."),(0,n.kt)("h4",{id:"call"},"call"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def call(procedure: str, arguments: Optional[str] = None) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a CALL statement Cypher partial query."),(0,n.kt)("h4",{id:"node"},"node"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def node(labels: Union[str, List[str], None] = "", variable: Optional[str] = None, node: Optional["Node"] = None, **kwargs, ,) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a node Cypher partial query."),(0,n.kt)("h4",{id:"to"},"to"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def to(edge_label: Optional[str] = "", directed: Optional[bool] = True, variable: Optional[str] = None, relationship: Optional["Relationship"] = None, **kwargs, ,) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a relationship Cypher partial query with a ","'","-",">","'"," sign."),(0,n.kt)("h4",{id:"from_"},"from","_"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def from_(edge_label: Optional[str] = "", directed: Optional[bool] = True, variable: Optional[str] = None, relationship: Optional["Relationship"] = None, **kwargs, ,) -> "Match"\n')),(0,n.kt)("p",null,"Creates a relationship Cypher partial query with a ","'","<","-","'"," sign."),(0,n.kt)("h4",{id:"where"},"where"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def where(property: str, operator: str, value: Any) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a WHERE statement Cypher partial query."),(0,n.kt)("h4",{id:"and_where"},"and","_","where"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def and_where(property: str, operator: str, value: Any) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a AND (expression) statement Cypher partial query."),(0,n.kt)("h4",{id:"or_where"},"or","_","where"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def or_where(property: str, operator: str, value: Any) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a OR (expression) statement Cypher partial query."),(0,n.kt)("h4",{id:"unwind"},"unwind"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def unwind(list_expression: str, variable: str) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a UNWIND statement Cypher partial query."),(0,n.kt)("h4",{id:"with_"},"with","_"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def with_(results: Optional[Dict[str, str]] = {}) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a WITH statement Cypher partial query."),(0,n.kt)("h4",{id:"union"},"union"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def union(include_duplicates: Optional[bool] = True) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a UNION statement Cypher partial query."),(0,n.kt)("h4",{id:"delete"},"delete"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def delete(variable_expressions: List[str], detach: Optional[bool] = False) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a DELETE statement Cypher partial query."),(0,n.kt)("h4",{id:"remove"},"remove"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def remove(items: List[str]) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a REMOVE statement Cypher partial query."),(0,n.kt)("h4",{id:"yield_"},"yield","_"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def yield_(results: Optional[Dict[str, str]] = {}) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a YIELD statement Cypher partial query."),(0,n.kt)("h4",{id:"return_"},"return","_"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def return_(results: Optional[Dict[str, str]] = {}) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a RETURN statement Cypher partial query."),(0,n.kt)("h4",{id:"order_by"},"order","_","by"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def order_by(properties: str) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a ORDER BY statement Cypher partial query."),(0,n.kt)("h4",{id:"limit"},"limit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def limit(integer_expression: str) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a LIMIT statement Cypher partial query."),(0,n.kt)("h4",{id:"skip"},"skip"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'def skip(integer_expression: str) -> "DeclarativeBase"\n')),(0,n.kt)("p",null,"Creates a SKIP statement Cypher partial query."),(0,n.kt)("h4",{id:"get_single"},"get","_","single"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def get_single(retrieve: str) -> Any\n")),(0,n.kt)("p",null,"Returns a single result with a ",(0,n.kt)("inlineCode",{parentName:"p"},"retrieve")," variable name."),(0,n.kt)("h4",{id:"execute"},"execute"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def execute() -> Iterator[Dict[str, Any]]\n")),(0,n.kt)("p",null,"Executes the Cypher query."))}d.isMDXComponent=!0}}]);