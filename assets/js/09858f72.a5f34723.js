"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[19445],{48365:e=>{e.exports=JSON.parse('{"pluginId":"mage","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mage":[{"type":"link","label":"Getting started","href":"/docs/mage/","docId":"overview"},{"type":"category","label":"Install MAGE","items":[{"type":"link","label":"Docker Hub (recommended)","href":"/docs/mage/installation/docker-hub","docId":"installation/docker-hub"},{"type":"link","label":"Docker build","href":"/docs/mage/installation/docker-build","docId":"installation/docker-build"},{"type":"link","label":"Build from source on Linux","href":"/docs/mage/installation/source","docId":"installation/source"},{"type":"link","label":"MAGE \xd7 NVIDIA cuGraph","href":"/docs/mage/installation/cugraph","docId":"installation/cugraph"}],"collapsed":true,"collapsible":true,"href":"/docs/mage/installation"},{"type":"category","label":"Using query modules","items":[{"type":"link","label":"Loading query modules","href":"/docs/mage/usage/loading-modules","docId":"usage/loading-modules"},{"type":"link","label":"Calling procedures","href":"/docs/mage/usage/calling-procedures","docId":"usage/calling-procedures"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Available query modules","items":[{"type":"link","label":"betweenness_centrality","href":"/docs/mage/query-modules/cpp/betweenness-centrality","docId":"query-modules/cpp/betweenness-centrality"},{"type":"link","label":"betweenness_centrality_online","href":"/docs/mage/query-modules/cpp/betweenness-centrality-online","docId":"query-modules/cpp/betweenness-centrality-online"},{"type":"link","label":"biconnected_components","href":"/docs/mage/query-modules/cpp/biconnected-components","docId":"query-modules/cpp/biconnected-components"},{"type":"link","label":"bipartite_matching","href":"/docs/mage/query-modules/cpp/bipartite-matching","docId":"query-modules/cpp/bipartite-matching"},{"type":"link","label":"bridges","href":"/docs/mage/query-modules/cpp/bridges","docId":"query-modules/cpp/bridges"},{"type":"link","label":"community_detection","href":"/docs/mage/query-modules/cpp/community-detection","docId":"query-modules/cpp/community-detection"},{"type":"link","label":"community_detection_online","href":"/docs/mage/query-modules/cpp/community-detection-online","docId":"query-modules/cpp/community-detection-online"},{"type":"link","label":"conditional_execution","href":"/docs/mage/query-modules/cpp/conditional-execution","docId":"query-modules/cpp/conditional-execution"},{"type":"link","label":"cycles","href":"/docs/mage/query-modules/cpp/cycles","docId":"query-modules/cpp/cycles"},{"type":"link","label":"cugraph","href":"/docs/mage/query-modules/cuda/cugraph","docId":"query-modules/cuda/cugraph"},{"type":"link","label":"degree_centrality","href":"/docs/mage/query-modules/cpp/degree-centrality","docId":"query-modules/cpp/degree-centrality"},{"type":"link","label":"distance_calculator","href":"/docs/mage/query-modules/cpp/distance-calculator","docId":"query-modules/cpp/distance-calculator"},{"type":"link","label":"elasticsearch_synchronization","href":"/docs/mage/query-modules/python/elasticsearch-synchronization","docId":"query-modules/python/elasticsearch-synchronization"},{"type":"link","label":"export_util","href":"/docs/mage/query-modules/python/export-util","docId":"query-modules/python/export-util"},{"type":"link","label":"graph_analyzer","href":"/docs/mage/query-modules/python/graph-analyzer","docId":"query-modules/python/graph-analyzer"},{"type":"link","label":"graph_coloring","href":"/docs/mage/query-modules/python/graph-coloring","docId":"query-modules/python/graph-coloring"},{"type":"link","label":"graph_util","href":"/docs/mage/query-modules/cpp/graph-util","docId":"query-modules/cpp/graph-util"},{"type":"link","label":"igraphalg","href":"/docs/mage/query-modules/python/igraphalg","docId":"query-modules/python/igraphalg"},{"type":"link","label":"import_util","href":"/docs/mage/query-modules/python/import-util","docId":"query-modules/python/import-util"},{"type":"link","label":"json_util","href":"/docs/mage/query-modules/python/json-util","docId":"query-modules/python/json-util"},{"type":"link","label":"katz_centrality","href":"/docs/mage/query-modules/cpp/katz-centrality","docId":"query-modules/cpp/katz-centrality"},{"type":"link","label":"katz_centrality_online","href":"/docs/mage/query-modules/cpp/katz-centrality-online","docId":"query-modules/cpp/katz-centrality-online"},{"type":"link","label":"kmeans","href":"/docs/mage/query-modules/python/kmeans","docId":"query-modules/python/kmeans"},{"type":"link","label":"link_prediction_with_gnn","href":"/docs/mage/query-modules/python/link-prediction-with-gnn","docId":"query-modules/python/link-prediction-with-gnn"},{"type":"link","label":"llm_util","href":"/docs/mage/query-modules/python/llm-util","docId":"query-modules/python/llm-util"},{"type":"link","label":"max_flow","href":"/docs/mage/query-modules/python/max-flow","docId":"query-modules/python/max-flow"},{"type":"link","label":"meta_util","href":"/docs/mage/query-modules/python/meta-util","docId":"query-modules/python/meta-util"},{"type":"link","label":"migrate","href":"/docs/mage/query-modules/python/migrate","docId":"query-modules/python/migrate"},{"type":"link","label":"node_classification_with_gnn","href":"/docs/mage/query-modules/python/node-classification-with-gnn","docId":"query-modules/python/node-classification-with-gnn"},{"type":"link","label":"node2vec","href":"/docs/mage/query-modules/python/node2vec","docId":"query-modules/python/node2vec"},{"type":"link","label":"node2vec_online","href":"/docs/mage/query-modules/python/node2vec-online","docId":"query-modules/python/node2vec-online"},{"type":"link","label":"node_similarity","href":"/docs/mage/query-modules/cpp/node-similarity","docId":"query-modules/cpp/node-similarity"},{"type":"link","label":"nxalg","href":"/docs/mage/query-modules/python/nxalg","docId":"query-modules/python/nxalg"},{"type":"link","label":"pagerank","href":"/docs/mage/query-modules/cpp/pagerank","docId":"query-modules/cpp/pagerank"},{"type":"link","label":"pagerank_online","href":"/docs/mage/query-modules/cpp/pagerank-online","docId":"query-modules/cpp/pagerank-online"},{"type":"link","label":"set_cover","href":"/docs/mage/query-modules/python/set-cover","docId":"query-modules/python/set-cover"},{"type":"link","label":"temporal_graph_networks","href":"/docs/mage/query-modules/python/temporal-graph-networks","docId":"query-modules/python/temporal-graph-networks"},{"type":"link","label":"tsp","href":"/docs/mage/query-modules/python/tsp","docId":"query-modules/python/tsp"},{"type":"link","label":"union_find","href":"/docs/mage/query-modules/python/union-find","docId":"query-modules/python/union-find"},{"type":"link","label":"uuid_generator","href":"/docs/mage/query-modules/cpp/uuid-generator","docId":"query-modules/cpp/uuid-generator"},{"type":"link","label":"vrp","href":"/docs/mage/query-modules/python/vrp","docId":"query-modules/python/vrp"},{"type":"link","label":"weakly_connected_components","href":"/docs/mage/query-modules/cpp/weakly-connected-components","docId":"query-modules/cpp/weakly-connected-components"}],"collapsed":true,"collapsible":true,"href":"/docs/mage/query-modules/available-queries"},{"type":"category","label":"How-to guides","items":[{"type":"link","label":"Create a Python query module","href":"/docs/mage/how-to-guides/create-a-new-module-python","docId":"how-to-guides/create-a-new-module-python"},{"type":"link","label":"Create a C++ query module","href":"/docs/mage/how-to-guides/create-a-new-module-cpp","docId":"how-to-guides/create-a-new-module-cpp"},{"type":"link","label":"Run a query module","href":"/docs/mage/how-to-guides/run-a-query-module","docId":"how-to-guides/run-a-query-module"},{"type":"link","label":"Run modules on subgraphs","href":"/docs/mage/how-to-guides/run-a-subgraph-module","docId":"how-to-guides/run-a-subgraph-module"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Algorithms","items":[{"type":"category","label":"Traditional Graph Analytics","items":[{"type":"link","label":"Betweenness Centrality","href":"/docs/mage/algorithms/traditional-graph-analytics/betweenness-centrality-algorithm","docId":"algorithms/traditional-graph-analytics/betweenness-centrality-algorithm"},{"type":"link","label":"Biconnected Components","href":"/docs/mage/algorithms/traditional-graph-analytics/biconnected-components-algorithm","docId":"algorithms/traditional-graph-analytics/biconnected-components-algorithm"},{"type":"link","label":"Bipartite Matching","href":"/docs/mage/algorithms/traditional-graph-analytics/bipartite-matching-algorithm","docId":"algorithms/traditional-graph-analytics/bipartite-matching-algorithm"},{"type":"link","label":"Bridge Detection","href":"/docs/mage/algorithms/traditional-graph-analytics/bridges-algorithm","docId":"algorithms/traditional-graph-analytics/bridges-algorithm"},{"type":"link","label":"Community Detection","href":"/docs/mage/algorithms/traditional-graph-analytics/community-detection-algorithm","docId":"algorithms/traditional-graph-analytics/community-detection-algorithm"},{"type":"link","label":"Cycle Detection","href":"/docs/mage/algorithms/traditional-graph-analytics/cycle-detection-algorithm","docId":"algorithms/traditional-graph-analytics/cycle-detection-algorithm"},{"type":"link","label":"Degree Centrality","href":"/docs/mage/algorithms/traditional-graph-analytics/degree-centrality-algorithm","docId":"algorithms/traditional-graph-analytics/degree-centrality-algorithm"},{"type":"link","label":"Graph Coloring","href":"/docs/mage/algorithms/traditional-graph-analytics/graph-coloring-algorithm","docId":"algorithms/traditional-graph-analytics/graph-coloring-algorithm"},{"type":"link","label":"Katz Centrality","href":"/docs/mage/algorithms/traditional-graph-analytics/katz-centrality-algorithm","docId":"algorithms/traditional-graph-analytics/katz-centrality-algorithm"},{"type":"link","label":"Maximum Flow","href":"/docs/mage/algorithms/traditional-graph-analytics/maximum-flow-algorithm","docId":"algorithms/traditional-graph-analytics/maximum-flow-algorithm"},{"type":"link","label":"Node Similarity","href":"/docs/mage/algorithms/traditional-graph-analytics/node-similarity-algorithm","docId":"algorithms/traditional-graph-analytics/node-similarity-algorithm"},{"type":"link","label":"PageRank","href":"/docs/mage/algorithms/traditional-graph-analytics/pagerank-algorithm","docId":"algorithms/traditional-graph-analytics/pagerank-algorithm"},{"type":"link","label":"Union Find","href":"/docs/mage/algorithms/traditional-graph-analytics/union-find-algorithm","docId":"algorithms/traditional-graph-analytics/union-find-algorithm"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Streaming Graph Analytics","items":[{"type":"link","label":"Dynamic Betweenness Centrality","href":"/docs/mage/algorithms/dynamic-graph-analytics/betweenness-centrality-online-algorithm","docId":"algorithms/dynamic-graph-analytics/betweenness-centrality-online-algorithm"},{"type":"link","label":"Dynamic Community Detection","href":"/docs/mage/algorithms/dynamic-graph-analytics/community-detection-online-algorithm","docId":"algorithms/dynamic-graph-analytics/community-detection-online-algorithm"},{"type":"link","label":"Dynamic node2vec","href":"/docs/mage/algorithms/dynamic-graph-analytics/node2vec-online-algorithm","docId":"algorithms/dynamic-graph-analytics/node2vec-online-algorithm"},{"type":"link","label":"Dynamic Katz Centrality","href":"/docs/mage/algorithms/dynamic-graph-analytics/katz-centrality-online-algorithm","docId":"algorithms/dynamic-graph-analytics/katz-centrality-online-algorithm"},{"type":"link","label":"Dynamic PageRank","href":"/docs/mage/algorithms/dynamic-graph-analytics/pagerank-online-algorithm","docId":"algorithms/dynamic-graph-analytics/pagerank-online-algorithm"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Machine Learning Graph Algorithms","items":[{"type":"link","label":"Graph Neural Networks (GNN)","href":"/docs/mage/algorithms/machine-learning-graph-analytics/gnn-algorithm","docId":"algorithms/machine-learning-graph-analytics/gnn-algorithm"},{"type":"link","label":"K-means Clustering","href":"/docs/mage/algorithms/machine-learning-graph-analytics/k-means-clustering-algorithm","docId":"algorithms/machine-learning-graph-analytics/k-means-clustering-algorithm"},{"type":"link","label":"Graph Classification","href":"/docs/mage/algorithms/machine-learning-graph-analytics/graph-classification-algorithm","docId":"algorithms/machine-learning-graph-analytics/graph-classification-algorithm"},{"type":"link","label":"Link Prediction","href":"/docs/mage/algorithms/machine-learning-graph-analytics/link-prediction-algorithm","docId":"algorithms/machine-learning-graph-analytics/link-prediction-algorithm"},{"type":"link","label":"Node Classification","href":"/docs/mage/algorithms/machine-learning-graph-analytics/node-classification-algorithm","docId":"algorithms/machine-learning-graph-analytics/node-classification-algorithm"},{"type":"link","label":"Node2Vec","href":"/docs/mage/algorithms/machine-learning-graph-analytics/node2vec-algorithm","docId":"algorithms/machine-learning-graph-analytics/node2vec-algorithm"},{"type":"link","label":"Graph Clustering","href":"/docs/mage/algorithms/machine-learning-graph-analytics/graph-clustering-algorithm","docId":"algorithms/machine-learning-graph-analytics/graph-clustering-algorithm"},{"type":"link","label":"Temporal Graph Networks","href":"/docs/mage/algorithms/machine-learning-graph-analytics/temporal-graph-networks","docId":"algorithms/machine-learning-graph-analytics/temporal-graph-networks"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true,"href":"/docs/mage/algorithms"},{"type":"category","label":"Use cases","items":[{"type":"link","label":"Bioinformatics","href":"/docs/mage/use-cases/bioinformatics","docId":"use-cases/bioinformatics"},{"type":"link","label":"Computer Security","href":"/docs/mage/use-cases/computer-security","docId":"use-cases/computer-security"},{"type":"link","label":"Drug Discovery","href":"/docs/mage/use-cases/drug-discovery","docId":"use-cases/drug-discovery"},{"type":"link","label":"Finance","href":"/docs/mage/use-cases/finance","docId":"use-cases/finance"},{"type":"link","label":"Knowledge Graphs","href":"/docs/mage/use-cases/knowledge-graph","docId":"use-cases/knowledge-graph"},{"type":"link","label":"Power Grids","href":"/docs/mage/use-cases/power-grids","docId":"use-cases/power-grids"},{"type":"link","label":"Process Engineering","href":"/docs/mage/use-cases/process-engineering","docId":"use-cases/process-engineering"},{"type":"link","label":"Retail","href":"/docs/mage/use-cases/retail","docId":"use-cases/retail"},{"type":"link","label":"Social Media","href":"/docs/mage/use-cases/social-media","docId":"use-cases/social-media"},{"type":"link","label":"Telecommunication","href":"/docs/mage/use-cases/telecommunication","docId":"use-cases/telecommunication"},{"type":"link","label":"Transportation","href":"/docs/mage/use-cases/transportation","docId":"use-cases/transportation"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Contributing","href":"/docs/mage/contributing","docId":"contributing"},{"type":"link","label":"Changelog","href":"/docs/mage/changelog","docId":"changelog"}]},"docs":{"algorithms/dynamic-graph-analytics/betweenness-centrality-online-algorithm":{"id":"algorithms/dynamic-graph-analytics/betweenness-centrality-online-algorithm","title":"Dynamic Betweenness Centrality","description":"Description","sidebar":"mage"},"algorithms/dynamic-graph-analytics/community-detection-online-algorithm":{"id":"algorithms/dynamic-graph-analytics/community-detection-online-algorithm","title":"Dynamic Community Detection","description":"Description","sidebar":"mage"},"algorithms/dynamic-graph-analytics/katz-centrality-online-algorithm":{"id":"algorithms/dynamic-graph-analytics/katz-centrality-online-algorithm","title":"Dynamic Katz Centrality","description":"Description","sidebar":"mage"},"algorithms/dynamic-graph-analytics/node2vec-online-algorithm":{"id":"algorithms/dynamic-graph-analytics/node2vec-online-algorithm","title":"Dynamic node2vec","description":"Description","sidebar":"mage"},"algorithms/dynamic-graph-analytics/pagerank-online-algorithm":{"id":"algorithms/dynamic-graph-analytics/pagerank-online-algorithm","title":"Dynamic PageRank","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/gnn-algorithm":{"id":"algorithms/machine-learning-graph-analytics/gnn-algorithm","title":"Graph Neural Networks (GNN)","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/graph-classification-algorithm":{"id":"algorithms/machine-learning-graph-analytics/graph-classification-algorithm","title":"Graph Classification","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/graph-clustering-algorithm":{"id":"algorithms/machine-learning-graph-analytics/graph-clustering-algorithm","title":"Graph Clustering","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/k-means-clustering-algorithm":{"id":"algorithms/machine-learning-graph-analytics/k-means-clustering-algorithm","title":"K-means Clustering","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/link-prediction-algorithm":{"id":"algorithms/machine-learning-graph-analytics/link-prediction-algorithm","title":"Link Prediction","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/node-classification-algorithm":{"id":"algorithms/machine-learning-graph-analytics/node-classification-algorithm","title":"Node Classification","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/node2vec-algorithm":{"id":"algorithms/machine-learning-graph-analytics/node2vec-algorithm","title":"Node2Vec","description":"Description","sidebar":"mage"},"algorithms/machine-learning-graph-analytics/temporal-graph-networks":{"id":"algorithms/machine-learning-graph-analytics/temporal-graph-networks","title":"Temporal Graph Networks","description":"Description","sidebar":"mage"},"algorithms/overview":{"id":"algorithms/overview","title":"Graph algorithms","description":"Traditional Graph Analytics","sidebar":"mage"},"algorithms/traditional-graph-analytics/betweenness-centrality-algorithm":{"id":"algorithms/traditional-graph-analytics/betweenness-centrality-algorithm","title":"Betweenness Centrality","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/biconnected-components-algorithm":{"id":"algorithms/traditional-graph-analytics/biconnected-components-algorithm","title":"Biconnected Components","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/bipartite-matching-algorithm":{"id":"algorithms/traditional-graph-analytics/bipartite-matching-algorithm","title":"Bipartite Matching","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/bridges-algorithm":{"id":"algorithms/traditional-graph-analytics/bridges-algorithm","title":"Bridge Detection","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/community-detection-algorithm":{"id":"algorithms/traditional-graph-analytics/community-detection-algorithm","title":"Community Detection","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/cycle-detection-algorithm":{"id":"algorithms/traditional-graph-analytics/cycle-detection-algorithm","title":"Cycle Detection","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/degree-centrality-algorithm":{"id":"algorithms/traditional-graph-analytics/degree-centrality-algorithm","title":"Degree Centrality","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/graph-coloring-algorithm":{"id":"algorithms/traditional-graph-analytics/graph-coloring-algorithm","title":"Graph Coloring","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/katz-centrality-algorithm":{"id":"algorithms/traditional-graph-analytics/katz-centrality-algorithm","title":"Katz Centrality","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/maximum-flow-algorithm":{"id":"algorithms/traditional-graph-analytics/maximum-flow-algorithm","title":"Maximum Flow","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/node-similarity-algorithm":{"id":"algorithms/traditional-graph-analytics/node-similarity-algorithm","title":"Node Similarity","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/pagerank-algorithm":{"id":"algorithms/traditional-graph-analytics/pagerank-algorithm","title":"PageRank","description":"Description","sidebar":"mage"},"algorithms/traditional-graph-analytics/union-find-algorithm":{"id":"algorithms/traditional-graph-analytics/union-find-algorithm","title":"Union Find","description":"Description","sidebar":"mage"},"changelog":{"id":"changelog","title":"Changelog","description":"v1.7.0 - Apr 5, 2023","sidebar":"mage"},"contributing":{"id":"contributing","title":"How to contribute to MAGE?","description":"Contributing","sidebar":"mage"},"how-to-guides/create-a-new-module-cpp":{"id":"how-to-guides/create-a-new-module-cpp","title":"How to create a query module in C++","description":"Query modules can be implemented using the [C++","sidebar":"mage"},"how-to-guides/create-a-new-module-python":{"id":"how-to-guides/create-a-new-module-python","title":"How to create a query module in Python","description":"The Python API","sidebar":"mage"},"how-to-guides/run-a-query-module":{"id":"how-to-guides/run-a-query-module","title":"How to run a query module","description":"Prerequisites","sidebar":"mage"},"how-to-guides/run-a-subgraph-module":{"id":"how-to-guides/run-a-subgraph-module","title":"How to run a MAGE module on subgraphs","description":"The following how-to guide will demonstrate how to run graph analytics on sub-graphs. A portion of the graph is projected from the whole network persisted in Memgraph, and algorithms are run on that portion of the graph.","sidebar":"mage"},"installation/cugraph":{"id":"installation/cugraph","title":"Install MAGE \xd7 NVIDIA cuGraph","description":"Follow this guide to install Memgraph with [NVIDIA","sidebar":"mage"},"installation/docker-build":{"id":"installation/docker-build","title":"Build a Docker image from the MAGE repository","description":"This way, you will create a Docker image directly from the [MAGE Github","sidebar":"mage"},"installation/docker-hub":{"id":"installation/docker-hub","title":"Pull the MAGE image from Docker Hub","description":"MAGE has prepared a Docker image on [Docker","sidebar":"mage"},"installation/overview":{"id":"installation/overview","title":"How to install MAGE?","description":"The Docker Hub and Docker build installation methods only require you to","sidebar":"mage"},"installation/source":{"id":"installation/source","title":"Install MAGE on Linux from source","description":"This step is only suitable for Linux users as you need to [download and install","sidebar":"mage"},"overview":{"id":"overview","title":"MAGE - Memgraph Advanced Graph Extensions \ud83d\udd2e","description":"Memgraph Advanced Graph Extensions, MAGE to friends, is an [open-source","sidebar":"mage"},"query-modules/available-queries":{"id":"query-modules/available-queries","title":"Spellbook \ud83d\udcd6 - Currently available modules","description":"","sidebar":"mage"},"query-modules/cpp/betweenness-centrality":{"id":"query-modules/cpp/betweenness-centrality","title":"betweenness_centrality","description":"Centrality analysis provides information about the node\u2019s importance for an","sidebar":"mage"},"query-modules/cpp/betweenness-centrality-online":{"id":"query-modules/cpp/betweenness-centrality-online","title":"betweenness_centrality_online","description":"Betweenness centrality is among the most common metrics in graph analytics owing","sidebar":"mage"},"query-modules/cpp/biconnected-components":{"id":"query-modules/cpp/biconnected-components","title":"biconnected_components","description":"Finding biconnected components means finding a maximal biconnected subgraph. Subgraph is biconnected if:","sidebar":"mage"},"query-modules/cpp/bipartite-matching":{"id":"query-modules/cpp/bipartite-matching","title":"bipartite_matching","description":"A bipartite graph is a graph in which we can divide vertices into two independent sets, such that every edge connects vertices between these sets. No connection can be established within the set. Matching in bipartite graphs (bipartite matching) is described as a set of edges that are picked in a way to not share an endpoint. Furthermore, maximum matching is such matching of maximum cardinality of the chosen edge set. The algorithm runs in O(|V|*|E|) time where V represents a set of nodes and E represents a set of edges.","sidebar":"mage"},"query-modules/cpp/bridges":{"id":"query-modules/cpp/bridges","title":"bridges","description":"A bridge in the graph can be described as an edge which if deleted, creates two disjoint graph components. This algorithm finds bridges within the graph. This algorithm has various practical usages such can be road or internet network design planning. A bridge can represent a bottleneck for many scenarios and it is valuable to have such an algorithm to detect it.","sidebar":"mage"},"query-modules/cpp/community-detection":{"id":"query-modules/cpp/community-detection","title":"community_detection","description":"This query module enables using the Louvain method[1] for community","sidebar":"mage"},"query-modules/cpp/community-detection-online":{"id":"query-modules/cpp/community-detection-online","title":"community_detection_online","description":"This query module implements the LabelRankT","sidebar":"mage"},"query-modules/cpp/conditional-execution":{"id":"query-modules/cpp/conditional-execution","title":"conditional_execution","description":"Your queries might require conditional execution logic that can\u2019t be adequately","sidebar":"mage"},"query-modules/cpp/cycles":{"id":"query-modules/cpp/cycles","title":"cycles","description":"In graph theory, a cycle represents a path within the graph where only the starting and ending nodes are equal. Furthermore, cycles can be double-connected links between neighboring nodes or self-loops. The cycles detection algorithm implemented within MAGE works on an undirected graph and has no guarantee of node order in the output. The implemented algorithm (Gibb) is described in the 1982 MIT report called \\"Algorithmic approaches to circuit enumeration problems and applications\\" . The problem is not solvable in polynomial time. It is based on finding all subsets of fundamental cycles which takes about O(2^(|E|-|V|+1)) time where E represents a set of edges and V represents a set of vertices of the given graph.","sidebar":"mage"},"query-modules/cpp/degree-centrality":{"id":"query-modules/cpp/degree-centrality","title":"degree_centrality","description":"Degree Centrality is the basic measurement of centrality that refers to the","sidebar":"mage"},"query-modules/cpp/distance-calculator":{"id":"query-modules/cpp/distance-calculator","title":"distance_calculator","description":"The distance calculator is a module for calculating distance between two geographic locations. It measures the distance along the surface of the earth.","sidebar":"mage"},"query-modules/cpp/graph-util":{"id":"query-modules/cpp/graph-util","title":"graph_util","description":"Graph util is a collection of Memgraph\'s utility graph algorithms. The algorithms that are included in this module","sidebar":"mage"},"query-modules/cpp/katz-centrality":{"id":"query-modules/cpp/katz-centrality","title":"katz_centrality","description":"Katz Centrality is the measurement of centrality that incorporates the","sidebar":"mage"},"query-modules/cpp/katz-centrality-online":{"id":"query-modules/cpp/katz-centrality-online","title":"katz_centrality_online","description":"Because of its simplicity, Katz Centrality has become one of the most","sidebar":"mage"},"query-modules/cpp/node-similarity":{"id":"query-modules/cpp/node-similarity","title":"node_similarity","description":"docs-source","sidebar":"mage"},"query-modules/cpp/pagerank":{"id":"query-modules/cpp/pagerank","title":"pagerank","description":"If we present nodes as pages and directed edges between them as links, the","sidebar":"mage"},"query-modules/cpp/pagerank-online":{"id":"query-modules/cpp/pagerank-online","title":"pagerank_online","description":"Online PageRank is a streaming algorithm made for calculating","sidebar":"mage"},"query-modules/cpp/periodic":{"id":"query-modules/cpp/periodic","title":"periodic","description":"The periodic module enables users to execute a query periodically in"},"query-modules/cpp/uuid-generator":{"id":"query-modules/cpp/uuid-generator","title":"uuid_generator","description":"This module is used to generate string UUIDs which can be stored as properties","sidebar":"mage"},"query-modules/cpp/weakly-connected-components":{"id":"query-modules/cpp/weakly-connected-components","title":"weakly_connected_components","description":"The first analysis that is most often run on a graph is usually a search for disconnected components.","sidebar":"mage"},"query-modules/cuda/cugraph":{"id":"query-modules/cuda/cugraph","title":"cugraph","description":"NVIDIA cuGraph is a graph analytics library that is part of NVIDIA\u2019s","sidebar":"mage"},"query-modules/python/elasticsearch-synchronization":{"id":"query-modules/python/elasticsearch-synchronization","title":"elasticsearch_synchronization","description":"Elasticsearch is a text-processing platform that can be used to enhance the capabilities of a graph database like Memgraph. It offers many fine-grained features useful when working on a text that is impossible to develop in databases. Data residing in Elasticsearch and Memgraph should be synchronized because otherwise, the whole system could be in an inconsistent state. Such a feature can be added inside Memgraph by using triggers: every time a new entity is added (node or edge) it gets indexed to the Elasticsearch index.","sidebar":"mage"},"query-modules/python/export-util":{"id":"query-modules/python/export-util","title":"export_util","description":"Module for exporting a graph database or query results in different formats. Currently, this","sidebar":"mage"},"query-modules/python/graph-analyzer":{"id":"query-modules/python/graph-analyzer","title":"graph_analyzer","description":"The first thing someone should focus on when working with graphs is getting deep analytics of the current state. That is what this module is doing. By using the power of NetworkX, various different graph properties are extracted. This module has the ability to run on a subgraph if a subgraph of nodes is provided as input.","sidebar":"mage"},"query-modules/python/graph-coloring":{"id":"query-modules/python/graph-coloring","title":"graph_coloring","description":"Graph coloring is the assignment of colors to nodes such that two nodes connected with an edge don\u2019t have the same color. The goal is to minimize the number of colors while correctly coloring a graph.","sidebar":"mage"},"query-modules/python/igraphalg":{"id":"query-modules/python/igraphalg","title":"igraphalg","description":"The  igraphalg module provides a comprehensive set of thin wrappers around some of the algorithms present in the igraph package. The wrapper functions can create an igraph compatible graph-like object that can stream the native database graph directly, significantly lowering memory usage.","sidebar":"mage"},"query-modules/python/import-util":{"id":"query-modules/python/import-util","title":"import_util","description":"Module for importing data from different formats. Currently, this module","sidebar":"mage"},"query-modules/python/json-util":{"id":"query-modules/python/json-util","title":"json_util","description":"A module for loading JSON from a local file or remote address. If the JSON that is being loaded is an array, then this module loads it as a stream of values, and if it is a map, the module loads it as a single value.","sidebar":"mage"},"query-modules/python/kmeans":{"id":"query-modules/python/kmeans","title":"kmeans","description":"The k-means algorithm clusters given data by trying to separate samples in n groups of equal variance by minimizing the criterion known as","sidebar":"mage"},"query-modules/python/link-prediction-with-gnn":{"id":"query-modules/python/link-prediction-with-gnn","title":"link_prediction_with_gnn","description":"Link prediction can be defined as a problem where one wants to predict if there is a link between two nodes in the graph. It can be used for predicting missing or future links in the evolving graph. Using the notation G = (V, E) for a graph with nodes V and edges E and given two nodes v1 and v2, the link prediction algorithm tries to predict whether those two nodes will be connected, based on the node features and graph structure. Lately, graph neural networks have been often used for node-classification and link-prediction problems. They are extremely useful in numerous interdisciplinary fields of work where is important to incorporate domain-specific knowledge to capture more fine-grained relationships among the data. Such fields usually involve working with heterogeneous and large-scale graphs. GNNs iteratively update node representations by aggregating the representations of node neighbors and their representation from the previous iteration. Such properties make graph neural networks a great tool for various problems we in Memgraph encounter. If your graph is evolving in time, check TGN model that Memgraph engineers have already developed.","sidebar":"mage"},"query-modules/python/llm-util":{"id":"query-modules/python/llm-util","title":"llm_util","description":"docs-source","sidebar":"mage"},"query-modules/python/max-flow":{"id":"query-modules/python/max-flow","title":"max_flow","description":"The maximum flow problem consists of finding a flow through a graph such that it","sidebar":"mage"},"query-modules/python/meta-util":{"id":"query-modules/python/meta-util","title":"meta_util","description":"A module that contains procedures describing graphs on a meta-level.","sidebar":"mage"},"query-modules/python/migrate":{"id":"query-modules/python/migrate","title":"migrate","description":"A module that contains procedures describing graphs on a meta-level.","sidebar":"mage"},"query-modules/python/node-classification-with-gnn":{"id":"query-modules/python/node-classification-with-gnn","title":"node_classification_with_gnn","description":"Node classification is the problem of finding out the right label for a node based on its neighbors\u2019 labels and structure similarities.","sidebar":"mage"},"query-modules/python/node2vec":{"id":"query-modules/python/node2vec","title":"node2vec","description":"The node2vec is a semi-supervised algorithmic framework for learning","sidebar":"mage"},"query-modules/python/node2vec-online":{"id":"query-modules/python/node2vec-online","title":"node2vec_online","description":"The node2vec_online algorithm learns and updates temporal node embeddings on","sidebar":"mage"},"query-modules/python/nxalg":{"id":"query-modules/python/nxalg","title":"nxalg","description":"This module, named nxalg, provides a comprehensive set of thin wrappers around most of the algorithms present in the NetworkX package. The wrapper functions now have the capability to create a NetworkX compatible graph-like object that can stream the native database graph directly saving on memory usage significantly.","sidebar":"mage"},"query-modules/python/set-cover":{"id":"query-modules/python/set-cover","title":"set_cover","description":"The Set Cover problem is one of the problems in graph theory that tries to solve the least possible set of sets that covers all elements inside those sets. Given a set of n elements, and a collection of m sets containing them, the algorithm tries to identify the smallest sub-collection of sets whose union equal to all the elements.","sidebar":"mage"},"query-modules/python/temporal-graph-networks":{"id":"query-modules/python/temporal-graph-networks","title":"temporal_graph_networks","description":"The temporal_graph_networks (TGNs) are a type of [graph neural network","sidebar":"mage"},"query-modules/python/tsp":{"id":"query-modules/python/tsp","title":"tsp","description":"TSP or \\"Travelling salesman problem\\" is one of the well-known problems in graph theory. The goal of the problem is to find the shortest route that visits each node once, starting and finishing from the same node, given the distance between each one of them. It is an NP-hard problem in optimization and therefore there exists no exact solution. Here implemented are trivial, greedy and k-approx methods that find the solution within a k-bound of the optimal one. That means that solution is not going to be more than k times worse than the best possible. The algorithm uses the distance calculator to determine the distance between points, and works only with geographical locations, meaning each node needs to have its lat and lng property.","sidebar":"mage"},"query-modules/python/union-find":{"id":"query-modules/python/union-find","title":"union_find","description":"Analysis of connected components is a common task in graph analytics.","sidebar":"mage"},"query-modules/python/vrp":{"id":"query-modules/python/vrp","title":"vrp","description":"VRP or Vehicle Routing problem is a generalization of the Travelling Salesman Problem. The goal of the problem is to find the shortest route that visits each node once, starting and finishing from the same node, called a depot, while using a fleet of vehicles. Each vehicle does not need to be at every location, it is enough that every node is visited by at least one vehicle. The problem is NP-hard in optimization, and therefore methods such as constraint programming, approximations or heuristics are a good approach for solving. The current implementation of VRP includes constraint programming with GEKKO solver which works with 1 depot and an arbitrary number of vehicles. The algorithm uses the distance calculator to determine the distance between driving points, and works only with geographical locations, meaning each node needs to have its lat and lng property.","sidebar":"mage"},"usage/calling-procedures":{"id":"usage/calling-procedures","title":"How to call MAGE procedures?","description":"Once the MAGE query modules, or any custom modules you developed have been","sidebar":"mage"},"usage/loading-modules":{"id":"usage/loading-modules","title":"How to load MAGE query modules?","description":"Query modules can be written using the C and C++ APIs (creating .so modules)","sidebar":"mage"},"use-cases/bioinformatics":{"id":"use-cases/bioinformatics","title":"Bioinformatics","description":"Introduction","sidebar":"mage"},"use-cases/computer-security":{"id":"use-cases/computer-security","title":"Computer Security","description":"Our world is full of data that is constantly changing. We need to keep track of","sidebar":"mage"},"use-cases/drug-discovery":{"id":"use-cases/drug-discovery","title":"Drug Discovery","description":"Introduction","sidebar":"mage"},"use-cases/finance":{"id":"use-cases/finance","title":"Finance","description":"Introduction","sidebar":"mage"},"use-cases/knowledge-graph":{"id":"use-cases/knowledge-graph","title":"Knowledge Graphs","description":"Knowledge graphs represent collections of interconnected descriptions of","sidebar":"mage"},"use-cases/power-grids":{"id":"use-cases/power-grids","title":"Power Grids","description":"Introduction","sidebar":"mage"},"use-cases/process-engineering":{"id":"use-cases/process-engineering","title":"Process Engineering","description":"Introduction","sidebar":"mage"},"use-cases/retail":{"id":"use-cases/retail","title":"Retail","description":"Introduction","sidebar":"mage"},"use-cases/social-media":{"id":"use-cases/social-media","title":"Social Media","description":"Introduction","sidebar":"mage"},"use-cases/telecommunication":{"id":"use-cases/telecommunication","title":"Telecommunication","description":"The graph model is a natural way to represent a telecommunication network, a","sidebar":"mage"},"use-cases/transportation":{"id":"use-cases/transportation","title":"Transportation","description":"Introduction","sidebar":"mage"}}}')}}]);