"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9551],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=l,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||n;return r?a.createElement(h,o(o({ref:t},c),{},{components:r})):a.createElement(h,o({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,o=new Array(n);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var u=2;u<n;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},22684:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=r(87462),l=(r(67294),r(3905)),n=r(65488),o=r(85162);const s={id:"delete-remove-objects",title:"How to delete and remove objects",sidebar_label:"Delete and remove objects"},i=void 0,u={unversionedId:"how-to-guides/query-builder/delete-remove-objects",id:"how-to-guides/query-builder/delete-remove-objects",title:"How to delete and remove objects",description:"You can use the methods delete() and remove() to construct queries that will",source:"@site/gqlalchemy/how-to-guides/query-builder/delete-remove-objects.md",sourceDirName:"how-to-guides/query-builder",slug:"/how-to-guides/query-builder/delete-remove-objects",permalink:"/docs/gqlalchemy/how-to-guides/query-builder/delete-remove-objects",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/how-to-guides/query-builder/delete-remove-objects.md",tags:[],version:"current",frontMatter:{id:"delete-remove-objects",title:"How to delete and remove objects",sidebar_label:"Delete and remove objects"},sidebar:"gqlalchemy",previous:{title:"Call procedures",permalink:"/docs/gqlalchemy/how-to-guides/query-builder/call-procedures"},next:{title:"Set or update objects",permalink:"/docs/gqlalchemy/how-to-guides/query-builder/set-or-update-objects"}},c={},p=[{value:"Delete nodes",id:"delete-nodes",level:2},{value:"Delete relationships",id:"delete-relationships",level:2},{value:"Remove properties",id:"remove-properties",level:2}],d={toc:p};function m(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"You can use the methods ",(0,l.kt)("inlineCode",{parentName:"p"},"delete()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"remove()")," to construct queries that will\nremove nodes and relationships or remove properties and labels."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"delete(variable_expressions: Union[str, List[str]], detach: Optional[bool] = False)")," -\nRemove nodes and relationships. Set the argument ",(0,l.kt)("inlineCode",{parentName:"li"},"detach")," to true in order to\ndelete nodes with their relationships."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"remove(items: Union[str, List[str]])")," - Remove properties and labels.")),(0,l.kt)("h2",{id:"delete-nodes"},"Delete nodes"),(0,l.kt)("p",null,"To delete a node from the database, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"delete()")," method:"),(0,l.kt)(n.Z,{defaultValue:"gqlalchemy",values:[{label:"GQLAlchemy",value:"gqlalchemy"},{label:"Cypher",value:"cypher"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"gqlalchemy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import Match\n\nquery = Match()\n        .node(labels="Person", variable="p")\n        .delete(variable_expressions="p")\n        .execute()\n'))),(0,l.kt)(o.Z,{value:"cypher",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (p:Person) DELETE p;\n")))),(0,l.kt)("h2",{id:"delete-relationships"},"Delete relationships"),(0,l.kt)("p",null,"To delete a relationship from the database, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"delete()")," method:"),(0,l.kt)(n.Z,{defaultValue:"gqlalchemy",values:[{label:"GQLAlchemy",value:"gqlalchemy"},{label:"Cypher",value:"cypher"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"gqlalchemy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import match\n\nquery = Match()\n        .node(labels="Person")\n        .to(relationship_type="FRIENDS_WITH", variable="f")\n        .node(labels="Person")\n        .delete(variable_expressions="f")\n        .execute()\n'))),(0,l.kt)(o.Z,{value:"cypher",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (:Person)-[f:FRIENDS_WITH]->(:Person) DELETE f;\n")))),(0,l.kt)("h2",{id:"remove-properties"},"Remove properties"),(0,l.kt)("p",null,"To remove a property (or properties) from the database, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"remove()")," method:"),(0,l.kt)(n.Z,{defaultValue:"gqlalchemy",values:[{label:"GQLAlchemy",value:"gqlalchemy"},{label:"Cypher",value:"cypher"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"gqlalchemy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import Match\n\nquery = Match()\n        .node(labels="Person", variable="p")\n        .remove(items=["p.name", "p.last_name"])\n'))),(0,l.kt)(o.Z,{value:"cypher",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (p:Person) REMOVE p.name;\n")))))}m.isMDXComponent=!0},85162:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(67294),l=r(86010);const n="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(n,o),hidden:r},t)}},65488:(e,t,r)=>{r.d(t,{Z:()=>m});var a=r(87462),l=r(67294),n=r(86010),o=r(72389),s=r(67392),i=r(7094),u=r(12466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:r,block:o,defaultValue:d,values:m,groupId:h,className:b}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??v.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),f=(0,s.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===d?d:d??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==g&&!y.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:T}=(0,i.U)(),[w,N]=(0,l.useState)(g),q=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=h){const e=k[h];null!=e&&e!==w&&y.some((t=>t.value===e))&&N(e)}const j=e=>{const t=e.currentTarget,r=q.indexOf(t),a=y[r].value;a!==w&&(E(t),N(a),null!=h&&T(h,String(a)))},O=e=>{var t;let r=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const t=q.indexOf(e.currentTarget)+1;r=q[t]??q[0];break}case"ArrowLeft":{const t=q.indexOf(e.currentTarget)-1;r=q[t]??q[q.length-1];break}}null==(t=r)||t.focus()};return l.createElement("div",{className:(0,n.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":o},b)},y.map((e=>{let{value:t,label:r,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>q.push(e),onKeyDown:O,onClick:j},o,{className:(0,n.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":w===t})}),r??t)}))),r?(0,l.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return l.createElement(d,(0,a.Z)({key:String(t)},e))}}}]);