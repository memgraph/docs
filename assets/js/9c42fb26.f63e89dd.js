"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[77942],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>c});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=p(t),c=r,g=h["".concat(l,".").concat(c)]||h[c]||u[c]||o;return t?n.createElement(g,i(i({ref:a},d),{},{components:t})):n.createElement(g,i({ref:a},d))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},20205:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=t(87462),r=(t(67294),t(3905));const o={id:"overview",title:"Getting started with Cypher",sidebar_label:"Getting started",slug:"/"},i=void 0,s={unversionedId:"overview",id:"overview",title:"Getting started with Cypher",description:"Cypher is the most widely adopted, fully-specified, and open query language",source:"@site/cypher-manual/overview.md",sourceDirName:".",slug:"/",permalink:"/docs/cypher-manual/",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Getting started with Cypher",sidebar_label:"Getting started",slug:"/"},sidebar:"cypher_manual",next:{title:"What are graph databases",permalink:"/docs/cypher-manual/what-are-graph-databases"}},l={},p=[{value:"Quick start",id:"quick-start",level:2},{value:"What are graph databases?",id:"what-are-graph-databases",level:2},{value:"Cypher query language",id:"cypher-query-language",level:2},{value:"Working with Memgraph",id:"working-with-memgraph",level:2},{value:"Import data",id:"import-data",level:2},{value:"Connecting nodes",id:"connecting-nodes",level:2},{value:"Reading existing data",id:"reading-existing-data",level:2},{value:"Updating nodes and relationships",id:"updating-nodes-and-relationships",level:2},{value:"Deleting nodes and relationships",id:"deleting-nodes-and-relationships",level:2},{value:"Clauses",id:"clauses",level:2},{value:"Extension clauses",id:"extension-clauses",level:2},{value:"Functions",id:"functions",level:2}],d={toc:p};function u(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Cypher")," is the most widely adopted, fully-specified, and open query language\nfor property graph databases. It provides an intuitive way to work with property\ngraphs."),(0,r.kt)("h2",{id:"quick-start"},"Quick start"),(0,r.kt)("p",null,"If you are new to the ",(0,r.kt)("strong",{parentName:"p"},"Cypher")," query language, take a look at what you can do\nwith a few simple commands. You will use our sandbox that we have already filled\nwith sample data. There is no need for you to install anything at this point.\nSimply open Game of Thrones Deaths dataset on ",(0,r.kt)("a",{parentName:"p",href:"https://playground.memgraph.com/sandbox/game-of-thrones-deaths"},(0,r.kt)("strong",{parentName:"a"},"Memgraph\nplayground")),".\nYou will find some predefined queries there that will help you to get a glimpse\nof what you can accomplish with Cypher."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Playground supports only read operations. If you'd like to modify the dataset,\nyou will need to ",(0,r.kt)("a",{parentName:"p",href:"../memgraph/installation"},"install and run Memgraph")," on your\ncomputer.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Check out our free ",(0,r.kt)("a",{parentName:"p",href:"https://memgraph.com/learn-cypher-query-language"},(0,r.kt)("strong",{parentName:"a"},"Cypher e-mail\ncourse"))," and learn the Cypher\nquery language in 10 days.")),(0,r.kt)("h2",{id:"what-are-graph-databases"},"What are graph databases?"),(0,r.kt)("p",null,"Is this your first encounter with graph databases? If so, get familiar with\n",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/what-are-graph-databases"},"graph database terminology")," before you dip dive into them."),(0,r.kt)("h2",{id:"cypher-query-language"},"Cypher query language"),(0,r.kt)("p",null,"Now that you know what graph databases are let's see how you can use ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/cypher-query-language"},"Cypher\nquery language")," to get the job done."),(0,r.kt)("h2",{id:"working-with-memgraph"},"Working with Memgraph"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/working-with-memgraph"},"Memgraph")," has everything you need to start working\nwith your data and streams."),(0,r.kt)("h2",{id:"import-data"},"Import data"),(0,r.kt)("p",null,"You can easily ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/import-data"},"Import data")," or add new data to Memgraph."),(0,r.kt)("h2",{id:"connecting-nodes"},"Connecting nodes"),(0,r.kt)("p",null,"Memgraph is all about connections. Learn how to ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/connecting-nodes"},"connect\nnodes")," with relationships."),(0,r.kt)("h2",{id:"reading-existing-data"},"Reading existing data"),(0,r.kt)("p",null,"When you have nodes and relationships, you will surely want to ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/reading-existing-data"},"read the\nexisting data")," and learn how you traverse\nrelationships."),(0,r.kt)("h2",{id:"updating-nodes-and-relationships"},"Updating nodes and relationships"),(0,r.kt)("p",null,"Things change over time. The same is true for your data. Learn how to ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/updating-nodes-and-relationships"},"update\nnodes and relationships")," with already\nexisting data. You can even create some new data along the way."),(0,r.kt)("h2",{id:"deleting-nodes-and-relationships"},"Deleting nodes and relationships"),(0,r.kt)("p",null,"Sometimes you will no longer need parts of the data. You can easily ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/deleting-nodes-and-relationships"},"delete nodes\nand relationships"),". You can even delete all\nof your data, but be careful with this if you don't have a backup!"),(0,r.kt)("h2",{id:"clauses"},"Clauses"),(0,r.kt)("p",null,"Maybe ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/clauses"},"clauses")," are the reason why you are here. We have\ncreated a list of all Cypher clauses that Memgraph supports."),(0,r.kt)("h2",{id:"extension-clauses"},"Extension clauses"),(0,r.kt)("p",null,"Extension clauses (for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"FOREACH"),"), are additional clauses added in\nCypher query language. Jump on the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/extension-clauses"},"extensions")," page and have a look!"),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("p",null,"Sometimes clauses are not enough to get the data you are looking for. Don't\nworry, Memgraph has a lot of built-in ",(0,r.kt)("a",{parentName:"p",href:"/docs/cypher-manual/functions"},"functions")," that will help\nyou to get the right data."))}u.isMDXComponent=!0}}]);