"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30230],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),s=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(a),h=r,g=d["".concat(m,".").concat(h)]||d[h]||u[h]||i;return a?n.createElement(g,l(l({ref:t},p),{},{components:a})):n.createElement(g,l({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},19163:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(67294);const r=e=>{let{children:t,videoSrc:a}=e;const r=n.useRef(null);return n.useEffect((()=>{const e=()=>{const e=r.current.offsetWidth*(9/16);r.current.style.height=`${e}px`};return window.addEventListener("resize",e),e(),()=>{window.removeEventListener("resize",e)}}),[]),n.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},n.createElement("div",{style:{flex:"0 1 60%"}},t),n.createElement("div",{style:{flex:"0 1 35%",position:"relative"},ref:r},n.createElement("div",{style:{paddingBottom:"56.25%",position:"relative"}},n.createElement("iframe",{style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},src:a,frameBorder:"0",allow:"accelerometer; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}))))}},31239:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>m,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),i=a(19163);const l={id:"changelog",title:"Changelog",sidebar_label:"Changelog"},o=void 0,m={unversionedId:"changelog",id:"version-2.8.0/changelog",title:"Changelog",description:"v2.8 - May 18, 2023",source:"@site/memgraph_versioned_docs/version-2.8.0/changelog.md",sourceDirName:".",slug:"/changelog",permalink:"/docs/memgraph/2.8.0/changelog",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.8.0/changelog.md",tags:[],version:"2.8.0",frontMatter:{id:"changelog",title:"Changelog",sidebar_label:"Changelog"},sidebar:"memgraph",previous:{title:"Telemetry",permalink:"/docs/memgraph/2.8.0/under-the-hood/telemetry"}},s={},p=[{value:"v2.8 - May 18, 2023",id:"v28---may-18-2023",level:2},{value:"New features and improvements",id:"new-features-and-improvements",level:3},{value:"Bug fixes",id:"bug-fixes",level:3},{value:"v2.7 - Apr 5, 2023",id:"v27---apr-5-2023",level:2},{value:"New features and improvements",id:"new-features-and-improvements-1",level:3},{value:"Bug fixes",id:"bug-fixes-1",level:3},{value:"v2.6 - Mar 07, 2023",id:"v26---mar-07-2023",level:2},{value:"Major features and improvements",id:"major-features-and-improvements",level:3},{value:"Bug fixes",id:"bug-fixes-2",level:3},{value:"v2.5.2 - Jan 26, 2023",id:"v252---jan-26-2023",level:2},{value:"Bug Fixes",id:"bug-fixes-3",level:3},{value:"v2.5.1 - Jan 19, 2023",id:"v251---jan-19-2023",level:2},{value:"Bug Fixes",id:"bug-fixes-4",level:3},{value:"v2.5.0 - Dec 13, 2022",id:"v250---dec-13-2022",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-1",level:3},{value:"Bug Fixes",id:"bug-fixes-5",level:3},{value:"v2.4.2 - Nov 7, 2022",id:"v242---nov-7-2022",level:2},{value:"Bug Fixes",id:"bug-fixes-6",level:3},{value:"v2.4.1 - Oct 7, 2022",id:"v241---oct-7-2022",level:2},{value:"Bug Fixes",id:"bug-fixes-7",level:3},{value:"v2.4.0 - Sep 15, 2022",id:"v240---sep-15-2022",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-2",level:3},{value:"Bug Fixes",id:"bug-fixes-8",level:3},{value:"v2.3.1 - Jun 23, 2022",id:"v231---jun-23-2022",level:2},{value:"Improvement",id:"improvement",level:3},{value:"Bug Fixes",id:"bug-fixes-9",level:3},{value:"v2.3.0 - Apr 27, 2022",id:"v230---apr-27-2022",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-3",level:3},{value:"Bug Fixes",id:"bug-fixes-10",level:3},{value:"v2.2.1 - Mar 17, 2022",id:"v221---mar-17-2022",level:2},{value:"Bug Fixes",id:"bug-fixes-11",level:3},{value:"v2.2.0 - Feb 18, 2022",id:"v220---feb-18-2022",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-4",level:3},{value:"Bug Fixes",id:"bug-fixes-12",level:3},{value:"v2.1.1 - Dec 07, 2021",id:"v211---dec-07-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-5",level:3},{value:"Bug Fixes",id:"bug-fixes-13",level:3},{value:"v2.1.0 - Nov 22, 2021",id:"v210---nov-22-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-6",level:3},{value:"Bug Fixes",id:"bug-fixes-14",level:3},{value:"v2.0.1 - Oct 12, 2021",id:"v201---oct-12-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-7",level:3},{value:"Bug Fixes",id:"bug-fixes-15",level:3},{value:"v2.0.0 - Oct 5, 2021",id:"v200---oct-5-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-8",level:3},{value:"Bug Fixes",id:"bug-fixes-16",level:3},{value:"v1.6.1 - Jul 24, 2021",id:"v161---jul-24-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-9",level:3},{value:"Bug Fixes",id:"bug-fixes-17",level:3},{value:"v1.6.0 - Jul 7, 2021",id:"v160---jul-7-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-10",level:3},{value:"Bug Fixes",id:"bug-fixes-18",level:3},{value:"v1.5.0 - May 28, 2021",id:"v150---may-28-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-11",level:3},{value:"Bug Fixes",id:"bug-fixes-19",level:3},{value:"v1.4.0 - Apr 2, 2021",id:"v140---apr-2-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-12",level:3},{value:"Bug Fixes",id:"bug-fixes-20",level:3},{value:"v1.3.0 - Jan 26, 2021",id:"v130---jan-26-2021",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-13",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes",level:3},{value:"v1.2.0 - Oct 20, 2020",id:"v120---oct-20-2020",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-14",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-1",level:3},{value:"v1.1.0 - Jul 1, 2020",id:"v110---jul-1-2020",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-15",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-2",level:3},{value:"v1.0.0 - Apr 3, 2020",id:"v100---apr-3-2020",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-16",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-3",level:3},{value:"v0.50.0 - Dec 11, 2019",id:"v0500---dec-11-2019",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-17",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-4",level:3},{value:"v0.15.0 - Jul 17, 2019",id:"v0150---jul-17-2019",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-18",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-5",level:3},{value:"v0.14.1 - Jan 22, 2019",id:"v0141---jan-22-2019",level:2},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-6",level:3},{value:"v0.14.0 - Oct 30, 2018",id:"v0140---oct-30-2018",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-19",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-7",level:3},{value:"v0.13.0 - Oct 18, 2018",id:"v0130---oct-18-2018",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-20",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-8",level:3},{value:"v0.12.0 - Jul 4, 2018",id:"v0120---jul-4-2018",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-21",level:3},{value:"v0.11.0 - Jun 20, 2018",id:"v0110---jun-20-2018",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-22",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-9",level:3},{value:"v0.10.0 - Apr 24, 2018",id:"v0100---apr-24-2018",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-23",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-10",level:3},{value:"v0.9.0 - Dec 18, 2017",id:"v090---dec-18-2017",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-24",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-11",level:3},{value:"v0.8.0",id:"v080",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-25",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-12",level:3},{value:"v0.7.0",id:"v070",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-26",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-13",level:3},{value:"v0.6.0",id:"v060",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-27",level:3},{value:"v0.5.0",id:"v050",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-28",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-14",level:3},{value:"Build 837",id:"build-837",level:2},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-15",level:3},{value:"Build 825",id:"build-825",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-29",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-16",level:3},{value:"Build 783",id:"build-783",level:2},{value:"Major Features and Improvements",id:"major-features-and-improvements-30",level:3},{value:"Bug Fixes and Other Changes",id:"bug-fixes-and-other-changes-17",level:3}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{videoSrc:"https://www.youtube.com/embed/5JvBBUjpGRA",mdxType:"VideoBySide"},(0,r.kt)("h2",{id:"v28---may-18-2023"},"v2.8 - May 18, 2023"),(0,r.kt)("h3",{id:"new-features-and-improvements"},"New features and improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Data recovery is now up to 6x faster depending on the number of available\ncores, as ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/backup#snapshots"},"snapshot loading is distributed among several\nthreads"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/868"},"#868")),(0,r.kt)("li",{parentName:"ul"},"During the recovery, indexes can also  be created using multiple threads, thus\nspeeding up the process. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/882"},"#882")),(0,r.kt)("li",{parentName:"ul"},"In the Enterprise Edition, Memgraph now ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/exposing-system-metrics"},"exposes system\nmetrics")," via an HTTP endpoint, so\nyou can get information about transactions, query latency and various other\nproperties. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/940"},"#940")),(0,r.kt)("li",{parentName:"ul"},"It\u2019s now possible to use the ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/data-types#maps"},"map projection\nsyntax")," to create maps. Map\nprojections are convenient for building maps based on existing values and they\nare used by data access tools like GraphQL.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/892"},"#892")),(0,r.kt)("li",{parentName:"ul"},"You can now check if ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/backup"},"the data directory")," is\n(un)locked with the ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA DIRECTORY LOCK STATUS;")," query.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/933"},"#933")),(0,r.kt)("li",{parentName:"ul"},"You can now check the current ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/storage-modes"},"storage\nmode")," and ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/transactions"},"isolation\nlevels")," by running the ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW STORAGE INFO;"),"\nquery. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/883"},"#883")),(0,r.kt)("li",{parentName:"ul"},"Check the suspected ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/server-stats#build-information"},"build type of the Memgraph\nexecutable")," by\nrunning the ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW BUILD INFO;")," query.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/894"},"#894")),(0,r.kt)("li",{parentName:"ul"},"Performance has been improved by optimizing the deallocation of resources in\nMemgraph's custom ",(0,r.kt)("inlineCode",{parentName:"li"},"PoolResource")," memory allocator.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/898"},"#898")))),(0,r.kt)("h3",{id:"bug-fixes"},"Bug fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Running Python procedures now consume less memory.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/932"},"#932")),(0,r.kt)("li",{parentName:"ul"},"Memory allocation in LOAD CSV queries has been optimized to avoid performance\ndegradation. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/877"},"#877")," "),(0,r.kt)("li",{parentName:"ul"},"Query profiles of the LOAD CSV queries now show the correct values of memory\nusage. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/885"},"#885"))),(0,r.kt)(i.Z,{videoSrc:"https://www.youtube.com/embed/kJG98VkPMGU",mdxType:"VideoBySide"},(0,r.kt)("h2",{id:"v27---apr-5-2023"},"v2.7 - Apr 5, 2023"),(0,r.kt)("h3",{id:"new-features-and-improvements-1"},"New features and improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can now choose between ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/storage-modes"},"two different storage modes"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Transactional mode - the default database mode that favors\nstrongly-consistent ACID transactions using WAL files and periodic\nsnapshots, but requires more time and resources during data import and\nanalysis."),(0,r.kt)("li",{parentName:"ul"},"Analytical mode - speeds up import and data analysis but offers no ACID\nguarantees besides manually created snapshots.\nSwitch between modes within the session using the ",(0,r.kt)("inlineCode",{parentName:"li"},"STORAGE MODE\nIN_MEMORY_{TRANSACTIONAL|ANALYTICAL};")," query. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/772"},"#772")))),(0,r.kt)("li",{parentName:"ul"},"You can now call ",(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/clauses/call"},"subqueries")," inside existing queries using the CALL clause.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/794"},"#794")),(0,r.kt)("li",{parentName:"ul"},"When you want to filter data using properties that all have label:property\nindexes set, you can make Memgraph analyze the properties on all or several\nlabels with the ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/indexing#analyze-graph"},(0,r.kt)("inlineCode",{parentName:"a"},"ANALYZE GRAPH;"),"\nquery"),". By calculating the\ndistribution of property values, Memgraph will be able to select the optimal\nindex for the query and it will execute faster.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/812"},"#812")),(0,r.kt)("li",{parentName:"ul"},"If, for example, you are no longer interested in the results of the query you\nran, or the procedure you built is running in an infinite loop, you can ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/transactions#managing-transactions"},"stop\nthe transaction"),"\nwith the ",(0,r.kt)("inlineCode",{parentName:"li"},"TERMINATE TRANSACTIONS tid;")," query; Find out the transaction ID with\n",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW TRANSACTIONS;")," query.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/790"},"#790")),(0,r.kt)("li",{parentName:"ul"},"With the ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/configuration#other"},"new flag"),(0,r.kt)("inlineCode",{parentName:"li"},"password-encryption-algorithm")," you can choose between ",(0,r.kt)("inlineCode",{parentName:"li"},"bcrypt"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"sha256"),", and\n",(0,r.kt)("inlineCode",{parentName:"li"},"sha256-multiple")," encryption algorithms. SHA256 offers better performance\ncompared to the more secure but less performant bcrypt.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/839"},"#839")),(0,r.kt)("li",{parentName:"ul"},"Import using the ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/import-data/load-csv-clause"},"LOAD CSV clause")," has\nbeen further improved by using a memory allocator which will reuse memory\nblocks allocated while processing the ",(0,r.kt)("inlineCode",{parentName:"li"},"LOAD CSV")," query.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/825"},"#825")))),(0,r.kt)("h3",{id:"bug-fixes-1"},"Bug fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The users who have ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/security#label-based-access-control"},"global visibility on the\ngraph")," will\nexperience a slight improvement in performance regarding label-based access\ncontrol as the engine no longer check privileges for each node.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/837"},"#837")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/built-in-graph-algorithms#all-shortest-paths"},"All shortest paths\nalgorithm"),"\nnow supports multiedges. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/832"},"#832"))),(0,r.kt)("h2",{id:"v26---mar-07-2023"},"v2.6 - Mar 07, 2023"),(0,r.kt)("h3",{id:"major-features-and-improvements"},"Major features and improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Importing speed using the LOAD CSV clause has been improved due to two changes:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Performance improvement in accessing values from large arrays or maps with numerous properties. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/774"},"#744")),(0,r.kt)("li",{parentName:"ul"},"Upon creating a large number of node or relationship properties, properties are stored in a property store all at once, instead of individually. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/788"},"#788")))),(0,r.kt)("li",{parentName:"ul"},"Newly implemented ",(0,r.kt)("inlineCode",{parentName:"li"},"exists()")," function allows using patterns as part of the filtering clause. Check the ",(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/clauses/where"},"Cypher Manual")," for usage. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/818"},"#818")),(0,r.kt)("li",{parentName:"ul"},"With the new ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/query-modules/api/mock-python-api"},"Python mock query module API"),", you can now develop and test Python query modules for Memgraph without having to run a Memgraph instance. The mock API is compatible with the Python API and thus developed modules can be added to Memgraph as-is. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/757"},"#757")),(0,r.kt)("li",{parentName:"ul"},"Memgraph now supports Fedora 36 and Ubuntu 22.04 for ARM. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/787"},"#787")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/810"},"#810"))),(0,r.kt)("h3",{id:"bug-fixes-2"},"Bug fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"torch")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"igraph")," can no longer be removed from the ",(0,r.kt)("inlineCode",{parentName:"li"},"svs.modules")," cache to avoid issues after reload. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/720"},"#720")),(0,r.kt)("li",{parentName:"ul"},"Newly created nodes now comply with the set label based authorization rules. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/755"},"#755")),(0,r.kt)("li",{parentName:"ul"},"Constructing LocalDateTime objects with invalid parameters doesn\u2019t crash Memgraph anymore, but throws an informative exception. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/819"},"#819")),(0,r.kt)("li",{parentName:"ul"},"Error message warning about incompatible ",(0,r.kt)("inlineCode",{parentName:"li"},"epoch_id")," between a MAIN and REPLICA instance has been improved. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/786"},"#786"))),(0,r.kt)("h2",{id:"v252---jan-26-2023"},"v2.5.2 - Jan 26, 2023"),(0,r.kt)("h3",{id:"bug-fixes-3"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Variables can be used inside nested ",(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/extension-clauses"},"FOREACH clauses"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/725"},"#725")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/extension-clauses"},"FOREACH clause")," can now use indexes if needed (e.g. in case of MERGE). ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/736"},"#736")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/query-modules/api/cpp-api"},"C++ API")," now allows setting and getting node and relationship properties. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/732"},"#732")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/clauses/optional-match"},"OPTIONAL MATCH")," can now use label property indexes that are referencing the previously matched variables. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/736"},"#736")),(0,r.kt)("li",{parentName:"ul"},"Iterating over all relationships in a graph now works as expected, as well as checking whether the graph contains a given relationship. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/743"},"#743")),(0,r.kt)("li",{parentName:"ul"},"Implementation of the ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/built-in-graph-algorithms#all-shortest-paths"},"All Shortest Paths algorithm")," was fixed so the paths are no longer duplicated when the upper bound is used. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/737"},"#737"))),(0,r.kt)("h2",{id:"v251---jan-19-2023"},"v2.5.1 - Jan 19, 2023"),(0,r.kt)("h3",{id:"bug-fixes-4"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The LOAD CSV clause now uses less RAM to load a whole CSV file. Modification\nmade to improve the LOAD CSV operation, also influenced high memory usage\noperations with objects such as lists and map. Modifying or accessing elements\ninside those objects now also uses less RAM.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/712"},"#712")),(0,r.kt)("li",{parentName:"ul"},"The logic of the ",(0,r.kt)("inlineCode",{parentName:"li"},"read_write_type_checker")," was corrected so queries now get\nthe right ",(0,r.kt)("inlineCode",{parentName:"li"},"rw_type"),", making the replication system work as expected.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/709"},"#709")),(0,r.kt)("li",{parentName:"ul"},"Bolt protocol has been improved by adding the server-assigned query ID (",(0,r.kt)("inlineCode",{parentName:"li"},"qid"),")\nas part of the transactions' metadata.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/721"},"#721")),(0,r.kt)("li",{parentName:"ul"},"Fixed a trigger bug that would cause an error if Memgraph is configured to run\nwithout properties on edges. As a result of the fiy, triggers are now working\nas expected when there are no properties on edges.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/717"},"#717"))),(0,r.kt)("h2",{id:"v250---dec-13-2022"},"v2.5.0 - Dec 13, 2022"),(0,r.kt)("h3",{id:"major-features-and-improvements-1"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DISTINCT")," operator can now be used with aggregation functions. Until now, if\nyou wanted to use an aggregation function with distinct values, you had to\nwrite a query similar to this one ",(0,r.kt)("inlineCode",{parentName:"li"},"WITH DISTINCT n.prop as distinct_prop\nRETURN COUNT(distinct_prop)"),". Now you can use the ",(0,r.kt)("inlineCode",{parentName:"li"},"DISTINCT")," operator like in\nthe following query, ",(0,r.kt)("inlineCode",{parentName:"li"},"RETURN COUNT(DISTINCT n.prop)"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/665"},"#654")),(0,r.kt)("li",{parentName:"ul"},"You can now create a user before the Bolt server starts using the environment\nvariables ",(0,r.kt)("inlineCode",{parentName:"li"},"MEMGRAPH_USER")," for the username, ",(0,r.kt)("inlineCode",{parentName:"li"},"MEMGRAPH_PASSWORD")," for the\npassword and ",(0,r.kt)("inlineCode",{parentName:"li"},"MEMGRAPH_PASSFILE")," file that contains username and password for\ncreating the user in the following format: ",(0,r.kt)("inlineCode",{parentName:"li"},"username:password"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/696"},"#696")),(0,r.kt)("li",{parentName:"ul"},"With the new configuration flag ",(0,r.kt)("inlineCode",{parentName:"li"},"init_file")," you can execute queries from the\nCYPHERL file which need to be executed before the Bolt server starts and with\nthe configuration flag ",(0,r.kt)("inlineCode",{parentName:"li"},"init_data_file")," you can execute queries from the\nCYPHERL file immediately after the Bolt server starts.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/696"},"#696"))),(0,r.kt)("h3",{id:"bug-fixes-5"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Constructors and assignment operators in the C++ query modules API now work as\nexpected, and the API type check in the ",(0,r.kt)("inlineCode",{parentName:"li"},"ValueNumeric")," method now correctly\nrecognizes numeric types.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/688"},"#688")),(0,r.kt)("li",{parentName:"ul"},"Error message support (",(0,r.kt)("inlineCode",{parentName:"li"},"SetErrorMessage"),") has been added to query methods that\nuse the MAGE C++ API. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/688"},"#688")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"EmptyResult")," sink operator was added to the Memgraph's planner. This\nmeans that results produced by a query ",(0,r.kt)("inlineCode",{parentName:"li"},"MATCH (n) SET n.test_prop = 2")," will get\nexhausted which was a problem in some Bolt clients implementations, e.g in\nGolang's client. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/667"},"#667")),(0,r.kt)("li",{parentName:"ul"},"Fixed Python submodules reloading when calling ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL mg.load()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL\nmg.load_all()"),". Before, only the Python module would be reloaded, but now all\ndependencies get reloaded as well. This includes Python's utility submodules\nand Python packages, which means that the environment with Python packages can\nbe changed without turning off the database.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/653"},"#653"))),(0,r.kt)("h2",{id:"v242---nov-7-2022"},"v2.4.2 - Nov 7, 2022"),(0,r.kt)("h3",{id:"bug-fixes-6"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed a bug when calling ",(0,r.kt)("inlineCode",{parentName:"li"},"AllShortestPath")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," function.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/636"},"#636")),(0,r.kt)("li",{parentName:"ul"},"Fixed bug when getting iterating over in-edges of a Node.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/613"},"#582"))),(0,r.kt)("h2",{id:"v241---oct-7-2022"},"v2.4.1 - Oct 7, 2022"),(0,r.kt)("h3",{id:"bug-fixes-7"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed bug when getting EdgeType from Edge object or Label from Vertex object\nin query modules. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/582"},"#582")),(0,r.kt)("li",{parentName:"ul"},"Fix a bug when changing role permissions for label based authorization, by\npassing user's instead of role's ",(0,r.kt)("inlineCode",{parentName:"li"},"fine_grained_access_handler"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/579"},"#579"))),(0,r.kt)("h2",{id:"v240---sep-15-2022"},"v2.4.0 - Sep 15, 2022"),(0,r.kt)("h3",{id:"major-features-and-improvements-2"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add replica state to ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW REPLICAS")," query.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/379"},"#379")),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"current_timestamp")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"number_of_timestamp_behind_master")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW\nREPLICAS")," query. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/412"},"#412")),(0,r.kt)("li",{parentName:"ul"},"Query ",(0,r.kt)("inlineCode",{parentName:"li"},"REGISTER REPLICA replica_name SYNC")," no longer supports ",(0,r.kt)("inlineCode",{parentName:"li"},"TIMEOUT"),"\nparameter. To mimic the previous behavior of ",(0,r.kt)("inlineCode",{parentName:"li"},"REGISTER REPLICA replica_name\nSYNC WITH TIMEOUT 1"),", one should use ",(0,r.kt)("inlineCode",{parentName:"li"},"REGISTER REPLICA replica_name ASYNC"),"\ninstead. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/423"},"#423")),(0,r.kt)("li",{parentName:"ul"},"Make behavior more ",(0,r.kt)("a",{parentName:"li",href:"http://opencypher.org/"},"openCypher")," compliant regarding\nchecking against ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," values is ",(0,r.kt)("inlineCode",{parentName:"li"},"CASE")," expressions.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/432"},"#432")),(0,r.kt)("li",{parentName:"ul"},"Previously registered replicas are automatically registered on restart of\nMemgraph. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/415"},"#415")),(0,r.kt)("li",{parentName:"ul"},"Add new command ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW CONFIG")," that returns the configuration of the currently\nrunning Memgraph instance.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/459"},"#459")),(0,r.kt)("li",{parentName:"ul"},"Extend the shortest paths functionality with ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/built-in-graph-algorithms#all-shortest-paths"},"All Shortest\nPath"),"\nquery. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/409"},"#409")),(0,r.kt)("li",{parentName:"ul"},"Extend the query modules C and Python API to enable logging on different\nlevels. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/417"},"#417")),(0,r.kt)("li",{parentName:"ul"},"Added C++ query modules API. Instead of using the C API call, C++ API calls\nsignificantly simplify the implementation of fast query modules.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/546"},"#546")),(0,r.kt)("li",{parentName:"ul"},"[Enterprise]"," Added support for label-based authorization. In addition to\nclause-based authorization rules, each user can now be granted ",(0,r.kt)("inlineCode",{parentName:"li"},"NOTHING"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"READ"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"UPDATE"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE_DELETE")," permission on a given label or edge\ntype. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/484"},"#484")),(0,r.kt)("li",{parentName:"ul"},"New Cypher function ",(0,r.kt)("inlineCode",{parentName:"li"},"project()")," creates a projected graph consisting of nodes\nand edges from aggregated paths. Any query module or algorithm can be now run\non a subgraph, by passing the variable of the projected graph as the first\nargument of the query module procedure. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/535"},"#535"))),(0,r.kt)("h3",{id:"bug-fixes-8"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added a check to ensure two replicas cannot be registered to an identical\nend-point. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/406"},"#406")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toString")," function is now able to accept ",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalTime"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalDateTime"),"\nand ",(0,r.kt)("inlineCode",{parentName:"li"},"Duration")," data types.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/429"},"#429")),(0,r.kt)("li",{parentName:"ul"},"Aggregation functions now return the openCypher-compliant results on ",(0,r.kt)("inlineCode",{parentName:"li"},"null"),"\ninput and display the correct behavior when grouped with other operators.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/448"},"#448")),(0,r.kt)("li",{parentName:"ul"},"Corrected inconsistencies and incorrect behavior with regards to sync\nreplicas. For more detail about the behavior, please check ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/under-the-hood/replication"},"Under the\nhood view on replication"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/435"},"#435")),(0,r.kt)("li",{parentName:"ul"},"Fixed handling ",(0,r.kt)("inlineCode",{parentName:"li"},"ROUTE")," Bolt message. Memgraph didn't handle the fields of\n",(0,r.kt)("inlineCode",{parentName:"li"},"ROUTE")," message properly. Therefore the session might be stuck in a state\nwhere even the ",(0,r.kt)("inlineCode",{parentName:"li"},"RESET")," message did not help. With this fix, sending a ",(0,r.kt)("inlineCode",{parentName:"li"},"RESET"),"\nmessage will properly reset the session.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/475"},"#475"))),(0,r.kt)("h2",{id:"v231---jun-23-2022"},"v2.3.1 - Jun 23, 2022"),(0,r.kt)("h3",{id:"improvement"},"Improvement"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updated results return by ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/streams#check-stream"},(0,r.kt)("inlineCode",{parentName:"a"},"CHECK\nSTREAM"))," query to group\nall queries/raw messages on single line per batch.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/394"},"#394")),(0,r.kt)("li",{parentName:"ul"},"Add frequent replica ping. ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," instance checks state of the replicas with\ngiven frequency controller by ",(0,r.kt)("inlineCode",{parentName:"li"},"--replication-replica-check-delay-sec"),". The\ncheck allows latest information about the state of each replica from ",(0,r.kt)("inlineCode",{parentName:"li"},"main"),"\npoint of view. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/380"},"#380")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"BATCH_LIMIT")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"TIMEOUT")," options to ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/streams#start-a-stream"},(0,r.kt)("inlineCode",{parentName:"a"},"START\nSTREAM"))," query that\nreturns the raw message received by the transformation. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/392"},"#392"))),(0,r.kt)("h3",{id:"bug-fixes-9"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fix header on ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW REPLICATION ROLE")," query and wrong timeout info on ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW\nREPLICAS")," query. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/376"},"#376")),(0,r.kt)("li",{parentName:"ul"},"Fix WebSocket connection with clients that do not use binary protocol header. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/403"},"#403")),(0,r.kt)("li",{parentName:"ul"},"Fix SSL connection shutdown hanging. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/395"},"#395")),(0,r.kt)("li",{parentName:"ul"},"Fix module symbol loading with python modules. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/335"},"#335")),(0,r.kt)("li",{parentName:"ul"},"Fix header on ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW REPLICATION ROLE")," query and wrong timeout info on\n",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW REPLICAS query"),". ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/376"},"#376")),(0,r.kt)("li",{parentName:"ul"},"Adapted compilation flag so that the memory allocator uses JEMALLOC while\ncounting allocated memory. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/401"},"#401"))),(0,r.kt)("h2",{id:"v230---apr-27-2022"},"v2.3.0 - Apr 27, 2022"),(0,r.kt)("h3",{id:"major-features-and-improvements-3"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/extension-clauses"},(0,r.kt)("inlineCode",{parentName:"a"},"FOREACH"))," clause.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/351"},"#351")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/connect-to-memgraph/websocket"},"Bolt over WebSocket")," support to\nMemgraph. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/384"},"#384")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("a",{parentName:"li",href:"/cypher-manual/functions/#user-defined-memgraph-magic-functions"},"user-defined Memgraph magic\nfunctions"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/345"},"#345"))),(0,r.kt)("h3",{id:"bug-fixes-10"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed incorrect loading of C query modules.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/387"},"#387"))),(0,r.kt)("h2",{id:"v221---mar-17-2022"},"v2.2.1 - Mar 17, 2022"),(0,r.kt)("h3",{id:"bug-fixes-11"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added CentOS 7 release by fixing the compatibility issue with the older\nversion of SSL used on CentOS 7.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/361"},"#361"))),(0,r.kt)("h2",{id:"v220---feb-18-2022"},"v2.2.0 - Feb 18, 2022"),(0,r.kt)("h3",{id:"major-features-and-improvements-4"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added support for compilation on ARM architectures (aarch64) and Docker\nsupport for running Memgraph on Apple M1 machines.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/340"},"#340")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/monitoring-server"},"monitoring server")," that forwards\ncertain information from Memgraph to the clients connected to it (e.g. logs)\nusing WebSocket. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/337"},"#337")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"CONFIGS")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"CREDENTIALS")," options to ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/streams/#kafka"},"Kafka streams"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/328"},"#328")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/query-modules/module-file-utilities"},"built-in procedures used for handling Python module\nfiles"),".\n",(0,r.kt)("inlineCode",{parentName:"li"},"mg.create_module_file"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"mg.update_module_file"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"mg.delete_module_file"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"mg.get_module_file"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"mg.get_module_files")," allow you to do modifications\non your Python module files, get their content, and list all the files present\nin your query module directories directly from Memgraph.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/330"},"#330")),(0,r.kt)("li",{parentName:"ul"},"Built-in procedures\n",(0,r.kt)("a",{parentName:"li",href:"/mage/usage/loading-modules#utility-query-module"},(0,r.kt)("inlineCode",{parentName:"a"},"mg.procedures"))," and\n",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/streams/transformation-modules#utility-procedures-for-transformations"},(0,r.kt)("inlineCode",{parentName:"a"},"mg.transformations")),"\nreturn additional information about the procedures and transformations\nscripts. ",(0,r.kt)("inlineCode",{parentName:"li"},"path")," returns an absolute path to the module file containing the\nprocedure, while ",(0,r.kt)("inlineCode",{parentName:"li"},"is_editable")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the file can be edited using\nMemgraph or ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," otherwise.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/310"},"#310")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/server-stats"},"Added ",(0,r.kt)("inlineCode",{parentName:"a"},"SHOW VERSION")," query")," that returns the version of the Memgraph server\nwhich is being queried. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/265"},"#265"))),(0,r.kt)("h3",{id:"bug-fixes-12"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The reference count is increased when ",(0,r.kt)("inlineCode",{parentName:"li"},"Py_None")," is returned from the ",(0,r.kt)("inlineCode",{parentName:"li"},"_mgp"),"\nmodule. This fixes a nondeterministic fatal Python error.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/320"},"#320")),(0,r.kt)("li",{parentName:"ul"},"Use correct error when printing warning in rebalance callback of Kafka\nconsumer. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/321"},"#321")),(0,r.kt)("li",{parentName:"ul"},"Fix transaction handling in streams in case of serialization error.\nPreviously, a serialization error caused an exception to be thrown since\nnested transactions are not supported. After this fix, the transactions are\nhandled correctly in the transaction retry logic.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/339"},"#339")),(0,r.kt)("li",{parentName:"ul"},"Temporal types ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalTime")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalDateTime")," instantiations return subsecond\nprecision. Additionally, query modules ",(0,r.kt)("inlineCode",{parentName:"li"},"mg_local_date_time_now()")," and\n",(0,r.kt)("inlineCode",{parentName:"li"},"mg_local_time_now()")," also return subsecond precision.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/333"},"#333"))),(0,r.kt)("h2",{id:"v211---dec-07-2021"},"v2.1.1 - Dec 07, 2021"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Loading streams created by versions of Memgraph older than 2.1 is not\npossible. We suggest you extract the necessary information using the older\nversion of Memgraph and recreate the streams in a newer version (Memgraph 2.1\nand newer)."))),(0,r.kt)("h3",{id:"major-features-and-improvements-5"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added procedures for retrieving configuration information specific for each\nstream type. ",(0,r.kt)("inlineCode",{parentName:"li"},"mg.pulsar_stream_info")," will return information about a specific\nPulsar stream and ",(0,r.kt)("inlineCode",{parentName:"li"},"mg.kafka_stream_info")," will return information about a\nspecific Kafka stream. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/301"},"#301")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SHOW STREAMS")," now returns default values for batch interval and batch size if\nthey weren't specified. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/306"},"#306"))),(0,r.kt)("h3",{id:"bug-fixes-13"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Query execution stats, returned after a Cypher query was executed, are now\nupdated with the changes made in write procedures.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/304"},"#304")),(0,r.kt)("li",{parentName:"ul"},"Loading streams created by older versions won't cause Memgraph to crash.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/302"},"#302"))),(0,r.kt)("h2",{id:"v210---nov-22-2021"},"v2.1.0 - Nov 22, 2021"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-1"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Loading streams created by older versions cause Memgraph to crash. The only\npossible workaround involves ",(0,r.kt)("strong",{parentName:"li"},"deleting the existing streams"),".\nThe streams can be deleted by the ",(0,r.kt)("inlineCode",{parentName:"li"},"DROP STREAM")," query in the old versions of\nMemgraph. After upgrading to this version, the ",(0,r.kt)("inlineCode",{parentName:"li"},"streams")," directory has to be\ndeleted manually from Memgraph's data directory (on Debian-based systems, it\nis ",(0,r.kt)("inlineCode",{parentName:"li"},"/var/lib/memgraph")," by default)."),(0,r.kt)("li",{parentName:"ul"},"The query for creating a Kafka stream now requires the ",(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA")," keyword. The\nprevious form ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE STREAM ...")," was changed to ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE KAFKA STREAM ..."),"."))),(0,r.kt)("h3",{id:"major-features-and-improvements-6"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Now supporting Bolt protocol version 4.3.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/226"},"#226")),(0,r.kt)("li",{parentName:"ul"},"Streams support for retrying conflicting transactions. When a message is\nprocessed from a certain stream source, a query is executed as a part of the\ntransaction. If that transaction fails because of other conflicting\ntransactions, the transaction is retried a set number of times. The number of\nretries and interval between each retry can be controlled with configs\n",(0,r.kt)("inlineCode",{parentName:"li"},"--stream-transaction-conflict-retries")," and\n",(0,r.kt)("inlineCode",{parentName:"li"},"--stream-transaction-retry-interval"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/294"},"#294")),(0,r.kt)("li",{parentName:"ul"},"Added procedure to configure the starting offset (to consume messages from) of\na topic (and its partitions).\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/282"},"#282")),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"BOOTSTRAP_SERVERS")," option to ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE KAFKA STREAM")," which you can check\n",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/streams"},"here"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/282"},"#282")),(0,r.kt)("li",{parentName:"ul"},"Added Bolt notifications in the query summary to inform the user about results\nor to give useful tips. When a query executes successfully, sometimes is\nnecessary to give users tips or extra information about the execution.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/285"},"#285")),(0,r.kt)("li",{parentName:"ul"},"Added execution statistics in the query summary to inform user on how many\nobjects were affected. E.g., when you run a query with a ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE")," clause,\nyou'll know how many nodes/edges were created by it.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/285"},"#285")),(0,r.kt)("li",{parentName:"ul"},"Added support for connecting to Pulsar as a new stream source. For more\ndetails, check out our ",(0,r.kt)("a",{parentName:"li",href:"reference-guide/streams"},"reference pages"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/293"},"#293"))),(0,r.kt)("h3",{id:"bug-fixes-14"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allow duration values to be used as weights in the ",(0,r.kt)("a",{parentName:"li",href:"/memgraph/reference-guide/built-in-graph-algorithms#weighted-shortest-path"},"Weighted Shortest\nPath"),"\nquery. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/278"},"#278")),(0,r.kt)("li",{parentName:"ul"},"Fix linkage error when ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_local_time_get_minute")," is used.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/273"},"#273")),(0,r.kt)("li",{parentName:"ul"},"Fix crash when temporal types are used with ",(0,r.kt)("inlineCode",{parentName:"li"},"ORDER BY")," clause.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/299"},"#299"))),(0,r.kt)("h2",{id:"v201---oct-12-2021"},"v2.0.1 - Oct 12, 2021"),(0,r.kt)("h3",{id:"major-features-and-improvements-7"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updated a startup message with a link to the ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/"},"getting started\npage"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/259"},"#259")),(0,r.kt)("li",{parentName:"ul"},"Updated certain error and warning messages in the logs with links to the\ndocumentation explaining the problem in more detail.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/243"},"#243")),(0,r.kt)("li",{parentName:"ul"},"Updated mgconsole to\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/mgconsole/releases/tag/v1.1.0"},"v1.1.0"),".\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/260"},"#260"))),(0,r.kt)("h3",{id:"bug-fixes-15"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Graph updates made in the write procedures are now correctly registered in the\ntriggers. ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/262"},"#262")),(0,r.kt)("li",{parentName:"ul"},"Fixed ",(0,r.kt)("inlineCode",{parentName:"li"},"DETACH DELETE")," interaction with the triggers. Previously, vertices\ndeleted by the ",(0,r.kt)("inlineCode",{parentName:"li"},"DETACH DELETE")," would not be registered by triggers if only ",(0,r.kt)("inlineCode",{parentName:"li"},"ON () DELETE")," trigger existed.\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/memgraph/memgraph/pull/266"},"#266"))),(0,r.kt)("h2",{id:"v200---oct-5-2021"},"v2.0.0 - Oct 5, 2021"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-2"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Changed the ",(0,r.kt)("inlineCode",{parentName:"li"},"timestamp()")," function to return ",(0,r.kt)("inlineCode",{parentName:"li"},"microseconds")," instead of\n",(0,r.kt)("inlineCode",{parentName:"li"},"milliseconds"),"."),(0,r.kt)("li",{parentName:"ul"},"Most of the query modules C API functions are changed to return a ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_error"),"\nas a more fine-grained way of error reporting. The only exceptions are the\nfunctions that free allocated memory (",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_free")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_global_free"),") and\ndestroy objects (",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_value_destroy"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_list_destroy"),", etc.) which\nremain the same."),(0,r.kt)("li",{parentName:"ul"},"The first user created using the ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE USER")," query will have all the\nprivileges granted to him. Previously, you could've locked yourself out of\nMemgraph by creating a user and immediately disconnecting."))),(0,r.kt)("h3",{id:"major-features-and-improvements-8"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added support for temporal types, a feature that allows the user to manipulate\nand store time related data in the graph. For more information take a look at\nthe ",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/data-types"},"reference guide")),(0,r.kt)("li",{parentName:"ul"},"Added support for parameters with ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE")," clause in the following form:\n",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE (n $param)"),"."),(0,r.kt)("li",{parentName:"ul"},"Introduced settings to Memgraph that can be modified during runtime. You can\ncheck out more details ",(0,r.kt)("a",{parentName:"li",href:"reference-guide/runtime-settings"},"here"),"."),(0,r.kt)("li",{parentName:"ul"},"Added writeable procedure support, so\n",(0,r.kt)("a",{parentName:"li",href:"/docs/memgraph/2.8.0/reference-guide/query-modules/implement-custom-query-modules/custom-query-module-example"},"procedures"),"\ncan modify the graph by creating and deleting vertices and edges, modifying\nthe labels of vertices or setting the properties of vertices and edges.")),(0,r.kt)("h3",{id:"bug-fixes-16"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed planning of queries with ",(0,r.kt)("inlineCode",{parentName:"li"},"MERGE")," clause. If a previously defined symbol\nis used as property value inside the ",(0,r.kt)("inlineCode",{parentName:"li"},"MERGE")," clause, the planner will\ncorrectly use the label-property index if present."),(0,r.kt)("li",{parentName:"ul"},"Unused memory is correctly returned to OS when ",(0,r.kt)("inlineCode",{parentName:"li"},"FREE MEMORY")," query is used.\nBefore, Memgraph would free up the memory internally and not return it to the\nOS. Because of that Memgraph could allocate more memory from the OS than it's\nallowed."),(0,r.kt)("li",{parentName:"ul"},"Fixed recovery from durability files. Because of a wrong check, Memgraph could\ncrash and leave the durability files in an invalid state making recovery not\npossible."),(0,r.kt)("li",{parentName:"ul"},"Fixed usage of ",(0,r.kt)("inlineCode",{parentName:"li"},"execute")," keyword in queries. Because of the special way we\nhandle the ",(0,r.kt)("inlineCode",{parentName:"li"},"EXECUTE")," keyword from the ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE TRIGGER")," query using that same\nkeyword in other contexts caused Memgraph to crash.")),(0,r.kt)("h2",{id:"v161---jul-24-2021"},"v1.6.1 - Jul 24, 2021"),(0,r.kt)("h3",{id:"major-features-and-improvements-9"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added proper privilege checks for queries executed by triggers and stream\ntransformations.")),(0,r.kt)("h3",{id:"bug-fixes-17"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed error handling in streams to make restarting streams possible after\nfailing. The issue is caused by not rolling back the transaction in which the\nquery failed, so when the stream was restarted and tried to process the next\nbatch of messages it was still in a transaction, but it tried to start a new\none. Now the transaction is rolled back in case of any errors during query\nexecution, so a new transaction can be started during the processing of the\nnext batch of messages.")),(0,r.kt)("h2",{id:"v160---jul-7-2021"},"v1.6.0 - Jul 7, 2021"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-3"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Changed the ",(0,r.kt)("inlineCode",{parentName:"li"},"LOCK_PATH")," permission to ",(0,r.kt)("inlineCode",{parentName:"li"},"DURABILITY"),"."))),(0,r.kt)("h3",{id:"major-features-and-improvements-10"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added support for consuming Kafka streams. You can connect Memgraph to a Kafka\ncluster and run queries based on the messages received. The transformation\nfrom Kafka to Cypher queries is done using ",(0,r.kt)("strong",{parentName:"li"},"Transformation Modules"),", a\nconcept similar to Query Modules. Using our Python and C API, you can easily\ndefine functions that analyze Kafka messages and generate different queries\nbased on them. The stream connection can be configured, tested, stopped,\nstarted, checked, and dropped."),(0,r.kt)("li",{parentName:"ul"},"Introduced global allocators for Query Modules using C API, so the data can be\npreserved between multiple runs of the same procedure."),(0,r.kt)("li",{parentName:"ul"},"Introduced new isolation levels, ",(0,r.kt)("inlineCode",{parentName:"li"},"READ COMMITTED")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"READ_UNCOMMITTED"),". The\nisolation level can be set with a config. Also, you can set the isolation\nlevel for a certain session or the next transaction. The names of the\nisolation levels should be self-explanatory, unlike the ",(0,r.kt)("inlineCode",{parentName:"li"},"SNAPSHOT ISOLATION"),"\nwhich is still the default isolation level."),(0,r.kt)("li",{parentName:"ul"},"The query timeouts are now triggered using a different method. Before, we used\nthe TSC to measure the execution time. Unfortunately, this proved unreliable\nfor certain CPUs (AMD Ryzen 7 and M1), which caused queries to timeout almost\ninstantly. We switched to POSIX timer which ",(0,r.kt)("strong",{parentName:"li"},"should")," work on every hardware,\nwhile not affecting the performance."),(0,r.kt)("li",{parentName:"ul"},"Added a config, ",(0,r.kt)("inlineCode",{parentName:"li"},"allow-load-csv"),", with which you can disable ",(0,r.kt)("inlineCode",{parentName:"li"},"LOAD CSV"),"\nclause. ",(0,r.kt)("inlineCode",{parentName:"li"},"LOAD CSV")," can read and display data from any file on the system which\ncould be insecure for some systems. Because of that, we added a config that\nallows you to disable that clause in every case."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE SNAPSHOT")," query. Snapshots are created every few minutes, using\nthis query you can trigger snapshot creation instantly."),(0,r.kt)("li",{parentName:"ul"},"Increased the default query timeout to 10 minutes. The previous default amount\nof 3 minutes proved too small, especially for queries that use ",(0,r.kt)("inlineCode",{parentName:"li"},"LOAD CSV")," with\na large dataset.")),(0,r.kt)("h3",{id:"bug-fixes-18"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed parsing of certain types in Query Modules using Python API."),(0,r.kt)("li",{parentName:"ul"},"Fixed a concurrency bug for Query Modules using Python API. Running the same\nprocedure from multiple clients caused the Memgraph instance to crash."),(0,r.kt)("li",{parentName:"ul"},"Fixed restoring triggers that call procedures. Because the triggers were\nrestored before the procedures, the query trigger executes couldn't find the\ncalled procedure, which caused the restore to fail. Switching up the order was\nenough to fix the problem.")),(0,r.kt)("h2",{id:"v150---may-28-2021"},"v1.5.0 - May 28, 2021"),(0,r.kt)("h3",{id:"major-features-and-improvements-11"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added database triggers. You can now create, delete, and print out triggers\nthat execute Cypher statements. You can create custom actions whenever a node\nor an edge is created, updated, or deleted. All the triggers are persisted on\nthe disk, so no information is lost between runs."),(0,r.kt)("li",{parentName:"ul"},"Replaced mg_client with the mgconsole command-line interface, which ships\ndirectly with Memgraph. You can now install mgconsole directly on Windows and\nmacOS.")),(0,r.kt)("h3",{id:"bug-fixes-19"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed parsing of types for Python procedures for types nested in ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp. List"),".\nFor example, parsing of ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp.List[mgp.Map]")," works now."),(0,r.kt)("li",{parentName:"ul"},"Fixed memory tracking issues. Some of the allocation and deallocation wasn't\ntracked during the query execution."),(0,r.kt)("li",{parentName:"ul"},"Fixed reading CSV files that are using CRLF as the newline symbol."),(0,r.kt)("li",{parentName:"ul"},"Fixed permission issues for ",(0,r.kt)("inlineCode",{parentName:"li"},"LOAD CSV"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"FREE MEMORY"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LOCK DATA DIRECTORY"),",\nand replication queries.")),(0,r.kt)("h2",{id:"v140---apr-2-2021"},"v1.4.0 - Apr 2, 2021"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-4"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Changed ",(0,r.kt)("inlineCode",{parentName:"li"},"MEMORY LIMIT num (KB|MB)")," clause in the procedure calls to ",(0,r.kt)("inlineCode",{parentName:"li"},"PROCEDURE MEMORY LIMIT num (KB|MB)"),". The functionality is still the same."))),(0,r.kt)("h3",{id:"major-features-and-improvements-12"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added replication to community version."),(0,r.kt)("li",{parentName:"ul"},"Added support for multiple query modules directories at the same time. You can\nnow define multiple, comma-separated paths to directories from which the\nmodules will be loaded using the ",(0,r.kt)("inlineCode",{parentName:"li"},"--query-modules-directory")," flag."),(0,r.kt)("li",{parentName:"ul"},"Added support for programatically reading in data from CSV files through the\n",(0,r.kt)("inlineCode",{parentName:"li"},"LOAD CSV")," clause. We support CSV files with and without a header, the\nsupported dialect being Excel."),(0,r.kt)("li",{parentName:"ul"},"Added a new flag ",(0,r.kt)("inlineCode",{parentName:"li"},"--memory-limit")," which enables the user to set the maximum\ntotal amount of memory memgraph can allocate during its runtime."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"FREE MEMORY")," query which tries to free unusued memory chunks in\ndifferent parts of storage."),(0,r.kt)("li",{parentName:"ul"},"Added the memory limit and amount of currently allocated bytes in the result\nof ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW STORAGE INFO")," query."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"QUERY MEMORY LIMIT num (KB|MB)")," to Cypher queries which allows you to\nlimit memory allocation for the entire query. It can be added only at the end\nof the entire Cypher query."),(0,r.kt)("li",{parentName:"ul"},"Added logs for the different parts of the recovery process. ",(0,r.kt)("inlineCode",{parentName:"li"},"INFO"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"DEBUG"),"\nand ",(0,r.kt)("inlineCode",{parentName:"li"},"TRACE")," level all contain additional information that is printed out while\nthe recovery is in progress.")),(0,r.kt)("h3",{id:"bug-fixes-20"},"Bug Fixes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed garbage collector by correctly marking the oldest current timestamp\nafter the database was recovered using the durability files."),(0,r.kt)("li",{parentName:"ul"},"Fixed reloading of the modules with changed result names."),(0,r.kt)("li",{parentName:"ul"},"Fixed profile query to show the correct name of the ScanAll operator variant.")),(0,r.kt)("h2",{id:"v130---jan-26-2021"},"v1.3.0 - Jan 26, 2021"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-5"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Added extra information in durability files to support replication, making it\nincompatible with the durability files generated by older versions of\nMemgraph. Even though the replication is an Enterprise feature, the files are\ncompatible with the Community version."))),(0,r.kt)("h3",{id:"major-features-and-improvements-13"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added support for data replication across a cluster of Memgraph instances.\nSupported instance types are MAIN and REPLICA. Supported replication modes are\nSYNC (all SYNC REPLICAS have to receive data before the MAIN can commit the\ntransaction), ASYNC (MAIN doesn't care if data is replicated), SYNC WITH\nTIMEOUT (MAIN will wait for REPLICAS within the given timeout period, after\ntimout, replication isn't aborted but the replication demotes the REPLICA to\nthe ASYNC mode)."),(0,r.kt)("li",{parentName:"ul"},"Added support for query type deduction. Possible query types are ",(0,r.kt)("inlineCode",{parentName:"li"},"r")," (read),\n",(0,r.kt)("inlineCode",{parentName:"li"},"w")," (write), ",(0,r.kt)("inlineCode",{parentName:"li"},"rw")," (read-write). The query type is returned as a part of the\nsummary."),(0,r.kt)("li",{parentName:"ul"},"Improved logging capabilities by introducing granular logging levels. Added\nnew flag, ",(0,r.kt)("inlineCode",{parentName:"li"},"--log-level"),", which specifies the minimum log level that will be\nprinted. E.g., it's possible to print incoming queries or Bolt server states."),(0,r.kt)("li",{parentName:"ul"},"Added ability to lock the storage data directory by executing the ",(0,r.kt)("inlineCode",{parentName:"li"},"LOCK DATA DIRECTORY")," query which delays the deletion of the files contained in the\ndata directory. The data directory can be unlocked again by executing the\n",(0,r.kt)("inlineCode",{parentName:"li"},"UNLOCK DATA DIRECTORY")," query.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added cleanup of query executions if not in an explicit transaction."),(0,r.kt)("li",{parentName:"ul"},"Fix RPC dangling reference.")),(0,r.kt)("h2",{id:"v120---oct-20-2020"},"v1.2.0 - Oct 20, 2020"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-6"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"SSL is disabled by default (",(0,r.kt)("inlineCode",{parentName:"li"},"--bolt-cert-file")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"--bolt-key-file")," are\nempty). This change might only affect the client connection configuration."))),(0,r.kt)("h3",{id:"major-features-and-improvements-14"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added support for Bolt v4.0 and v4.1."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"mgp_networkx.py")," as an alternative implementation of NetworkX graph\nobjects, which is useful to use Memgraph data from NetworkX algorithms\noptimally."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"nxalg.py")," query module as a proxy to NetworkX algorithms."),(0,r.kt)("li",{parentName:"ul"},"Added plan optimization to use a label-property index where the property is\nnot null. As a result, the query engine, instead of scanning all elements and\napplying the filter, performs a label-property index lookup when possible.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-1"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed Cypher ",(0,r.kt)("inlineCode",{parentName:"li"},"ID")," function ",(0,r.kt)("inlineCode",{parentName:"li"},"Null")," handling. When the ",(0,r.kt)("inlineCode",{parentName:"li"},"ID")," function receives\n",(0,r.kt)("inlineCode",{parentName:"li"},"Null"),", it will also return ",(0,r.kt)("inlineCode",{parentName:"li"},"Null"),"."),(0,r.kt)("li",{parentName:"ul"},"Fixed bug that caused random crashes in SSL communication on platforms that\nuse older versions of OpenSSL (< 1.1) by adding proper multi-threading\nhandling."),(0,r.kt)("li",{parentName:"ul"},"Fix ",(0,r.kt)("inlineCode",{parentName:"li"},"DISCARD")," message handling. The query is now executed before discarding\nthe results.")),(0,r.kt)("h2",{id:"v110---jul-1-2020"},"v1.1.0 - Jul 1, 2020"),(0,r.kt)("h3",{id:"major-features-and-improvements-15"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Properties in nodes and edges are now stored encoded and compressed. This\nchange significantly reduces memory usage. Depending on the specific dataset,\ntotal memory usage can be reduced up to 50%.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Added support for rescanning query modules. Previously, the query modules\ndirectory was scanned only upon startup. Now it is scanned each time the user\nrequests to load a query module. The functions used to load the query modules\nwere renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"mg.load()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mg.load_all()")," (from ",(0,r.kt)("inlineCode",{parentName:"p"},"mg.reload()")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"mg.reload_all()"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Improved execution performance of queries that have an IN list filter by using\nlabel+property indices. Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"MATCH (n: Label) WHERE n.property IN [] ..."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Added support for ",(0,r.kt)("inlineCode",{parentName:"p"},"ANY")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"NONE")," openCypher functions. Previously, only\n",(0,r.kt)("inlineCode",{parentName:"p"},"ALL")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SINGLE")," functions were implemented."))),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-2"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fixed invalid paths returned by variable expansion when the starting node and\ndestination node used the same symbol. Example: ",(0,r.kt)("inlineCode",{parentName:"p"},'MATCH path = (n: Person {name: "John"})-[: KNOWS*]->(n) RETURN path'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Improved semantics of ",(0,r.kt)("inlineCode",{parentName:"p"},"ALL")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SINGLE")," functions to be consistent with\nopenCypher when handling lists with ",(0,r.kt)("inlineCode",{parentName:"p"},"Null")," s.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"SHOW CONSTRAINT INFO")," now returns property names as a list for unique\nconstraints.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Escaped label/property/edgetype names in ",(0,r.kt)("inlineCode",{parentName:"p"},"DUMP DATABASE")," to support names with\nspaces in them.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fixed handling of ",(0,r.kt)("inlineCode",{parentName:"p"},"DUMP DATABASE")," queries in multi-command transactions (\n",(0,r.kt)("inlineCode",{parentName:"p"},"BEGIN"),", ..., ",(0,r.kt)("inlineCode",{parentName:"p"},"COMMIT"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fixed handling of various query types in explicit transactions. For example,\nconstraints were allowed to be created in multi-command transactions (",(0,r.kt)("inlineCode",{parentName:"p"},"BEGIN"),"\n, ..., ",(0,r.kt)("inlineCode",{parentName:"p"},"COMMIT"),") but that isn't a transactional operation and as such can't\nbe allowed in multi-command transactions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fixed integer overflow bugs in ",(0,r.kt)("inlineCode",{parentName:"p"},"COUNT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"LIMIT")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SKIP"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fixed integer overflow bugs in weighted shortest path expansions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fixed various other integer overflow bugs in query execution.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Added Marvel Comic Universe tutorial.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Added FootballTransfers tutorial."))),(0,r.kt)("h2",{id:"v100---apr-3-2020"},"v1.0.0 - Apr 3, 2020"),(0,r.kt)("h3",{id:"major-features-and-improvements-16"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Exposed authentication username/rolename regex as a flag (\n",(0,r.kt)("inlineCode",{parentName:"li"},"--auth-user-or-role-name-regex"),")."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Improved auth module error handling and added support for\nrelative paths."),(0,r.kt)("li",{parentName:"ul"},"Added support for Python query modules. This release of Memgraph supports\nquery modules written using the already existing C API and the new Python API."),(0,r.kt)("li",{parentName:"ul"},"Added support for unique constraints. The unique constraint is created with a\nlabel and one or more properties."),(0,r.kt)("li",{parentName:"ul"},"Implemented support for importing CSV files (",(0,r.kt)("inlineCode",{parentName:"li"},"mg_import_csv"),"). The importer is\ncompatible with the Neo4j batch CSV importer."),(0,r.kt)("li",{parentName:"ul"},"Snapshot and write-ahead log format changed (backward compatible with v0.50)."),(0,r.kt)("li",{parentName:"ul"},"Vertices looked up by their openCypher ID (",(0,r.kt)("inlineCode",{parentName:"li"},"MATCH (n) WHERE ID(n) = ..."),") will\nnow find the node in O(logn) instead of O(n)."),(0,r.kt)("li",{parentName:"ul"},"Improved planning of BFS expansion, a faster, specific approach is now favored\ninstead of a ScanAll+Filter operation."),(0,r.kt)("li",{parentName:"ul"},"Added syntax for limiting memory of ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL"),"."),(0,r.kt)("li",{parentName:"ul"},"Exposed server name that should be used for Bolt handshake as flag (\n",(0,r.kt)("inlineCode",{parentName:"li"},"--bolt-server-name-for-init"),")."),(0,r.kt)("li",{parentName:"ul"},"Added several more functions to the query module C API."),(0,r.kt)("li",{parentName:"ul"},"Implemented a storage locking mechanism that prevents the user from\nconcurrently starting two Memgraph instances with the same data directory.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-3"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Fixed a bug that crashed the database when granting\nprivileges to a user."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Improved Louvain algorithm for community detection."),(0,r.kt)("li",{parentName:"ul"},"Type of variable expansion is now printed in ",(0,r.kt)("inlineCode",{parentName:"li"},"EXPLAIN")," (e.g. ExpandVariable,\nSTShortestPath, BFSExpand, WeightedShortestPath)."),(0,r.kt)("li",{parentName:"ul"},"Correctly display ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"EXPLAIN")," output."),(0,r.kt)("li",{parentName:"ul"},"Correctly delimit arguments when printing the signature of a query module."),(0,r.kt)("li",{parentName:"ul"},"Fixed a planning issue when ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL")," preceded filtering."),(0,r.kt)("li",{parentName:"ul"},"Fixed spelling mistakes in the storage durability module."),(0,r.kt)("li",{parentName:"ul"},"Fixed storage GC indices/constraints subtle race condition."),(0,r.kt)("li",{parentName:"ul"},"Reduced memory allocations in storage API and indices."),(0,r.kt)("li",{parentName:"ul"},"Memgraph version is now outputted to ",(0,r.kt)("inlineCode",{parentName:"li"},"stdout")," when Memgraph is started."),(0,r.kt)("li",{parentName:"ul"},"Improved RPM packaging."),(0,r.kt)("li",{parentName:"ul"},"Reduced number of errors reported in production log when loading query\nmodules."),(0,r.kt)("li",{parentName:"ul"},"Removed ",(0,r.kt)("inlineCode",{parentName:"li"},"early access")," wording from the Community Offering license.")),(0,r.kt)("h2",{id:"v0500---dec-11-2019"},"v0.50.0 - Dec 11, 2019"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-7"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Remove support for Kafka streams."),(0,r.kt)("li",{parentName:"ul"},"Snapshot and write-ahead log format changed (not backward compatible)."),(0,r.kt)("li",{parentName:"ul"},"Removed support for unique constraints."),(0,r.kt)("li",{parentName:"ul"},"Label indices aren't created automatically, create them explicitly instead."),(0,r.kt)("li",{parentName:"ul"},"Renamed several database flags. Please see the configuration file for a list\nof current flags."))),(0,r.kt)("h3",{id:"major-features-and-improvements-17"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Add support for auth module."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," LDAP support migrated to auth module."),(0,r.kt)("li",{parentName:"ul"},"Implemented new graph storage engine."),(0,r.kt)("li",{parentName:"ul"},"Add support for disabling properties on edges."),(0,r.kt)("li",{parentName:"ul"},"Add support for existence constraints."),(0,r.kt)("li",{parentName:"ul"},"Add support for custom openCypher procedures using a C API."),(0,r.kt)("li",{parentName:"ul"},"Support loading query modules implementing read-only procedures."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL <procedure> YIELD <result>")," syntax for invoking loaded procedures."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE INDEX ON :Label")," for creating label indices."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"DROP INDEX ON :Label")," for dropping label indices."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"DUMP DATABASE")," clause to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add functions for treating character strings as byte strings.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-4"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fix several memory management bugs."),(0,r.kt)("li",{parentName:"ul"},"Reduce memory usage in query execution."),(0,r.kt)("li",{parentName:"ul"},"Fix bug that crashes the database when ",(0,r.kt)("inlineCode",{parentName:"li"},"EXPLAIN")," is used.")),(0,r.kt)("h2",{id:"v0150---jul-17-2019"},"v0.15.0 - Jul 17, 2019"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-8"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Snapshot and write-ahead log format changed (not backward compatible)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"indexInfo()")," function replaced with ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW INDEX INFO")," syntax."),(0,r.kt)("li",{parentName:"ul"},"Removed support for unique index. Use unique constraints instead."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CREATE UNIQUE INDEX ON :label (property)")," replaced with ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE CONSTRAINT ON (n:label) ASSERT n.property IS UNIQUE"),"."),(0,r.kt)("li",{parentName:"ul"},"Changed semantics for ",(0,r.kt)("inlineCode",{parentName:"li"},"COUNTER")," openCypher function."))),(0,r.kt)("h3",{id:"major-features-and-improvements-18"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Add new privilege, ",(0,r.kt)("inlineCode",{parentName:"li"},"STATS")," for accessing storage info."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," LDAP authentication and authorization support."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Add audit logging feature."),(0,r.kt)("li",{parentName:"ul"},"Add multiple properties unique constraint which replace unique indices."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW STORAGE INFO")," feature."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"PROFILE")," clause to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE CONSTRAINT")," clause to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"DROP CONSTRAINT")," clause to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"SHOW CONSTRAINT INFO")," feature."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"uniformSample")," function to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add regex matching to openCypher.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-5"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fix bug in query comment parsing."),(0,r.kt)("li",{parentName:"ul"},"Fix bug in query symbol table."),(0,r.kt)("li",{parentName:"ul"},"Fix OpenSSL memory leaks."),(0,r.kt)("li",{parentName:"ul"},"Make authentication case insensitive."),(0,r.kt)("li",{parentName:"ul"},"Remove ",(0,r.kt)("inlineCode",{parentName:"li"},"COALESCE")," function."),(0,r.kt)("li",{parentName:"ul"},"Add movie tutorial."),(0,r.kt)("li",{parentName:"ul"},"Add backpacking tutorial.")),(0,r.kt)("h2",{id:"v0141---jan-22-2019"},"v0.14.1 - Jan 22, 2019"),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-6"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fix bug in explicit transaction handling."),(0,r.kt)("li",{parentName:"ul"},"Fix bug in edge filtering by edge type and destination.")),(0,r.kt)("h2",{id:"v0140---oct-30-2018"},"v0.14.0 - Oct 30, 2018"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-9"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Write-ahead log format changed (not backward compatible)."))),(0,r.kt)("h3",{id:"major-features-and-improvements-19"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Reduce memory usage in distributed usage."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"DROP INDEX")," feature."),(0,r.kt)("li",{parentName:"ul"},"Improve SSL error messages.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-7"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Fix issues with reading and writing in a distributed query."),(0,r.kt)("li",{parentName:"ul"},"Correctly handle an edge case with unique constraint checks."),(0,r.kt)("li",{parentName:"ul"},"Fix a minor issue with ",(0,r.kt)("inlineCode",{parentName:"li"},"mg_import_csv"),"."),(0,r.kt)("li",{parentName:"ul"},"Fix an issue with ",(0,r.kt)("inlineCode",{parentName:"li"},"EXPLAIN"),".")),(0,r.kt)("h2",{id:"v0130---oct-18-2018"},"v0.13.0 - Oct 18, 2018"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-10"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Write-ahead log format changed (not backward compatible)."),(0,r.kt)("li",{parentName:"ul"},"Snapshot format changed (not backward compatible)."))),(0,r.kt)("h3",{id:"major-features-and-improvements-20"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Authentication and authorization support."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Kafka integration."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Support dynamic worker addition in distributed."),(0,r.kt)("li",{parentName:"ul"},"Reduce memory usage and improve overall performance."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE UNIQUE INDEX")," clause to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"EXPLAIN")," clause to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"inDegree")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"outDegree")," functions to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Improve BFS performance when both endpoints are known."),(0,r.kt)("li",{parentName:"ul"},"Add new ",(0,r.kt)("inlineCode",{parentName:"li"},"node-label"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"relationship-type")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"quote")," options to\n",(0,r.kt)("inlineCode",{parentName:"li"},"mg_import_csv")," tool."),(0,r.kt)("li",{parentName:"ul"},"Reduce memory usage of ",(0,r.kt)("inlineCode",{parentName:"li"},"mg_import_csv"),".")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-8"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Fix an edge case in distributed index creation."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Fix issues with Cartesian in distributed queries."),(0,r.kt)("li",{parentName:"ul"},"Correctly handle large messages in Bolt protocol."),(0,r.kt)("li",{parentName:"ul"},"Fix issues when handling explicitly started transactions in queries."),(0,r.kt)("li",{parentName:"ul"},"Allow openCypher keywords to be used as variable names."),(0,r.kt)("li",{parentName:"ul"},"Revise and make user visible error messages consistent."),(0,r.kt)("li",{parentName:"ul"},"Improve aborting time consuming execution.")),(0,r.kt)("h2",{id:"v0120---jul-4-2018"},"v0.12.0 - Jul 4, 2018"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-11"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Snapshot format changed (not backward compatible)."))),(0,r.kt)("h3",{id:"major-features-and-improvements-21"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Improved Id Cypher function."),(0,r.kt)("li",{parentName:"ul"},"Added string functions to openCypher (",(0,r.kt)("inlineCode",{parentName:"li"},"lTrim"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"left"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"rTrim"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"replace"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"reverse"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"right"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"split"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"substring"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"toLower"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"toUpper"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"trim"),"\n)."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"timestamp")," function to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Added support for dynamic property access with ",(0,r.kt)("inlineCode",{parentName:"li"},"[]")," operator.")),(0,r.kt)("h2",{id:"v0110---jun-20-2018"},"v0.11.0 - Jun 20, 2018"),(0,r.kt)("h3",{id:"major-features-and-improvements-22"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Improve Cartesian support in distributed queries."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Improve distributed execution of BFS."),(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Dynamic graph partitioner added."),(0,r.kt)("li",{parentName:"ul"},"Static nodes/edges id generators exposed through the Id Cypher function."),(0,r.kt)("li",{parentName:"ul"},"Properties on disk added."),(0,r.kt)("li",{parentName:"ul"},"Telemetry added."),(0,r.kt)("li",{parentName:"ul"},"SSL support added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toString")," function added.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-9"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Document issues with Docker on OS X."),(0,r.kt)("li",{parentName:"ul"},"Add BFS and Dijkstra's algorithm examples to documentation.")),(0,r.kt)("h2",{id:"v0100---apr-24-2018"},"v0.10.0 - Apr 24, 2018"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-12"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Snapshot format changed (not backward compatible)."))),(0,r.kt)("h3",{id:"major-features-and-improvements-23"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[Enterprise Ed.]"," Distributed storage and execution."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"reduce")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"single")," functions added to openCypher."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"wShortest")," edge expansion added to openCypher."),(0,r.kt)("li",{parentName:"ul"},"Support packaging RPM on CentOS 7.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-10"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Report an error if updating a deleted element."),(0,r.kt)("li",{parentName:"ul"},"Log an error if reading info on available memory fails."),(0,r.kt)("li",{parentName:"ul"},"Fix a bug when ",(0,r.kt)("inlineCode",{parentName:"li"},"MATCH")," would stop matching if a result was empty, but later\nresults still contain data to be matched. The simplest case of this was the\nquery: ",(0,r.kt)("inlineCode",{parentName:"li"},"UNWIND [1, 2, 3] AS x MATCH (n: Label {prop: x}) RETURN n"),". If there\nwas no node ",(0,r.kt)("inlineCode",{parentName:"li"},"(: Label {prop: 1})"),", then the ",(0,r.kt)("inlineCode",{parentName:"li"},"MATCH")," wouldn't even try to find\nfor ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," being 2 or 3."),(0,r.kt)("li",{parentName:"ul"},"Report an error if trying to compare a property value with something that\ncannot be stored in a property."),(0,r.kt)("li",{parentName:"ul"},"Fix crashes in some obscure cases."),(0,r.kt)("li",{parentName:"ul"},"Commit log automatically garbage collected."),(0,r.kt)("li",{parentName:"ul"},"Add minor performance improvements.")),(0,r.kt)("h2",{id:"v090---dec-18-2017"},"v0.9.0 - Dec 18, 2017"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("h3",{parentName:"admonition",id:"breaking-changes-13"},"Breaking Changes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Snapshot format changed (not backward compatible)."),(0,r.kt)("li",{parentName:"ul"},"Snapshot configuration flags changed, general durability flags added."))),(0,r.kt)("h3",{id:"major-features-and-improvements-24"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Write-ahead log added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nodes")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"relationships")," functions added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"UNION")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"UNION ALL")," is implemented."),(0,r.kt)("li",{parentName:"ul"},"Concurrent index creation is now enabled.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-11"},"Bug Fixes and Other Changes"),(0,r.kt)("h2",{id:"v080"},"v0.8.0"),(0,r.kt)("h3",{id:"major-features-and-improvements-25"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CASE construct (without aggregations)."),(0,r.kt)("li",{parentName:"ul"},"Named path support added."),(0,r.kt)("li",{parentName:"ul"},"Maps can now be stored as node/edge properties."),(0,r.kt)("li",{parentName:"ul"},"Map indexing supported."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rand")," function added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"assert")," function added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"counter")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"counterSet")," functions added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"indexInfo")," function added."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"collect")," aggregation now supports Map collection."),(0,r.kt)("li",{parentName:"ul"},"Changed the BFS syntax.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-12"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use \\u to specify 4 digit codepoint and \\U for 8 digit"),(0,r.kt)("li",{parentName:"ul"},"Keywords appearing in header (named expressions) keep original case."),(0,r.kt)("li",{parentName:"ul"},"Our Bolt protocol implementation is now completely compatible with the\nprotocol version 1 specification. (",(0,r.kt)("a",{parentName:"li",href:"https://boltprotocol.org/v1/"},"https://boltprotocol.org/v1/"),")"),(0,r.kt)("li",{parentName:"ul"},"Added a log warning when running out of memory and the\n",(0,r.kt)("inlineCode",{parentName:"li"},"memory_warning_threshold")," flag"),(0,r.kt)("li",{parentName:"ul"},"Edges are no longer additionally filtered after expansion.")),(0,r.kt)("h2",{id:"v070"},"v0.7.0"),(0,r.kt)("h3",{id:"major-features-and-improvements-26"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Variable length path ",(0,r.kt)("inlineCode",{parentName:"li"},"MATCH"),"."),(0,r.kt)("li",{parentName:"ul"},"Explicitly started transactions (multi-query transactions)."),(0,r.kt)("li",{parentName:"ul"},"Map literal."),(0,r.kt)("li",{parentName:"ul"},"Query parameters (except for parameters in place of property maps)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"all")," function in openCypher."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"degree")," function in openCypher."),(0,r.kt)("li",{parentName:"ul"},"User specified transaction execution timeout.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-13"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Concurrent ",(0,r.kt)("inlineCode",{parentName:"li"},"BUILD INDEX")," deadlock now returns an error to the client."),(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"MATCH")," preceeded by ",(0,r.kt)("inlineCode",{parentName:"li"},"OPTIONAL MATCH")," expansion inconsistencies."),(0,r.kt)("li",{parentName:"ul"},"High concurrency Antlr parsing bug."),(0,r.kt)("li",{parentName:"ul"},"Indexing improvements."),(0,r.kt)("li",{parentName:"ul"},"Query stripping and caching speedups.")),(0,r.kt)("h2",{id:"v060"},"v0.6.0"),(0,r.kt)("h3",{id:"major-features-and-improvements-27"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"AST caching."),(0,r.kt)("li",{parentName:"ul"},"Label + property index support."),(0,r.kt)("li",{parentName:"ul"},"Different logging setup & format.")),(0,r.kt)("h2",{id:"v050"},"v0.5.0"),(0,r.kt)("h3",{id:"major-features-and-improvements-28"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use label indexes to speed up querying."),(0,r.kt)("li",{parentName:"ul"},"Generate multiple query plans and use the cost estimator to select the best."),(0,r.kt)("li",{parentName:"ul"},"Snapshots & Recovery."),(0,r.kt)("li",{parentName:"ul"},"Abandon old yaml configuration and migrate to gflags."),(0,r.kt)("li",{parentName:"ul"},"Query stripping & AST caching support.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-14"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed race condition in MVCC. Hints exp+aborted race condition prevented."),(0,r.kt)("li",{parentName:"ul"},"Fixed conceptual bug in MVCC GC. Evaluate old records w.r.t. the oldest.\ntransaction's id AND snapshot."),(0,r.kt)("li",{parentName:"ul"},"User friendly error messages thrown from the query engine.")),(0,r.kt)("h2",{id:"build-837"},"Build 837"),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-15"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"List indexing supported with preceeding IN (for example in query ",(0,r.kt)("inlineCode",{parentName:"li"},"RETURN 1 IN [[1, 2]][0]"),").")),(0,r.kt)("h2",{id:"build-825"},"Build 825"),(0,r.kt)("h3",{id:"major-features-and-improvements-29"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RETURN ",(0,r.kt)("em",{parentName:"li"},", count("),"), OPTIONAL MATCH, UNWIND, DISTINCT (except DISTINCT in\naggregate functions), list indexing and slicing, escaped labels, IN LIST\noperator, range function.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-16"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"TCP_NODELAY -> import should be faster."),(0,r.kt)("li",{parentName:"ul"},"Clear hint bits.")),(0,r.kt)("h2",{id:"build-783"},"Build 783"),(0,r.kt)("h3",{id:"major-features-and-improvements-30"},"Major Features and Improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SKIP, LIMIT, ORDER BY."),(0,r.kt)("li",{parentName:"ul"},"Math functions."),(0,r.kt)("li",{parentName:"ul"},"Initial support for MERGE clause.")),(0,r.kt)("h3",{id:"bug-fixes-and-other-changes-17"},"Bug Fixes and Other Changes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Unhandled Lock Timeout Exception.")))}d.isMDXComponent=!0}}]);