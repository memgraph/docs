"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[60974],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,g=m["".concat(i,".").concat(d)]||m[d]||s[d]||o;return t?a.createElement(g,l(l({ref:n},c),{},{components:t})):a.createElement(g,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<o;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},45956:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return s}});var a=t(87462),r=t(63366),o=(t(67294),t(3905)),l=["components"],p={id:"remove",title:"REMOVE clause",sidebar_label:"REMOVE"},i=void 0,u={unversionedId:"clauses/remove",id:"clauses/remove",title:"REMOVE clause",description:"The REMOVE clause is used to remove labels and properties from nodes and relationships.",source:"@site/cypher-manual/clauses/remove.md",sourceDirName:"clauses",slug:"/clauses/remove",permalink:"/docs/cypher-manual/clauses/remove",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/clauses/remove.md",tags:[],version:"current",frontMatter:{id:"remove",title:"REMOVE clause",sidebar_label:"REMOVE"},sidebar:"cypher_manual",previous:{title:"OPTIONAL MATCH",permalink:"/docs/cypher-manual/clauses/optional-match"},next:{title:"RETURN",permalink:"/docs/cypher-manual/clauses/return"}},c={},s=[{value:"Dataset",id:"dataset",level:2},{value:"1. Removing a property",id:"1-removing-a-property",level:2},{value:"2. Removing a label",id:"2-removing-a-label",level:2},{value:"Dataset queries",id:"dataset-queries",level:2}],m={toc:s};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"REMOVE")," clause is used to remove labels and properties from nodes and relationships."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#1-removing-a-property"},"Removing a property")," ",(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#2-removing-a-label"},"Removing a label"))),(0,o.kt)("h2",{id:"dataset"},"Dataset"),(0,o.kt)("p",null,"The following examples are executed with this dataset. You can create this dataset\nlocally by executing the queries at the end of the page: ",(0,o.kt)("a",{parentName:"p",href:"#data-set-queries"},"Dataset queries"),"."),(0,o.kt)("img",{src:"https://raw.githubusercontent.com/g-despot/images/master/data_set.png",alt:"Data set",style:{height:380}}),(0,o.kt)("h2",{id:"1-removing-a-property"},"1. Removing a property"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"REMOVE")," clause can be used to remove a property from a node or relationship:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n:Country {name: 'United Kingdom'})\nREMOVE n.name\nRETURN n;\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-nocopy"},'+-----------------------------------------------------------------------------+\n| n                                                                           |\n+-----------------------------------------------------------------------------+\n| (:Country {continent: "Europe", language: "English", population: 66000000}) |\n+-----------------------------------------------------------------------------+\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"REMOVE")," clause can't be used to remove all properties from a node or relationship. Instead, take a look at the ",(0,o.kt)("inlineCode",{parentName:"p"},"SET")," clause."),(0,o.kt)("h2",{id:"2-removing-a-label"},"2. Removing a label"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"REMOVE")," clause can be used to remove a label from a node:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n:Country {name: 'United Kingdom'})\nREMOVE n:Country\nRETURN n;\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-nocopy"},'+--------------------------------------------------------------------------------------------+\n| n                                                                                          |\n+--------------------------------------------------------------------------------------------+\n| ({continent: "Europe", language: "English", name: "United Kingdom", population: 66000000}) |\n+--------------------------------------------------------------------------------------------+\n')),(0,o.kt)("p",null,"Let's add the label ",(0,o.kt)("inlineCode",{parentName:"p"},"Country")," back to the node with the name ",(0,o.kt)("inlineCode",{parentName:"p"},"United Kingdom")," and the additional label ",(0,o.kt)("inlineCode",{parentName:"p"},"Kingdom"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n {name: 'United Kingdom'})\nSET n:Country:Kingdom;\n")),(0,o.kt)("p",null,"You can now remove multiple labels from a node at the same time."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n:Country {name: 'United Kingdom'})\nREMOVE n:Country:Kingdom\nRETURN n;\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-nocopy"},'+--------------------------------------------------------------------------------------------+\n| n                                                                                          |\n+--------------------------------------------------------------------------------------------+\n| ({continent: "Europe", language: "English", name: "United Kingdom", population: 66000000}) |\n+--------------------------------------------------------------------------------------------+\n')),(0,o.kt)("h2",{id:"dataset-queries"},"Dataset queries"),(0,o.kt)("p",null,"We encourage you to try out the examples by yourself.\nYou can get our dataset locally by executing the following query block."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n) DETACH DELETE n;\n\nCREATE (c1:Country {name: 'Germany', language: 'German', continent: 'Europe', population: 83000000});\nCREATE (c2:Country {name: 'France', language: 'French', continent: 'Europe', population: 67000000});\nCREATE (c3:Country {name: 'United Kingdom', language: 'English', continent: 'Europe', population: 66000000});\n\nMATCH (c1),(c2)\nWHERE c1.name= 'Germany' AND c2.name = 'France'\nCREATE (c2)<-[:WORKING_IN {date_of_start: 2014}]-(p:Person {name: 'John'})-[:LIVING_IN {date_of_start: 2014}]->(c1);\n\nMATCH (c)\nWHERE c.name= 'United Kingdom'\nCREATE (c)<-[:WORKING_IN {date_of_start: 2014}]-(p:Person {name: 'Harry'})-[:LIVING_IN {date_of_start: 2013}]->(c);\n\nMATCH (p1),(p2)\nWHERE p1.name = 'John' AND p2.name = 'Harry'\nCREATE (p1)-[:FRIENDS_WITH {date_of_start: 2011}]->(p2);\n\nMATCH (p1),(p2)\nWHERE p1.name = 'John' AND p2.name = 'Harry'\nCREATE (p1)<-[:FRIENDS_WITH {date_of_start: 2012}]-(:Person {name: 'Anna'})-[:FRIENDS_WITH {date_of_start: 2014}]->(p2);\n\nMATCH (p),(c1),(c2)\nWHERE p.name = 'Anna' AND c1.name = 'United Kingdom' AND c2.name = 'Germany'\nCREATE (c2)<-[:LIVING_IN {date_of_start: 2014}]-(p)-[:LIVING_IN {date_of_start: 2014}]->(c1);\n\nMATCH (n)-[r]->(m) RETURN n,r,m;\n")))}d.isMDXComponent=!0}}]);