"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16836],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),g=p(t),u=a,d=g["".concat(l,".").concat(u)]||g[u]||s[u]||o;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var m={};for(var l in n)hasOwnProperty.call(n,l)&&(m[l]=n[l]);m.originalType=e,m.mdxType="string"==typeof e?e:a,i[1]=m;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},89340:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return s}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],m={id:"docker",title:"Docker",sidebar_label:"Docker"},l=void 0,p={unversionedId:"reference-guide/deployment/docker",id:"version-2.3.1/reference-guide/deployment/docker",title:"Docker",description:"If you define an application with Docker Compose, you can use that",source:"@site/memgraph_versioned_docs/version-2.3.1/reference-guide/deployment/docker.md",sourceDirName:"reference-guide/deployment",slug:"/reference-guide/deployment/docker",permalink:"/docs/memgraph/reference-guide/deployment/docker",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.3.1/reference-guide/deployment/docker.md",tags:[],version:"2.3.1",frontMatter:{id:"docker",title:"Docker",sidebar_label:"Docker"},sidebar:"memgraph",previous:{title:"Data types",permalink:"/docs/memgraph/reference-guide/data-types"},next:{title:"Kubernetes",permalink:"/docs/memgraph/reference-guide/deployment/kubernetes"}},c={},s=[{value:"Docker Compose for Memgraph Platform image",id:"docker-compose-for-memgraph-platform-image",level:2},{value:"Docker Compose for Memgraph MAGE image",id:"docker-compose-for-memgraph-mage-image",level:2},{value:"Docker Compose for Memgraph image",id:"docker-compose-for-memgraph-image",level:2}],g={toc:s};function u(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you define an application with ",(0,o.kt)("strong",{parentName:"p"},"Docker Compose"),", you can use that\ndefinition to run the application in CI, staging, or production environments.\nHere you can find ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," files necessary to run ",(0,o.kt)("a",{parentName:"p",href:"#docker-compose-for-memgraph-platform-image"},(0,o.kt)("strong",{parentName:"a"},"Memgraph\nPlatform")),", ",(0,o.kt)("a",{parentName:"p",href:"#docker-compose-for-memgraph-mage-image"},(0,o.kt)("strong",{parentName:"a"},"Memgraph\nMAGE"))," and\n",(0,o.kt)("a",{parentName:"p",href:"#docker-compose-for-memgraph-image"},(0,o.kt)("strong",{parentName:"a"},"Memgraph"))," images."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/how-to-guides/work-with-docker"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/static/v1?label=Related&message=How-to&color=blue&style=for-the-badge",alt:"Related - How-to"}))),(0,o.kt)("h2",{id:"docker-compose-for-memgraph-platform-image"},"Docker Compose for Memgraph Platform image"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Memgraph Platform")," image contains:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"MemgraphDB")," - the database that holds your data"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Memgraph Lab")," - visual user interface for running queries and visualizing\ngraph data"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"mgconsole")," - command-line interface for running queries"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"MAGE")," - graph algorithms and modules library")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\nservices:\n  memgraph-platform:\n    image: "memgraph/memgraph-platform"\n    ports:\n      - "7687:7687"\n      - "3000:3000"\n      - "7444:7444"\n    volumes:\n      - mg_lib:/var/lib/memgraph\n      - mg_log:/var/log/memgraph\n      - mg_etc:/etc/memgraph\n    environment:\n      - MEMGRAPH="--log-level=TRACE"\n    entrypoint: ["/usr/bin/supervisord"]\nvolumes:\n  mg_lib:\n  mg_log:\n  mg_etc:\n')),(0,o.kt)("p",null,"The port ",(0,o.kt)("inlineCode",{parentName:"p"},"7687")," is used for communication with Memgraph via Bolt protocol. The\nport ",(0,o.kt)("inlineCode",{parentName:"p"},"3000")," is exposed because Memgraph Lab will be running on ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:3000"),",\nwhile the port ",(0,o.kt)("inlineCode",{parentName:"p"},"7444")," is there so that you can see logs from Memgraph inside\nMemgraph Lab. We specified three useful volumes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_lib")," - directory containing data that enables data persistency"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_log")," - directory containing log files"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_etc")," - directory containing the configuration file")),(0,o.kt)("p",null,"The exact location of the local directories depends on your specific setup."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/reference-guide/configuration"},"Configuration settings")," can be changed by\nsetting the value of the ",(0,o.kt)("inlineCode",{parentName:"p"},"MEMGRAPH")," environment variable. In the above example,\nyou can see how to set ",(0,o.kt)("inlineCode",{parentName:"p"},"--log-level")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TRACE"),". Since Memgraph Platform is not\na single service, the process manager\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/config/containers/multi-service_container/"},(0,o.kt)("inlineCode",{parentName:"a"},"supervisord")),"\nis used as the main running process in the ",(0,o.kt)("inlineCode",{parentName:"p"},"entrypoint"),". The MAGE library is\nincluded in this image, so you can use the available graph algorithms."),(0,o.kt)("h2",{id:"docker-compose-for-memgraph-mage-image"},"Docker Compose for Memgraph MAGE image"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Memgraph MAGE")," image contains:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"MemgraphDB")," - the database that holds your data"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"MAGE")," - graph algorithms and modules library")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\nservices:\n  memgraph-mage:\n    image: "memgraph/memgraph-mage"\n    volumes:\n      - mg_lib:/var/lib/memgraph\n      - mg_log:/var/log/memgraph\n      - mg_etc:/etc/memgraph\n    ports:\n      - "7687:7687"\n      - "7444:7444"\n    entrypoint: ["/usr/lib/memgraph/memgraph", "--log-level=TRACE"]\nvolumes:\n  mg_lib:\n  mg_log:\n  mg_etc:\n')),(0,o.kt)("p",null,"The port ",(0,o.kt)("inlineCode",{parentName:"p"},"7687")," is used for communication with Memgraph via Bolt protocol, while\nthe port ",(0,o.kt)("inlineCode",{parentName:"p"},"7444")," is there so that you can see logs from Memgraph inside the\nMemgraph Lab application. We specified three useful volumes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_lib")," - directory containing data that enables data persistency"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_log")," - directory containing log files"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_etc")," - directory containing the configuration file")),(0,o.kt)("p",null,"The exact location of the local directories depends on your specific setup."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/reference-guide/configuration"},"Configuration settings")," can be changed by\nadding the ",(0,o.kt)("inlineCode",{parentName:"p"},"entrypoint"),". You first need to add ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/memgraph")," and\nthen the configuration setting you'd like to change. In the above example, you\ncan see how to set ",(0,o.kt)("inlineCode",{parentName:"p"},"--log-level")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TRACE"),". Since the MAGE library is included\nin this image, you can use the available graph algorithms."),(0,o.kt)("h2",{id:"docker-compose-for-memgraph-image"},"Docker Compose for Memgraph image"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Memgraph")," image contains ",(0,o.kt)("strong",{parentName:"p"},"MemgraphDB")," - the database that holds your\ndata."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3"\nservices:\n  memgraph:\n    image: "memgraph/memgraph"\n    ports:\n      - "7687:7687"\n      - "7444:7444"\n    volumes:\n      - mg_lib:/var/lib/memgraph\n      - mg_log:/var/log/memgraph\n      - mg_etc:/etc/memgraph\n    entrypoint: ["/usr/lib/memgraph/memgraph", "--log-level=TRACE"]\nvolumes:\n  mg_lib:\n  mg_log:\n  mg_etc:\n')),(0,o.kt)("p",null,"The port ",(0,o.kt)("inlineCode",{parentName:"p"},"7687")," is used for communication with Memgraph via Bolt protocol, while\nthe port ",(0,o.kt)("inlineCode",{parentName:"p"},"7444")," is there so that you can see logs from Memgraph inside the\nMemgraph Lab application. We specified three useful volumes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_lib")," - directory containing data that enables data persistency"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_log")," - directory containing log files"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mg_etc")," - directory containing the configuration file")),(0,o.kt)("p",null,"The exact location of the local directories depends on your specific setup."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/reference-guide/configuration"},"Configuration settings")," can be changed by\nadding the ",(0,o.kt)("inlineCode",{parentName:"p"},"entrypoint"),". You first need to add ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/memgraph")," and\nthen the configuration setting you'd like to change. In the above example, you\ncan see how to set ",(0,o.kt)("inlineCode",{parentName:"p"},"--log-level")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TRACE"),". Since this image doesn't have the\nMAGE library included, you won't be able to use graph algorithms."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Want to see applications built with Memgraph and Docker Compose? Check out\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph"},"Memgraph's Github")," repositories.")))}u.isMDXComponent=!0}}]);