"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29300],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),l=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),u=l(a),d=n,h=u["".concat(i,".").concat(d)]||u[d]||c[d]||o;return a?r.createElement(h,s(s({ref:t},p),{},{components:a})):r.createElement(h,s({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:n,s[1]=m;for(var l=2;l<o;l++)s[l]=a[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},64974:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=a(87462),n=a(63366),o=(a(67294),a(3905)),s=a(93996),m=["components"],i={id:"kafka-streams",title:"How to manage Kafka streams",sidebar_label:"Kafka streams",slug:"/how-to-guides/streams/manage-kafka-streams"},l=void 0,p={unversionedId:"how-to-guides/streams/kafka-streams",id:"how-to-guides/streams/kafka-streams",title:"How to manage Kafka streams",description:"The stream functionality enables Memgraph to connect to a Kafka, Pulsar or",source:"@site/gqlalchemy/how-to-guides/streams/kafka-streams.md",sourceDirName:"how-to-guides/streams",slug:"/how-to-guides/streams/manage-kafka-streams",permalink:"/docs/gqlalchemy/how-to-guides/streams/manage-kafka-streams",editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/how-to-guides/streams/kafka-streams.md",tags:[],version:"current",frontMatter:{id:"kafka-streams",title:"How to manage Kafka streams",sidebar_label:"Kafka streams",slug:"/how-to-guides/streams/manage-kafka-streams"},sidebar:"gqlalchemy",previous:{title:"Set or update objects",permalink:"/docs/gqlalchemy/how-to-guides/query-builder/set-or-update-objects"},next:{title:"Pulsar streams",permalink:"/docs/gqlalchemy/how-to-guides/streams/manage-pulsar-streams"}},c={},u=[{value:"1. Create a Kafka stream in Memgraph",id:"1-create-a-kafka-stream-in-memgraph",level:2},{value:"2. Start the stream",id:"2-start-the-stream",level:2},{value:"3. Check the status of the stream",id:"3-check-the-status-of-the-stream",level:2},{value:"4. Delete the stream",id:"4-delete-the-stream",level:2}],d={toc:u};function h(e){var t=e.components,a=(0,n.Z)(e,m);return(0,o.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The stream functionality enables Memgraph to connect to a Kafka, Pulsar or\nRedpanda cluster and run graph analytics on the data stream."),(0,o.kt)(s.ZP,{mdxType:"Neo4jWarning"}),(0,o.kt)("h2",{id:"1-create-a-kafka-stream-in-memgraph"},"1. Create a Kafka stream in Memgraph"),(0,o.kt)("p",null,"To set up the streams, first, create a ",(0,o.kt)("inlineCode",{parentName:"p"},"MemgraphKafkaStream")," object with all the\nrequired arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name: str")," \u27a1 The name of the stream."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"topics: List[str]")," \u27a1 List of topic names."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"transform: str")," \u27a1 The transformation procedure for mapping incoming messages\nto Cypher queries."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"consumer_group: str")," \u27a1 Name of the consumer group in Memgraph."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"batch_interval: str = None")," \u27a1 Maximum wait time in milliseconds for consuming\nmessages before calling the transform procedure."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"batch_size: str = None")," \u27a1 Maximum number of messages to wait for before\ncalling the transform procedure."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bootstrap_servers: str = None")," \u27a1 Comma-separated list of bootstrap servers.")),(0,o.kt)("p",null,"Now you just have to call the ",(0,o.kt)("inlineCode",{parentName:"p"},"create_stream()")," method with the newly created\n",(0,o.kt)("inlineCode",{parentName:"p"},"MemgraphKafkaStream")," object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import MemgraphKafkaStream\n\nstream = MemgraphKafkaStream(name="ratings_stream", topics=["ratings"], transform="movielens.rating", bootstrap_servers="localhost:9093")\ndb.create_stream(stream)\n')),(0,o.kt)("h2",{id:"2-start-the-stream"},"2. Start the stream"),(0,o.kt)("p",null,"To start the stream, just call the ",(0,o.kt)("inlineCode",{parentName:"p"},"start_stream()")," method:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"db.start_stream(stream)\n")),(0,o.kt)("h2",{id:"3-check-the-status-of-the-stream"},"3. Check the status of the stream"),(0,o.kt)("p",null,"To check the status of the stream in Memgraph, just run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"check = db.get_streams()\n")),(0,o.kt)("h2",{id:"4-delete-the-stream"},"4. Delete the stream"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"drop_stream()")," method to delete a stream:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"check = db.drop_stream(stream)\n")))}h.isMDXComponent=!0},93996:function(e,t,a){a.d(t,{ZP:function(){return i}});var r=a(87462),n=a(63366),o=(a(67294),a(3905)),s=["components"],m={toc:[]};function i(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This feature only works with Memgraph. Neo4j is not supported."))))}i.isMDXComponent=!0}}]);