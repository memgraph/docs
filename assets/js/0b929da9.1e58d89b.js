(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{345:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=r.a.createContext({}),u=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=u(e.components);return r.a.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),m=u(t),b=a,d=m["".concat(l,".").concat(b)]||m[b]||s[b]||o;return t?r.a.createElement(d,c(c({ref:n},i),{},{components:t})):r.a.createElement(d,c({ref:n},i))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=b;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var i=2;i<o;i++)l[i]=t[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return u}));var a=t(3),r=t(8),o=(t(0),t(345)),l={id:"remove",title:"REMOVE clause",sidebar_label:"REMOVE"},c={unversionedId:"clauses/remove",id:"clauses/remove",isDocsHomePage:!1,title:"REMOVE clause",description:"The REMOVE clause is used to remove labels and properties from nodes and edges.",source:"@site/cypher-manual/clauses/remove.md",slug:"/clauses/remove",permalink:"/cypher-manual/clauses/remove",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/clauses/remove.md",version:"current",sidebar_label:"REMOVE",sidebar:"cypher_manual",previous:{title:"OPTIONAL MATCH clause",permalink:"/cypher-manual/clauses/optional-match"},next:{title:"RETURN clause",permalink:"/cypher-manual/clauses/return"}},p=[{value:"Data Set",id:"data-set",children:[]},{value:"1. Removing a property",id:"1-removing-a-property",children:[]},{value:"2. Removing a label",id:"2-removing-a-label",children:[]},{value:"Data set Queries",id:"data-set-queries",children:[]}],i={toc:p};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"REMOVE")," clause is used to remove labels and properties from nodes and edges."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",{parentName:"li",href:"#1-removing-a-property"},"Removing a property")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",{parentName:"li",href:"#2-removing-a-label"},"Removing a label"))),Object(o.b)("h2",{id:"data-set"},"Data Set"),Object(o.b)("p",null,"The following examples are executed with this data set. You can create this data set\nlocally by executing the queries at the end of the page: ",Object(o.b)("a",{parentName:"p",href:"#data-set-queries"},"Data Set"),"."),Object(o.b)("img",{src:"https://raw.githubusercontent.com/g-despot/images/master/data_set.png",alt:"Data set",style:{height:380}}),Object(o.b)("h2",{id:"1-removing-a-property"},"1. Removing a property"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"REMOVE")," clause can be used to remove a property from a node or relationship."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n:Country { name: 'United Kingdom' })\nREMOVE n.name\nRETURN n;\n")),Object(o.b)("p",null,"Output:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'+-----------------------------------------------------------------------------+\n| n                                                                           |\n+-----------------------------------------------------------------------------+\n| (:Country {continent: "Europe", language: "English", population: 66000000}) |\n+-----------------------------------------------------------------------------+\n')),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"REMOVE")," clause can't be used to remove all properties from a node or relationship. Instead, take a look at the ",Object(o.b)("inlineCode",{parentName:"p"},"SET")," clause."),Object(o.b)("h2",{id:"2-removing-a-label"},"2. Removing a label"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"REMOVE")," clause can be used to remove a label from a node."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n:Country { name: 'United Kingdom' })\nREMOVE n:Country\nRETURN n;\n")),Object(o.b)("p",null,"Output:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'+--------------------------------------------------------------------------------------------+\n| n                                                                                          |\n+--------------------------------------------------------------------------------------------+\n| ({continent: "Europe", language: "English", name: "United Kingdom", population: 66000000}) |\n+--------------------------------------------------------------------------------------------+\n')),Object(o.b)("p",null,"Let's add the label ",Object(o.b)("inlineCode",{parentName:"p"},"Country")," back to the node with the name ",Object(o.b)("inlineCode",{parentName:"p"},"United Kingdom")," and the additional label ",Object(o.b)("inlineCode",{parentName:"p"},"Kingdom"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n { name: 'United Kingdom' })\nSET n:Country:Kingdom;\n")),Object(o.b)("p",null,"You can now remove multiple labels from a node at the same time. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cypher"},'+--------------------------------------------------------------------------------------------+\n| n                                                                                          |\n+--------------------------------------------------------------------------------------------+\n| ({continent: "Europe", language: "English", name: "United Kingdom", population: 66000000}) |\n+--------------------------------------------------------------------------------------------+\n')),Object(o.b)("p",null,"Output:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"+------+\n| c2   |\n+------+\n| Null |\n+------+\n")),Object(o.b)("h2",{id:"data-set-queries"},"Data set Queries"),Object(o.b)("p",null,"We encourage you to try out the examples by yourself.\nYou can get our data set locally by executing the following query block."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n) DETACH DELETE n;\n\nCREATE (c1:Country { name: 'Germany', language: 'German', continent: 'Europe', population: 83000000 });\nCREATE (c2:Country { name: 'France', language: 'French', continent: 'Europe', population: 67000000 });\nCREATE (c3:Country { name: 'United Kingdom', language: 'English', continent: 'Europe', population: 66000000 });\n\nMATCH (c1),(c2)\nWHERE c1.name= 'Germany' AND c2.name = 'France'\nCREATE (c2)<-[:WORKING_IN { date_of_start: 2014 }]-(p:Person { name: 'John' })-[:LIVING_IN { date_of_start: 2014 }]->(c1);\n\nMATCH (c)\nWHERE c.name= 'United Kingdom'\nCREATE (c)<-[:WORKING_IN { date_of_start: 2014 }]-(p:Person { name: 'Harry' })-[:LIVING_IN { date_of_start: 2013 }]->(c);\n\nMATCH (p1),(p2)\nWHERE p1.name = 'John' AND p2.name = 'Harry'\nCREATE (p1)-[:FRIENDS_WITH { date_of_start: 2011 }]->(p2);\n\nMATCH (p1),(p2)\nWHERE p1.name = 'John' AND p2.name = 'Harry'\nCREATE (p1)<-[:FRIENDS_WITH { date_of_start: 2012 }]-(:Person { name: 'Anna' })-[:FRIENDS_WITH { date_of_start: 2014 }]->(p2);\n\nMATCH (p),(c1),(c2)\nWHERE p.name = 'Anna' AND c1.name = 'United Kingdom' AND c2.name = 'Germany'\nCREATE (c2)<-[:LIVING_IN { date_of_start: 2014 }]-(p)-[:LIVING_IN { date_of_start: 2014 }]->(c1);\n\nMATCH (n)-[r]->(m) RETURN n,r,m;\n")))}u.isMDXComponent=!0}}]);