"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[22333],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=m(n),c=r,g=u["".concat(p,".").concat(c)]||u[c]||s[c]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96034:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"create-a-new-module-python",title:"Developing a query module in Python",sidebar_label:"Create a Python module"},p=void 0,m={unversionedId:"tutorials/create-a-new-module-python",id:"tutorials/create-a-new-module-python",isDocsHomePage:!1,title:"Developing a query module in Python",description:"Query modules can be implemented using the [Python",source:"@site/mage/tutorials/create-a-new-module-python.md",sourceDirName:"tutorials",slug:"/tutorials/create-a-new-module-python",permalink:"/docs/mage/tutorials/create-a-new-module-python",editUrl:"https://github.com/memgraph/docs/tree/master/mage/tutorials/create-a-new-module-python.md",tags:[],version:"current",frontMatter:{id:"create-a-new-module-python",title:"Developing a query module in Python",sidebar_label:"Create a Python module"},sidebar:"mage",previous:{title:"Loading query modules",permalink:"/docs/mage/usage/loading-modules"},next:{title:"Create a C++ query module",permalink:"/docs/mage/tutorials/create-a-new-module-cpp"}},d=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Developing a module",id:"developing-a-module",children:[],level:2},{value:"Importing, querying and testing a module",id:"importing-querying-and-testing-a-module",children:[],level:2}],s={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Query modules can be implemented using the ",(0,o.kt)("a",{parentName:"p",href:"/memgraph/reference-guide/query-modules/api/python-api"},"Python\nAPI")," provided by\nMemgraph. In this tutorial, we will learn how to develop a query module in\nPython on the example of the ",(0,o.kt)("strong",{parentName:"p"},"random walk algorithm"),"."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"There are three options for installing and working with Memgraph MAGE:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Pulling the ",(0,o.kt)("inlineCode",{parentName:"strong"},"memgraph/memgraph-mage")," image"),": check the ",(0,o.kt)("inlineCode",{parentName:"li"},"Docker Hub"),(0,o.kt)("a",{parentName:"li",href:"/docs/mage/installation/docker-hub"},"installation guide"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Building a Docker image from the MAGE repository"),": check the ",(0,o.kt)("inlineCode",{parentName:"li"},"Docker\nbuild")," ",(0,o.kt)("a",{parentName:"li",href:"/docs/mage/installation/docker-build"},"installation guide"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Building MAGE from source"),": check the ",(0,o.kt)("inlineCode",{parentName:"li"},"Build from source on Linux"),(0,o.kt)("a",{parentName:"li",href:"/docs/mage/installation/source"},"installation guide"),".")),(0,o.kt)("h2",{id:"developing-a-module"},"Developing a module"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"These steps are the same for every type of MAGE installation: ",(0,o.kt)("em",{parentName:"p"},"Docker Hub"),",\n",(0,o.kt)("em",{parentName:"p"},"Docker build"),", and ",(0,o.kt)("em",{parentName:"p"},"Build from source on Linux"),"."))),(0,o.kt)("p",null,"Position yourself in the ",(0,o.kt)("strong",{parentName:"p"},"MAGE repository")," you cloned earlier. Specifically,\ngo in the ",(0,o.kt)("inlineCode",{parentName:"p"},"python")," sub-directory and create a new file called ",(0,o.kt)("inlineCode",{parentName:"p"},"random_walk.py"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"python\n\u2514\u2500\u2500 mage\n    random_walk.py\n\n")),(0,o.kt)("p",null,"For this part, we will import ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mgp"},(0,o.kt)("inlineCode",{parentName:"a"},"mgp")),",\nMemgraph's internal data structure module. Among others, it contains definitions\nfor ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mgp/blob/main/mgp.py#L260"},(0,o.kt)("strong",{parentName:"a"},"Vertex"))," and\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mgp/blob/main/mgp.py#L182"},(0,o.kt)("strong",{parentName:"a"},"Edge")," "),"data\nstructures."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Install the ",(0,o.kt)("inlineCode",{parentName:"p"},"mgp")," Python module so your editor can use typing annotations\nproperly and suggest methods and classes it contains. You can install the module\nby running ",(0,o.kt)("inlineCode",{parentName:"p"},"pip install mgp"),"."))),(0,o.kt)("p",null,"Here's the code for the random walk algorithm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import mgp\nimport random\n\n\n@mgp.read_proc\ndef get_path(\n    start: mgp.Vertex,\n    length: int = 10,\n) -> mgp.Record(path=mgp.Path):\n    """Generates a random path of length `length` or less starting\n    from the `start` vertex.\n\n    :param mgp.Vertex start: The starting node of the walk.\n    :param int length: The number of edges to traverse.\n    :return: Random path.\n    :rtype: mgp.Record(mgp.Path)\n    """\n    path = mgp.Path(start)\n    vertex = start\n    for _ in range(length):\n        try:\n            edge = random.choice(list(vertex.out_edges))\n            path.expand(edge)\n            vertex = edge.to_vertex\n        except IndexError:\n            break\n\n    return mgp.Record(path=path)\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"get_path")," is decorated with the ",(0,o.kt)("inlineCode",{parentName:"p"},"@mgp.read_proc")," decorator, which tells\nMemgraph it's a ",(0,o.kt)("inlineCode",{parentName:"p"},"read")," procedure, meaning it won't make changes to the graph.\nThe path is created from the ",(0,o.kt)("inlineCode",{parentName:"p"},"start")," node, and edges are appended to it\niteratively."),(0,o.kt)("h2",{id:"importing-querying-and-testing-a-module"},"Importing, querying and testing a module"),(0,o.kt)("p",null,"Now in order to import, query and test a module, check out the ",(0,o.kt)("a",{parentName:"p",href:"/mage/tutorials/run-a-query-module"},"following\npage"),"."),(0,o.kt)("p",null,"Feel free to create an issue or open a pull request on our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage"},"Github\nrepo")," to speed up the development.",(0,o.kt)("br",null),"\nAlso, don't forget to throw us a star on GitHub. \u2b50"))}u.isMDXComponent=!0}}]);