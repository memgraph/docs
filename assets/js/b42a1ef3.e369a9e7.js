"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87368],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),f=i,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||o;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},14951:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),a=["components"],l={id:"overview",title:"Differences in Cypher implementations",sidebar_label:"Differences overview",slug:"/differences"},s=void 0,p={unversionedId:"differences/overview",id:"differences/overview",isDocsHomePage:!1,title:"Differences in Cypher implementations",description:"Although we try to implement the openCypher query",source:"@site/cypher-manual/differences/overview.md",sourceDirName:"differences",slug:"/differences",permalink:"/docs/cypher-manual/differences",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/differences/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Differences in Cypher implementations",sidebar_label:"Differences overview",slug:"/differences"},sidebar:"cypher_manual",previous:{title:"Other features",permalink:"/docs/cypher-manual/other-features"},next:{title:"Patterns in expressions",permalink:"/docs/cypher-manual/differences/patterns-in-expressions"}},c=[{value:"Unicode codepoints in string literals",id:"unicode-codepoints-in-string-literals",children:[],level:2},{value:"Difference from Neo4j&#39;s Cypher implementation",id:"difference-from-neo4js-cypher-implementation",children:[{value:"Unsupported constructs",id:"unsupported-constructs",children:[],level:3},{value:"Unsupported functions",id:"unsupported-functions",children:[],level:3}],level:2}],u={toc:c};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Although we try to implement the ",(0,o.kt)("a",{parentName:"p",href:"https://www.opencypher.org/"},"openCypher")," query\nlanguage as close to the language reference as possible, we have to make some\nchanges to enhance the user experience."),(0,o.kt)("h2",{id:"unicode-codepoints-in-string-literals"},"Unicode codepoints in string literals"),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"\\u")," followed by 4 hex digits in string literals for UTF-16 codepoint and\n",(0,o.kt)("inlineCode",{parentName:"p"},"\\U")," with 8 hex digits for UTF-32 codepoint in Memgraph."),(0,o.kt)("h2",{id:"difference-from-neo4js-cypher-implementation"},"Difference from Neo4j's Cypher implementation"),(0,o.kt)("p",null,"The openCypher initiative stems from Neo4j's Cypher query language. Following is\na list of the most important differences between Neo's Cypher and Memgraph's\nopenCypher implementation for users that are already familiar with Neo4j. There\nmight be other differences not documented here (especially subtle semantic\nones)."),(0,o.kt)("h3",{id:"unsupported-constructs"},"Unsupported constructs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"FOREACH")," language construct for performing an operation on every list\nelement."),(0,o.kt)("li",{parentName:"ul"},"Stored procedures."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"shortestPath")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"allShortestPaths")," functions. ",(0,o.kt)("inlineCode",{parentName:"li"},"shortestPath")," can be\nexpressed using Memgraph's breadth-first expansion syntax."),(0,o.kt)("li",{parentName:"ul"},"Patterns in expressions. For example, Memgraph doesn't support\n",(0,o.kt)("inlineCode",{parentName:"li"},"size((n)--\x3e())"),". Most of the time, the same functionalities can be expressed\ndifferently in Memgraph using ",(0,o.kt)("inlineCode",{parentName:"li"},"OPTIONAL")," expansions, function calls etc. You\ncan check out ",(0,o.kt)("a",{parentName:"li",href:"/docs/cypher-manual/differences/patterns-in-expressions"},"this example"),"."),(0,o.kt)("li",{parentName:"ul"},"Map projections such as ",(0,o.kt)("inlineCode",{parentName:"li"},"MATCH (n) RETURN n {.property1, .property2}"),".")),(0,o.kt)("h3",{id:"unsupported-functions"},"Unsupported functions"),(0,o.kt)("p",null,"General purpose functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"exists(n.property)")," - This can be expressed using ",(0,o.kt)("inlineCode",{parentName:"li"},"n.property IS NOT NULL"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"length()")," is named ",(0,o.kt)("inlineCode",{parentName:"li"},"size()")," in Memgraph.")),(0,o.kt)("p",null,"Aggregation functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"count(DISTINCT variable)")," - This can be expressed using ",(0,o.kt)("inlineCode",{parentName:"li"},"WITH DISTINCT\nvariable RETURN count(variable)"),".")),(0,o.kt)("p",null,"Mathematical functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"percentileDisc()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"stDev()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"point()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"distance()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"degrees()"))),(0,o.kt)("p",null,"List functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"none()"))))}m.isMDXComponent=!0}}]);