"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[95607],{3905:function(e,r,n){n.d(r,{Zo:function(){return p},kt:function(){return d}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function u(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),m=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):u(u({},r),e)),n},p=function(e){var r=m(e.components);return t.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},s=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=m(n),d=o,y=s["".concat(l,".").concat(d)]||s[d]||c[d]||a;return n?t.createElement(y,u(u({ref:r},p),{},{components:n})):t.createElement(y,u({ref:r},p))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,u=new Array(a);u[0]=s;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,u[1]=i;for(var m=2;m<a;m++)u[m]=n[m];return t.createElement.apply(null,u)}return t.createElement.apply(null,n)}s.displayName="MDXCreateElement"},34896:function(e,r,n){n.r(r),n.d(r,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return c}});var t=n(87462),o=n(63366),a=(n(67294),n(3905)),u=["components"],i={id:"overview",title:"Implement custom query modules",sidebar_label:"Implement custom query modules"},l=void 0,m={unversionedId:"reference-guide/query-modules/implement-custom-query-modules/overview",id:"version-2.2.0/reference-guide/query-modules/implement-custom-query-modules/overview",title:"Implement custom query modules",description:"If you need to expand the Cypher language, Memgraph provides public APIs for",source:"@site/memgraph_versioned_docs/version-2.2.0/reference-guide/query-modules/implement-custom-query-modules/overview.md",sourceDirName:"reference-guide/query-modules/implement-custom-query-modules",slug:"/reference-guide/query-modules/implement-custom-query-modules/overview",permalink:"/docs/memgraph/2.2.0/reference-guide/query-modules/implement-custom-query-modules/overview",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.2.0/reference-guide/query-modules/implement-custom-query-modules/overview.md",tags:[],version:"2.2.0",frontMatter:{id:"overview",title:"Implement custom query modules",sidebar_label:"Implement custom query modules"},sidebar:"memgraph",previous:{title:"Available modules",permalink:"/docs/memgraph/2.2.0/reference-guide/query-modules/available-query-modules"},next:{title:"Python API",permalink:"/docs/memgraph/2.2.0/reference-guide/query-modules/api/python-api"}},p={},c=[{value:"Python API",id:"python-api",level:2},{value:"C API",id:"c-api",level:2}],s={toc:c};function d(e){var r=e.components,n=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If you need to expand the Cypher language, Memgraph provides public APIs for\nwriting custom query modules in Python and C."),(0,a.kt)("h2",{id:"python-api"},"Python API"),(0,a.kt)("p",null,"Python API is defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"mgp")," module that can be found in the Memgraph\ninstallation directory ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/python_support"),". In essence, it is a\nwrapper around the C API. If you wish to write your own query modules using the\nPython API, you need to have Python version ",(0,a.kt)("inlineCode",{parentName:"p"},"3.5.0")," or above installed."),(0,a.kt)("p",null,"For more information, check the ",(0,a.kt)("a",{parentName:"p",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/api/python-api"},"Python API reference\nguide"),".",(0,a.kt)("br",null),"\nWe also made ",(0,a.kt)("a",{parentName:"p",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/implement-custom-query-modules/custom-query-module-example#python-api"},"an example\nmodule"),"\nto help you start developing your own modules."),(0,a.kt)("h2",{id:"c-api"},"C API"),(0,a.kt)("p",null,"C API modules need to be compiled to a shared library so that they can be loaded\nwhen Memgraph starts. This means that you can write the procedures in any\nprogramming language that can work with C and be compiled to the ELF shared\nlibrary format (",(0,a.kt)("inlineCode",{parentName:"p"},".so"),"). ",(0,a.kt)("inlineCode",{parentName:"p"},"mg_procedure.h")," that can be found in Memgraph\ninstallation directory ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/include/memgraph")," contains declarations of all\nfunctions that can be used to implement a query module procedure. To compile the\nmodule, you will have to pass the appropriate flags to the compiler, for\nexample, ",(0,a.kt)("inlineCode",{parentName:"p"},"clang"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"clang -Wall -shared -fPIC -I /usr/include/memgraph example.c -o example.so\n")),(0,a.kt)("p",null,"For more information, check the ",(0,a.kt)("a",{parentName:"p",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/api/c-api"},"C API reference\nguide"),".",(0,a.kt)("br",null),"\nWe also made ",(0,a.kt)("a",{parentName:"p",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/implement-custom-query-modules/custom-query-module-example#c-api"},"an example\nmodule"),"\nto help you start developing your own modules."))}d.isMDXComponent=!0}}]);