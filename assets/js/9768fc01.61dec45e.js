"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9551],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,h=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=p;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},22684:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return h}});var n=r(87462),a=r(63366),l=(r(67294),r(3905)),o=r(9877),u=r(58215),i=["components"],s={id:"delete-remove-objects",title:"How to delete and remove objects",sidebar_label:"Delete and remove objects"},c=void 0,d={unversionedId:"how-to-guides/query-builder/delete-remove-objects",id:"how-to-guides/query-builder/delete-remove-objects",title:"How to delete and remove objects",description:"You can use the methods delete() and remove() to construct queries that will",source:"@site/gqlalchemy/how-to-guides/query-builder/delete-remove-objects.md",sourceDirName:"how-to-guides/query-builder",slug:"/how-to-guides/query-builder/delete-remove-objects",permalink:"/docs/gqlalchemy/how-to-guides/query-builder/delete-remove-objects",editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/how-to-guides/query-builder/delete-remove-objects.md",tags:[],version:"current",frontMatter:{id:"delete-remove-objects",title:"How to delete and remove objects",sidebar_label:"Delete and remove objects"},sidebar:"gqlalchemy",previous:{title:"Call procedures",permalink:"/docs/gqlalchemy/how-to-guides/query-builder/call-procedures"},next:{title:"Kafka streams",permalink:"/docs/gqlalchemy/how-to-guides/streams/manage-kafka-streams"}},p=[{value:"Delete nodes",id:"delete-nodes",children:[],level:2},{value:"Delete relationships",id:"delete-relationships",children:[],level:2},{value:"Remove properties",id:"remove-properties",children:[],level:2}],m={toc:p};function h(e){var t=e.components,r=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"You can use the methods ",(0,l.kt)("inlineCode",{parentName:"p"},"delete()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"remove()")," to construct queries that will\nremove nodes and relationships or remove properties and labels."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"delete(variable_expressions: List[str], detach: Optional[bool] = False)")," -\nRemove nodes and relationships. Set the argument ",(0,l.kt)("inlineCode",{parentName:"li"},"detach")," to true in order to\ndelete nodes with their relationships."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"remove(items: List[str])")," - Remove properties and labels.")),(0,l.kt)("h2",{id:"delete-nodes"},"Delete nodes"),(0,l.kt)("p",null,"To delete a node from the database, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"delete()")," method:"),(0,l.kt)(o.Z,{defaultValue:"gqlalchemy",values:[{label:"GQLAlchemy",value:"gqlalchemy"},{label:"Cypher",value:"cypher"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"gqlalchemy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import match\n\nquery = match()\n        .node("Person", variable="p")\n        .delete(["p"])\n        .execute()\n'))),(0,l.kt)(u.Z,{value:"cypher",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (p:Person) DELETE p;\n")))),(0,l.kt)("h2",{id:"delete-relationships"},"Delete relationships"),(0,l.kt)("p",null,"To delete a relationship from the database, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"delete()")," method:"),(0,l.kt)(o.Z,{defaultValue:"gqlalchemy",values:[{label:"GQLAlchemy",value:"gqlalchemy"},{label:"Cypher",value:"cypher"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"gqlalchemy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import match\n\nquery = match()\n        .node("Person")\n        .to("FRIENDS_WITH", variable="f")\n        .node("Person")\n        .delete(["f"])\n        .execute()\n'))),(0,l.kt)(u.Z,{value:"cypher",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (:Person)-[f:FRIENDS_WITH]->(:Person) DELETE f;\n")))),(0,l.kt)("h2",{id:"remove-properties"},"Remove properties"),(0,l.kt)("p",null,"To remove a property from the database, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"remove()")," method:"),(0,l.kt)(o.Z,{defaultValue:"gqlalchemy",values:[{label:"GQLAlchemy",value:"gqlalchemy"},{label:"Cypher",value:"cypher"}],mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"gqlalchemy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from gqlalchemy import match\n\nquery = match()\n        .node("Person", variable="p")\n        .remove(["p.name"])\n'))),(0,l.kt)(u.Z,{value:"cypher",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (p:Person) REMOVE p.name;\n")))))}h.isMDXComponent=!0},58215:function(e,t,r){var n=r(67294);t.Z=function(e){var t=e.children,r=e.hidden,a=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:a},t)}},9877:function(e,t,r){r.d(t,{Z:function(){return c}});var n=r(87462),a=r(67294),l=r(72389),o=r(29548),u=r(86010),i="tabItem_LplD";function s(e){var t,r,l,s=e.lazy,c=e.block,d=e.defaultValue,p=e.values,m=e.groupId,h=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=p?p:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),f=(0,o.lx)(b,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(t=null!=d?d:null==(r=v.find((function(e){return e.props.default})))?void 0:r.props.value)?t:null==(l=v[0])?void 0:l.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,o.UB)(),k=g.tabGroupChoices,T=g.setTabGroupChoices,w=(0,a.useState)(y),N=w[0],E=w[1],q=[],O=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var j=k[m];null!=j&&j!==N&&b.some((function(e){return e.value===j}))&&E(j)}var x=function(e){var t=e.currentTarget,r=q.indexOf(t),n=b[r].value;n!==N&&(O(t),E(n),null!=m&&T(m,n))},C=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n=q.indexOf(e.currentTarget)+1;r=q[n]||q[0];break;case"ArrowLeft":var a=q.indexOf(e.currentTarget)-1;r=q[a]||q[q.length-1]}null==(t=r)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},h)},b.map((function(e){var t=e.value,r=e.label,l=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return q.push(e)},onKeyDown:C,onFocus:x,onClick:x},l,{className:(0,u.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":N===t})}),null!=r?r:t)}))),s?(0,a.cloneElement)(v.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function c(e){var t=(0,l.Z)();return a.createElement(s,(0,n.Z)({key:String(t)},e))}}}]);