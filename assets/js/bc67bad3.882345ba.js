"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63284],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(h,l(l({ref:t},c),{},{components:n})):r.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12728:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={id:"extension-clauses",title:"Extension clauses",sidebar_label:"Extension clauses"},l=void 0,o={unversionedId:"extension-clauses",id:"extension-clauses",title:"Extension clauses",description:"FOREACH",source:"@site/cypher-manual/extension-clauses.md",sourceDirName:".",slug:"/extension-clauses",permalink:"/docs/cypher-manual/extension-clauses",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/extension-clauses.md",tags:[],version:"current",frontMatter:{id:"extension-clauses",title:"Extension clauses",sidebar_label:"Extension clauses"},sidebar:"cypher_manual",previous:{title:"WITH",permalink:"/docs/cypher-manual/clauses/with"},next:{title:"Functions",permalink:"/docs/cypher-manual/functions"}},s={},p=[{value:"FOREACH",id:"foreach",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"foreach"},"FOREACH"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"FOREACH")," iterates over a list of elements. Each element is stored inside a\nvariable which can optionally be used inside the update clauses. All update\nclauses are executed per iteration of the list."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"  FOREACH ( <variable name> IN <expression> | <update clauses> )\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"Option"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"variable name"),(0,a.kt)("td",{parentName:"tr",align:"center"},"The variable name that stores each element")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"expression"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Any expression that results in a list")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"update clauses"),(0,a.kt)("td",{parentName:"tr",align:"center"},"One or more Cypher update clauses: ",(0,a.kt)("inlineCode",{parentName:"td"},"SET"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"REMOVE"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"CREATE"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"MERGE"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"DELETE")," including ",(0,a.kt)("inlineCode",{parentName:"td"},"FOREACH")," extension")))),(0,a.kt)("p",null,"It must be noted that if the result ",(0,a.kt)("inlineCode",{parentName:"p"},"<expression>")," is null, then ",(0,a.kt)("inlineCode",{parentName:"p"},"FOREACH"),"\nwill not fail but rather skip the execution of ",(0,a.kt)("inlineCode",{parentName:"p"},"<update clauses>"),"\naltogether."),(0,a.kt)("p",null,"Examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"  FOREACH ( i IN [1, 2, 3] | CREATE (n {id : i}) )\n")),(0,a.kt)("p",null,"Creates 3 nodes, each with the id property set to 1, 2 and 3 respectively."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"  CREATE (n { prop : [[1, 2], [3, 4]]);\n\n  MATCH (n) FOREACH ( inner_list IN n.prop | FOREACH ( j IN inner_list | CREATE (u { prop : j }) ) );\n")),(0,a.kt)("p",null,"Creates 4 nodes, each with the id property set to 1, 2, 3 and 4 respectively."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Similarly, the rest of the clauses mentioned in the table above can be\nused. ")),(0,a.kt)("p",null,"One more important detail of FOREACH, is that it supports shadowing of variables\nnames. For example, the query below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"  CREATE (n { prop : 0 });\n\n  MATCH (n) FOREACH ( i IN [1] | FOREACH ( i IN [3] |  SET n.prop = i ) );\n")),(0,a.kt)("p",null,"will end up setting the property ",(0,a.kt)("strong",{parentName:"p"},"prop")," of the created node to 3."))}u.isMDXComponent=!0}}]);