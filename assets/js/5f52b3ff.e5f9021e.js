"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[50113],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=o,f=c["".concat(s,".").concat(u)]||c[u]||p[u]||r;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4901:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var n=a(87462),o=a(63366),r=(a(67294),a(3905)),i=["components"],l={id:"load-json",title:"Loading from JSON format",sidebar_label:"JSON",pagination_prev:"import-data/overview"},s=void 0,d={unversionedId:"import-data/files/load-json",id:"version-2.4.1/import-data/files/load-json",title:"Loading from JSON format",description:"A JSON file is a file that stores simple data structures and objects in",source:"@site/memgraph_versioned_docs/version-2.4.1/import-data/files/load-json.md",sourceDirName:"import-data/files",slug:"/import-data/files/load-json",permalink:"/docs/memgraph/import-data/files/load-json",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.4.1/import-data/files/load-json.md",tags:[],version:"2.4.1",frontMatter:{id:"load-json",title:"Loading from JSON format",sidebar_label:"JSON",pagination_prev:"import-data/overview"},sidebar:"memgraph",previous:{title:"Import data overview",permalink:"/docs/memgraph/import-data"},next:{title:"CYPHERL",permalink:"/docs/memgraph/import-data/files/cypherl"}},m={},p=[{value:"Examples",id:"examples",level:2},{value:"Load JSON from a local file",id:"load-json-from-a-local-file",level:3},{value:"Load JSON from a remote address",id:"load-json-from-a-remote-address",level:3}],c={toc:p};function u(e){var t=e.components,l=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A JSON file is a file that stores simple data structures and objects in\nJavaScript Object Notation format, which is a standard data interchange format.\nThe data you want to import to the database is often saved in JSON format, and\nyou might want to import parts of that data as graph objects - nodes or\nrelationships."),(0,r.kt)("p",null,"Below, you can find two examples of how to use the load JSON methods depending\non the data source:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#load-json-from-a-local-file"},"Load JSON from a local file")," "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#load-json-from-a-remote-address"},"Load JSON from a remote address"))),(0,r.kt)("p",null,"The above methods are procedures of query module implemented in MAGE (Memgraph Advanced\nGraph Extensions) and you can read more about them in the ",(0,r.kt)("a",{parentName:"p",href:"/mage/query-modules/python/json-util"},"MAGE\ndocumentation"),"."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"To be able to call JSON load procedures, you need to install MAGE and load query\nmodules. To learn how to do that, check out the ",(0,r.kt)("a",{parentName:"p",href:"/mage/how-to-guides/run-a-query-module"},"Run a query\nmodule")," how-to guide."))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The following examples will show how to load data from a local JSON file or a\nremote address."),(0,r.kt)("h3",{id:"load-json-from-a-local-file"},"Load JSON from a local file"),(0,r.kt)("p",null,"To import data from a local JSON file, use ",(0,r.kt)("inlineCode",{parentName:"p"},"load_from_path(path)")," procedure that\ntakes one string argument (",(0,r.kt)("inlineCode",{parentName:"p"},"path"),") and returns a list of JSON objects from the\nfile located at the provided path."),(0,r.kt)("p",null,"Let's import data from a file ",(0,r.kt)("inlineCode",{parentName:"p"},"data.json")," with the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "first_name": "Jessica",\n  "last_name": "Rabbit",\n  "pets": ["dog", "cat", "bird"]\n}\n')),(0,r.kt)("p",null,"If you are using Docker to run Memgraph, you will need to ",(0,r.kt)("a",{parentName:"p",href:"/docs/memgraph/how-to-guides/work-with-docker#how-to-copy-files-from-and-to-a-Docker-container"},"copy the files from\nyour local directory into the\nDocker"),"\ncontainer where Memgraph can access them."),(0,r.kt)("p",null,"To create a node with the label ",(0,r.kt)("inlineCode",{parentName:"p"},"Person")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"first_name"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"last_name")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"pets"),"\nas properties, run the following query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CALL json_util.load_from_path("path/to/data.json")\nYIELD objects\nUNWIND objects AS o\nCREATE (:Person {first_name: o.first_name, last_name: o.last_name, pets: o.pets});\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"After you execute the above query, the graph in Memgraph should look like this:"),(0,r.kt)("div",null,(0,r.kt)("img",{src:a(74622).Z}))),(0,r.kt)("h3",{id:"load-json-from-a-remote-address"},"Load JSON from a remote address"),(0,r.kt)("p",null,"To import data from a remote JSON file, use ",(0,r.kt)("inlineCode",{parentName:"p"},"load_from_url(url)")," procedure that\ntakes one string argument (",(0,r.kt)("inlineCode",{parentName:"p"},"url"),") and returns a list of JSON objects from the\nfile located at the provided URL."),(0,r.kt)("p",null,"For example, at ",(0,r.kt)("inlineCode",{parentName:"p"},'"https://download.memgraph.com/asset/mage/data.json"'),", you can\nfind the following ",(0,r.kt)("inlineCode",{parentName:"p"},"data.json")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "first_name": "James",\n  "last_name": "Bond",\n  "pets": ["dog", "cat", "fish"]\n}\n')),(0,r.kt)("p",null,"To create a node with the label ",(0,r.kt)("inlineCode",{parentName:"p"},"Person")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"first_name"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"last_name")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"pets")," as properties from the ",(0,r.kt)("inlineCode",{parentName:"p"},"data.json")," file. You can run the following query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CALL json_util.load_from_url("https://download.memgraph.com/asset/mage/data.json")\nYIELD objects\nUNWIND objects AS o\nCREATE (:Person {first_name: o.first_name, last_name: o.last_name, pets: o.pets});\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"After you run the above query, the graph in Memgraph should look like this:"),(0,r.kt)("div",null,(0,r.kt)("img",{src:a(3704).Z}))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"To load JSON files from another local or remote location, just replace the\nargument of the procedure with the appropriate path or URL. If you want to\ncreate a different kind of graph, you need to change the query accordingly. To\nlearn more about querying, check out the ",(0,r.kt)("a",{parentName:"p",href:"/cypher-manual"},"Cypher manual"),"."))))}u.isMDXComponent=!0},74622:function(e,t,a){t.Z=a.p+"assets/images/load_json_from_path-cd0c47fff320681902646cd494e63ef4.png"},3704:function(e,t,a){t.Z=a.p+"assets/images/load_json_from_url-9fa43d2bb5e1f494536f12e3c6eb6550.png"}}]);