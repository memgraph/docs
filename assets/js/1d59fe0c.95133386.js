"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67749],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return d}});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),u=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=u(e.components);return n.createElement(o.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,f=m["".concat(o,".").concat(d)]||m[d]||p[d]||l;return t?n.createElement(f,s(s({ref:a},c),{},{components:t})):n.createElement(f,s({ref:a},c))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=m;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<l;u++)s[u]=t[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},47521:function(e,a,t){t.r(a),t.d(a,{assets:function(){return c},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=t(87462),r=t(63366),l=(t(67294),t(3905)),s=["components"],i={id:"clauses",title:"Cypher clauses overview",sidebar_label:"Clauses overview",slug:"/clauses"},o=void 0,u={unversionedId:"clauses/clauses",id:"clauses/clauses",title:"Cypher clauses overview",description:"The Cypher language enables users to perform standard database operations by using the following clauses:",source:"@site/cypher-manual/clauses/clauses.md",sourceDirName:"clauses",slug:"/clauses",permalink:"/docs/cypher-manual/clauses",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/clauses/clauses.md",tags:[],version:"current",frontMatter:{id:"clauses",title:"Cypher clauses overview",sidebar_label:"Clauses overview",slug:"/clauses"},sidebar:"cypher_manual",previous:{title:"Deleting nodes and relationships",permalink:"/docs/cypher-manual/deleting-nodes-and-relationships"},next:{title:"CREATE",permalink:"/docs/cypher-manual/clauses/create"}},c={},p=[],m={toc:p};function d(e){var a=e.components,t=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",{parentName:"p"},"Cypher")," language enables users to perform standard database operations by using the following clauses:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/create"},(0,l.kt)("inlineCode",{parentName:"a"},"CREATE"))," - creates new nodes and relationships"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/delete"},(0,l.kt)("inlineCode",{parentName:"a"},"DELETE"))," - deletes nodes and relationships"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/load-csv"},(0,l.kt)("inlineCode",{parentName:"a"},"LOAD CSV"))," - loads data from CSV file"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/match"},(0,l.kt)("inlineCode",{parentName:"a"},"MATCH"))," - searches for patterns"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/merge"},(0,l.kt)("inlineCode",{parentName:"a"},"MERGE"))," - creates patterns if they don't exist"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/optional-match"},(0,l.kt)("inlineCode",{parentName:"a"},"OPTIONAL MATCH"))," - behaves the same as ",(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/match"},(0,l.kt)("inlineCode",{parentName:"a"},"MATCH")),", but when it fails to find the pattern it fills missing parts of the pattern with null values"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/remove"},(0,l.kt)("inlineCode",{parentName:"a"},"REMOVE"))," - removes labels and properties"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/return"},(0,l.kt)("inlineCode",{parentName:"a"},"RETURN"))," - defines what will be presented to the user in the result set"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/set"},(0,l.kt)("inlineCode",{parentName:"a"},"SET"))," - adds new or updates existing labels and properties"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/union"},(0,l.kt)("inlineCode",{parentName:"a"},"UNION"))," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/union"},(0,l.kt)("inlineCode",{parentName:"a"},"UNION ALL"))," - combines results from multiple queries"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/unwind"},(0,l.kt)("inlineCode",{parentName:"a"},"UNWIND"))," - unwinds a list of values as individual rows"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/where"},(0,l.kt)("inlineCode",{parentName:"a"},"WHERE"))," - filters the matched data"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/cypher-manual/clauses/with"},(0,l.kt)("inlineCode",{parentName:"a"},"WITH"))," - combines multiple reads and writes")))}d.isMDXComponent=!0}}]);