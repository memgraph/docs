(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{280:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return b}));var r=t(3),a=t(8),i=(t(0),t(345)),l={id:"create",title:"CREATE clause",sidebar_label:"CREATE"},c={unversionedId:"clauses/create",id:"clauses/create",isDocsHomePage:!1,title:"CREATE clause",description:"The CREATE clause is used to create nodes and relationships in a graph.",source:"@site/cypher-manual/clauses/create.md",slug:"/clauses/create",permalink:"/cypher-manual/clauses/create",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/clauses/create.md",version:"current",sidebar_label:"CREATE",sidebar:"cypher_manual",previous:{title:"Cypher clauses overview",permalink:"/cypher-manual/clauses"},next:{title:"DELETE clause",permalink:"/cypher-manual/clauses/delete"}},o=[{value:"1. Creating nodes",id:"1-creating-nodes",children:[{value:"1.1 Creating a single node",id:"11-creating-a-single-node",children:[]},{value:"1.2 Creating a node with properties",id:"12-creating-a-node-with-properties",children:[]},{value:"1.3 Creating multiple nodes",id:"13-creating-multiple-nodes",children:[]}]},{value:"2. Creating relationships",id:"2-creating-relationships",children:[{value:"2.1 Creating a relationship between two nodes",id:"21-creating-a-relationship-between-two-nodes",children:[]},{value:"2.2 Creating a relationship with properties",id:"22-creating-a-relationship-with-properties",children:[]}]},{value:"3. Creating a path",id:"3-creating-a-path",children:[]}],p={toc:o};function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"CREATE")," clause is used to create nodes and relationships in a graph."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#1-creating-nodes"},"Creating nodes"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#11-creating-a-single-node"},"Creating a single node")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#12-creating-a-node-with-properties"},"Creating a node with properties")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#13-creating-multiple-nodes"},"Creating multiple nodes")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#2-creating-relationships"},"Creating relationships"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#21-creating-a-relationship-between-two-nodes"},"Creating a relationship between two nodes")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#22-creating-a-relationship-with-properties"},"Creating a relationship with properties")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",{parentName:"li",href:"#3-creating-a-path"},"Creating a path"))),Object(i.b)("h2",{id:"1-creating-nodes"},"1. Creating nodes"),Object(i.b)("h3",{id:"11-creating-a-single-node"},"1.1 Creating a single node"),Object(i.b)("p",null,"Use the following query to create a single node.\nThe ",Object(i.b)("inlineCode",{parentName:"p"},"RETURN")," clause is used to return results. A newly created node can be returned in the same query."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE (n)\nRETURN n;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"+----+\n| n  |\n+----+\n| () |\n+----+\n")),Object(i.b)("p",null,"You can also specify a label while creating a node."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE (n:Country)\nRETURN n;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"+------------+\n| n          |\n+------------+\n| (:Country) |\n+------------+\n")),Object(i.b)("p",null,"If you wish to add multiple labels to a node, use the following syntax:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE (n:Country:City)\nRETURN n;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"+-----------------+\n| n               |\n+-----------------+\n| (:Country:City) |\n+-----------------+\n")),Object(i.b)("h3",{id:"12-creating-a-node-with-properties"},"1.2 Creating a node with properties"),Object(i.b)("p",null,"A node can be created with initial properties."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE (n:Country { name: 'San Marino', continent: 'Europe' })\nRETURN n;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'+------------------------------------------------------+\n| n                                                    |\n+------------------------------------------------------+\n| (:Country {continent: "Europe", name: "San Marino"}) |\n+------------------------------------------------------+\n')),Object(i.b)("h3",{id:"13-creating-multiple-nodes"},"1.3 Creating multiple nodes"),Object(i.b)("p",null,"To create multiple nodes, separate them with a comma."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE (n:Country), (m:City)\nRETURN n,m;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"+------------+------------+\n| n          | m          |\n+------------+------------+\n| (:Country) | (:City)    |\n+------------+------------+\n")),Object(i.b)("h2",{id:"2-creating-relationships"},"2. Creating relationships"),Object(i.b)("h3",{id:"21-creating-a-relationship-between-two-nodes"},"2.1 Creating a relationship between two nodes"),Object(i.b)("p",null,"To create a relationship between two nodes, we need to specify which nodes\neither by creating them or filtering them with the ",Object(i.b)("inlineCode",{parentName:"p"},"WHERE")," clause."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE (c1:Country { name: 'Belgium' }), (c2:Country { name: 'Netherlands' })\nCREATE (c1)-[r:BORDERS_WITH]->(c2)\nRETURN r;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"+----------------+\n| r              |\n+----------------+\n| [BORDERS_WITH] |\n+----------------+\n")),Object(i.b)("p",null,"If the nodes already exist, the query would look like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"MATCH (c1:Country),(c2:Country)\nWHERE c1.name = 'Belgium' AND c2.name = 'Netherlands'\nCREATE (c1)-[r:NEIGHBOURS]->(c2)\nRETURN r;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"+--------------+\n| r            |\n+--------------+\n| [NEIGHBOURS] |\n+--------------+\n")),Object(i.b)("h3",{id:"22-creating-a-relationship-with-properties"},"2.2 Creating a relationship with properties"),Object(i.b)("p",null,"You can add properties to a relationship at the time of creation."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"MATCH (c1:Country),(c2:Country)\nWHERE c1.name = 'Belgium' AND c2.name = 'Netherlands'\nCREATE (c1)-[r:BORDERS_WITH { length: '30KM' }]->(c2)\nRETURN r;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'+---------------------------------+\n| r                               |\n+---------------------------------+\n| [BORDERS_WITH {length: "30KM"}] |\n+---------------------------------+\n')),Object(i.b)("h2",{id:"3-creating-a-path"},"3. Creating a path"),Object(i.b)("p",null,"When creating a path, all of the parts of the pattern that don't exist will be created."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cypher"},"CREATE p=((n:Country { name: 'Belgium' })-[r:BORDERS_WITH { length: '30KM' }]->(m:Country { name: 'Netherlands' }))\nRETURN p;\n")),Object(i.b)("p",null,"Output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'+------------------------------------------------------------------------------------------------+\n| p                                                                                              |\n+------------------------------------------------------------------------------------------------+\n| (:Country {name: "Belgium"})-[BORDERS_WITH {length: "30KM"}]->(:Country {name: "Netherlands"}) |\n+------------------------------------------------------------------------------------------------+\n')))}b.isMDXComponent=!0},345:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),b=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=b(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=b(t),d=r,h=u["".concat(l,".").concat(d)]||u[d]||s[d]||i;return t?a.a.createElement(h,c(c({ref:n},p),{},{components:t})):a.a.createElement(h,c({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var p=2;p<i;p++)l[p]=t[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);