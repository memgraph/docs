"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74282],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},58215:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(67294);function a(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(87462),a=n(67294),o=n(72389),l=n(5979),i=n(86010),p="tabItem_LplD";function s(e){var t,n,o,s=e.lazy,c=e.block,u=e.defaultValue,m=e.values,d=e.groupId,f=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,l.lx)(g,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===u?u:null!=(t=null!=u?u:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=h[0])?void 0:o.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),y=b.tabGroupChoices,N=b.setTabGroupChoices,S=(0,a.useState)(v),C=S[0],w=S[1],O=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var L=y[d];null!=L&&L!==C&&g.some((function(e){return e.value===L}))&&w(L)}var T=function(e){var t=e.currentTarget,n=O.indexOf(t),r=g[n].value;r!==C&&(E(t),w(r),null!=d&&N(d,r))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;n=O[r]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;n=O[a]||O[O.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},f)},g.map((function(e){var t=e.value,n=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return O.push(e)},onKeyDown:j,onFocus:T,onClick:T},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),s?(0,a.cloneElement)(h.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function c(e){var t=(0,o.Z)();return a.createElement(s,(0,r.Z)({key:String(t)},e))}},65706:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),l=n(9877),i=n(58215),p=["components"],s={id:"encryption",title:"SSL encryption",sidebar_label:"SSL encryption"},c=void 0,u={unversionedId:"reference-guide/encryption",id:"version-2.3.1/reference-guide/encryption",title:"SSL encryption",description:"Memgraph uses SSL (Secure Sockets Layer) protocol for establishing an",source:"@site/memgraph_versioned_docs/version-2.3.1/reference-guide/encryption.md",sourceDirName:"reference-guide",slug:"/reference-guide/encryption",permalink:"/docs/memgraph/reference-guide/encryption",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.3.1/reference-guide/encryption.md",tags:[],version:"2.3.1",frontMatter:{id:"encryption",title:"SSL encryption",sidebar_label:"SSL encryption"},sidebar:"memgraph",previous:{title:"Python API",permalink:"/docs/memgraph/reference-guide/streams/transformation-modules/api/python-api"},next:{title:"Triggers",permalink:"/docs/memgraph/reference-guide/triggers"}},m={},d=[{value:"SSL certificate",id:"ssl-certificate",level:2},{value:"Configure the server",id:"configure-the-server",level:2},{value:"Enable SSL connection",id:"enable-ssl-connection",level:2}],f={toc:d};function h(e){var t=e.components,s=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},f,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Memgraph uses SSL (Secure Sockets Layer) protocol for establishing an\nauthenticated and encrypted connection to a database instance."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/how-to-guides/encryption"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/static/v1?label=Related&message=How-to&color=blue&style=for-the-badge",alt:"Related -\nHow-to"}))),(0,o.kt)("p",null,"Achieving a secure connection is a three-step process that requires"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Owning a SSL certificate"),(0,o.kt)("li",{parentName:"ol"},"Configuring the server"),(0,o.kt)("li",{parentName:"ol"},"Enabling SSL connection")),(0,o.kt)("p",null,"For any errors that might come up, check out ",(0,o.kt)("a",{parentName:"p",href:"/errors/memgraph/ssl"},"the Help center page on\nerrors"),"."),(0,o.kt)("h2",{id:"ssl-certificate"},"SSL certificate"),(0,o.kt)("p",null,"SSL certificate is a pair of ",(0,o.kt)("inlineCode",{parentName:"p"},".pem")," documents issued by self-signing, or by a\nCertification Authority. Memgraph contains a self-signed testing certificate\n(",(0,o.kt)("inlineCode",{parentName:"p"},"cert.pem")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"key.pem"),") located at ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/memgraph/ssl/"),"."),(0,o.kt)("p",null,"If you are using Docker and want to use your own certificates, you need to ",(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/how-to-guides/work-with-docker#how-to-copy-files-from-and-to-a-Docker-container"},"move\nthem into a Docker\ncontainer"),"\nin order to utilize them."),(0,o.kt)("h2",{id:"configure-the-server"},"Configure the server"),(0,o.kt)("p",null,"To use a certain SSL certificate, change the configuration file to include the\n",(0,o.kt)("inlineCode",{parentName:"p"},"--bolt-cert-file")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--bolt-key-file")," flags and set them to the location of\nthe certification files."),(0,o.kt)("p",null,"If you are using the Memgraph self-signed certificate, set the configuration\nflags to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"--bolt-cert-file=/etc/memgraph/ssl/cert.pem\n--bolt-key-file=/etc/memgraph/ssl/key.pem\n")),(0,o.kt)("p",null,"When using Linux, be sure that the user ",(0,o.kt)("inlineCode",{parentName:"p"},"memgraph")," has permissions (400) to\naccess the files."),(0,o.kt)("p",null,"Once the flags are included in the configuration, you cannot establish an\ninsecure connection."),(0,o.kt)("h2",{id:"enable-ssl-connection"},"Enable SSL connection"),(0,o.kt)(l.Z,{groupId:"connectiontype",defaultValue:"lab",values:[{label:"Memgraph Lab",value:"lab"},{label:"mgconsole",value:"mgconsole"},{label:"Drivers",value:"drivers"},{label:"WebSocket",value:"websocket"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"lab",mdxType:"TabItem"},(0,o.kt)("p",null,"To enable SSL connection in Memgraph Lab, switch to ",(0,o.kt)("strong",{parentName:"p"},"Connect Manually")," view\nand turn the SSL on."),(0,o.kt)("img",{src:n(26453).Z,className:"imgBorder"}),(0,o.kt)("p",null,"When Memgraph Lab is connected to MemgraphDB using SSL encryption, logs cannot\nbe viewed inside the Lab.")),(0,o.kt)(i.Z,{value:"mgconsole",mdxType:"TabItem"},(0,o.kt)("p",null,"When starting mgconsol include the ",(0,o.kt)("inlineCode",{parentName:"p"},"--use-ssl=true")," flag. Flag can also be\nexplicitly set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," if needed."),(0,o.kt)("p",null,"When working with Memgraph Platform, you should pass configuration flags inside\nof environmental variables as a part of the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'docker run -it -p 7687:7687 -p 7444:7444 -p 3000:3000 -v mg_lib:/var/lib/memgraph -v mg_etc:/etc/memgraph -e MGCONSOLE="--use-ssl=true" memgraph/memgraph-platform\n')),(0,o.kt)("p",null,"In all other cases passed them on as regular configuration flags."),(0,o.kt)("p",null,"For example, if you are starting mgconsole on Linux:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mgconsole --host 127.0.0.1 --port 7687 --use-ssl=true\n")),(0,o.kt)("p",null,"or if you are using ",(0,o.kt)("inlineCode",{parentName:"p"},"memgraph")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"memgraph-mage")," Docker images:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run -it -p 7687:7687 -p 7444:7444 -p 3000:3000 -v mg_lib:/var/lib/memgraph -v mg_etc:/etc/memgraph memgraph/memgraph-mage --use-ssl=true\n"))),(0,o.kt)(i.Z,{value:"drivers",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Javascript")),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"https://neo4j.com/developer/javascript/"},"Neo4j driver for JavaScript"),", and\nadd ",(0,o.kt)("inlineCode",{parentName:"p"},"+ssc")," to the UNI when defining a ",(0,o.kt)("inlineCode",{parentName:"p"},"MEMGRAPH_URI")," constant: ",(0,o.kt)("br",null)),(0,o.kt)("code",null,"MEMGRAPH_URI = 'bolt+ssc://18.196.53.118:7687'"),".",(0,o.kt)("p",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Python")),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/pymgclient"},"pymgclient"),", and add\n",(0,o.kt)("inlineCode",{parentName:"p"},"sslmode=mgclient.MG_SSLMODE_REQUIRE")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"mgclient.connect"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"C/C++")),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mgclient"},"mgclient"),", and add set the\n",(0,o.kt)("inlineCode",{parentName:"p"},"params.use_ssl")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Go")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"https://neo4j.com/developer/go/"},"Neo4j driver for Go"),", and add ",(0,o.kt)("inlineCode",{parentName:"p"},"+ssc"),"\nto the UNI: ",(0,o.kt)("inlineCode",{parentName:"p"},'"bolt+ssc://18.196.53.118:7687"'),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"PHP")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/neo4j-php/Bolt"},"Bolt protocol library by\nstefanak-michal")," and add the following code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"$conn->setSslContextOptions([\n 'passphrase' => 'bolt',\n 'allow_self_signed' => true,\n 'verify_peer' => false,\n 'verify_peer_name' => false\n]);\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"C#")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"https://neo4j.com/developer/dotnet/"},"Neo4j.Driver.Simple"),", and add\n",(0,o.kt)("inlineCode",{parentName:"p"},"+ssc")," to the UNI: ",(0,o.kt)("inlineCode",{parentName:"p"},'"bolt+ssc://18.196.53.118:7687"'),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Java")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"https://neo4j.com/developer/java/"},"Neo4j driver for Java")," and add\n",(0,o.kt)("inlineCode",{parentName:"p"},"+ssc")," to the UNI: ",(0,o.kt)("inlineCode",{parentName:"p"},'"bolt+ssc://18.196.53.118:7687"'),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Rust")),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mgclient"},"mgclient"),", and add ",(0,o.kt)("inlineCode",{parentName:"p"},"sslmode:\nSSLMode::Require")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"ConnectParams"),".")),(0,o.kt)(i.Z,{value:"websocket",mdxType:"TabItem"},(0,o.kt)("p",null,"WebSocket over SSL is currently not supported in Memgraph."))))}h.isMDXComponent=!0},26453:function(e,t,n){t.Z=n.p+"assets/images/memgraph_lab_ssl-4a62089750bda0627ba554500eaa3d4f.png"}}]);