"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[17021],{3905:(e,r,t)=>{t.d(r,{Zo:()=>m,kt:()=>c});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function u(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),s=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):u(u({},r),e)),t},m=function(e){var r=s(e.components);return n.createElement(i.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(t),c=o,g=d["".concat(i,".").concat(c)]||d[c]||p[c]||a;return t?n.createElement(g,u(u({ref:r},m),{},{components:t})):n.createElement(g,u({ref:r},m))}));function c(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,u=new Array(a);u[0]=d;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,u[1]=l;for(var s=2;s<a;s++)u[s]=t[s];return n.createElement.apply(null,u)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68410:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=t(87462),o=(t(67294),t(3905));const a={id:"overview",title:"Query modules overview",sidebar_label:"Query modules overview",slug:"/reference-guide/query-modules"},u=void 0,l={unversionedId:"reference-guide/query-modules/overview",id:"version-2.1.1/reference-guide/query-modules/overview",title:"Query modules overview",description:"Memgraph supports extending the query language with user-written procedures in",source:"@site/memgraph_versioned_docs/version-2.1.1/reference-guide/query-modules/overview.md",sourceDirName:"reference-guide/query-modules",slug:"/reference-guide/query-modules",permalink:"/docs/memgraph/2.1.1/reference-guide/query-modules",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.1.1/reference-guide/query-modules/overview.md",tags:[],version:"2.1.1",frontMatter:{id:"overview",title:"Query modules overview",sidebar_label:"Query modules overview",slug:"/reference-guide/query-modules"},sidebar:"memgraph",previous:{title:"Metadata",permalink:"/docs/memgraph/2.1.1/reference-guide/metadata"},next:{title:"Available modules",permalink:"/docs/memgraph/2.1.1/reference-guide/query-modules/available-query-modules"}},i={},s=[],m={toc:s};function p(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Memgraph supports extending the query language with user-written procedures in\n",(0,o.kt)("strong",{parentName:"p"},"C"),", ",(0,o.kt)("strong",{parentName:"p"},"C++"),", ",(0,o.kt)("strong",{parentName:"p"},"Python"),", and ",(0,o.kt)("strong",{parentName:"p"},"Rust"),". These procedures are grouped into\nmodules - ",(0,o.kt)("strong",{parentName:"p"},"Query modules"),", which can then be loaded on startup or later on. To\nlearn more about query modules take a look at the following guides:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.1/reference-guide/query-modules/available-query-modules"},"Implemented query modules -\nMAGE"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.1/reference-guide/query-modules/load-call-query-modules"},"Load and call query\nmodules"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.1/how-to-guides/query-modules/implement-query-modules"},"Implement custom query\nmodules")))),(0,o.kt)("p",null,"You can also check out detailed descriptions of the query modules API:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.1/reference-guide/query-modules/api/python-api"},"Python API"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.1.1/reference-guide/query-modules/api/c-api"},"C API")))),(0,o.kt)("admonition",{title:"Available Query Modules",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The open-source repository ",(0,o.kt)("strong",{parentName:"p"},"MAGE (Memgraph\nAdvanced Graph Extensions)")," contains all currently implemented query modules.\nFor more information on all the graph algorithms that are available and\ninstallation instructions, check out the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/mage"},"MAGE documentation"))," page.")))}p.isMDXComponent=!0}}]);