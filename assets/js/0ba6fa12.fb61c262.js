"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49e3],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>c});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=s(r),c=a,h=m["".concat(i,".").concat(c)]||m[c]||d[c]||o;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},24414:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>u,metadata:()=>s,toc:()=>d});var n=r(87462),a=(r(67294),r(3905)),o=r(74866),l=r(85162);const u={id:"run-a-query-module",title:"How to run a query module",sidebar_label:"Run a query module"},i=void 0,s={unversionedId:"how-to-guides/run-a-query-module",id:"how-to-guides/run-a-query-module",title:"How to run a query module",description:"Prerequisites",source:"@site/mage/how-to-guides/run-a-query-module.md",sourceDirName:"how-to-guides",slug:"/how-to-guides/run-a-query-module",permalink:"/docs/mage/how-to-guides/run-a-query-module",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/mage/how-to-guides/run-a-query-module.md",tags:[],version:"current",frontMatter:{id:"run-a-query-module",title:"How to run a query module",sidebar_label:"Run a query module"},sidebar:"mage",previous:{title:"Create a C++ query module",permalink:"/docs/mage/how-to-guides/create-a-new-module-cpp"},next:{title:"Run modules on subgraphs",permalink:"/docs/mage/how-to-guides/run-a-subgraph-module"}},p={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Importing query modules into Memgraph",id:"importing-query-modules-into-memgraph",level:2},{value:"Querying",id:"querying",level:2},{value:"Testing",id:"testing",level:2},{value:"input.cyp",id:"inputcyp",level:3},{value:"test.yml",id:"testyml",level:3},{value:"Next steps",id:"next-steps",level:2}],m={toc:d};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You have developed a query module by yourself and/or followed our tutorial for\n",(0,a.kt)("a",{parentName:"li",href:"/mage/how-to-guides/create-a-new-module-python"},"Python")," or\n",(0,a.kt)("a",{parentName:"li",href:"/mage/how-to-guides/create-a-new-module-cpp"},"C++"))),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"The following steps depend on how you installed Memgraph and MAGE as we need\nto import the modules.")),(0,a.kt)("h2",{id:"importing-query-modules-into-memgraph"},"Importing query modules into Memgraph"),(0,a.kt)(o.Z,{groupId:"running-method",defaultValue:"docker-hub",values:[{label:"Docker Hub",value:"docker-hub"},{label:"Docker build",value:"docker-build"},{label:"Build from source on Linux",value:"source"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"docker-hub",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1.")," Start the MAGE container with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --rm -p 7687:7687 --name mage memgraph-mage:version-dev\n")),(0,a.kt)("p",null,"Be sure to replace the ",(0,a.kt)("inlineCode",{parentName:"p"},"version")," with the specific version, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --rm -p 7687:7687 --name mage memgraph-mage:1.4-dev\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2.")," Copy your local MAGE directory inside the container in order for Memgraph\nto import the query modules:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"a)")," First, you need to copy the files to the container named ",(0,a.kt)("inlineCode",{parentName:"p"},"mage"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker cp . mage:/mage/\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"b)")," Then, you need to position yourself inside the container as root:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker exec -u root -it mage /bin/bash\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: If you performed the build locally, make sure to delete the ",(0,a.kt)("inlineCode",{parentName:"p"},"cpp/build"),"\ndirectory because you might be dealing with different architectures or\nproblems with ",(0,a.kt)("inlineCode",{parentName:"p"},"CMakeCache.txt"),". To delete it, run:"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"rm -rf cpp/build"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"c)")," After that, build MAGE with the option to copy executables from\n",(0,a.kt)("inlineCode",{parentName:"p"},"mage/dist")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"python3 setup build -p /usr/lib/memgraph/query_modules/\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"d)")," Everything should be ready to exit the container and load the query\nmodules:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"exit\n"))),(0,a.kt)(l.Z,{value:"docker-build",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1.")," To create the ",(0,a.kt)("inlineCode",{parentName:"p"},"dev")," ",(0,a.kt)("strong",{parentName:"p"},"MAGE")," image, run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker build --target dev -t memgraph-mage:dev .\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2.")," Start the container with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --rm -p 7687:7687 --name mage memgraph-mage:dev\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you make any changes to the module, you can stop the container and do a\nrebuild. Additionally, if you don't want to rebuild everything, you can:"),(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Copy the changes to the container."),(0,a.kt)("li",{parentName:"ol"},"Perform a build inside the container."),(0,a.kt)("li",{parentName:"ol"},"Copy the executables to the ",(0,a.kt)("inlineCode",{parentName:"li"},"/usr/lib/memgraph/query_modules/")," directory,\nwhere Memgraph is looking for query modules.")),(0,a.kt)("p",{parentName:"admonition"},"The process is the same as described in step ",(0,a.kt)("strong",{parentName:"p"},"2")," of the tab ",(0,a.kt)("inlineCode",{parentName:"p"},"Docker Hub"),"."))),(0,a.kt)(l.Z,{value:"source",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1.")," Make sure your Memgraph instance is running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl status memgraph.service\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2.")," Now, we need to copy our developed query module ",(0,a.kt)("inlineCode",{parentName:"p"},"random_walk.py")," to\n",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"python3 setup build -p /usr/lib/memgraph/query_modules\n")))),(0,a.kt)("h2",{id:"querying"},"Querying"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note that query modules are loaded into Memgraph on startup, so if your\ninstance was already running, you would need to execute the following query\ninside one of the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.memgraph.com/memgraph/connect-to-memgraph"},"querying\nplatforms")," to load\nthem:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"CALL mg.load_all();\n")),(0,a.kt)("p",null,"Lastly, run a query and test your module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"MERGE (start:Node {id: 0})-[:RELATION]->(:Node {id: 1})-[:RELATION]->(:Node {id: 2})\nCALL random_walk.get(start, 2) YIELD path\nRETURN path\n")),(0,a.kt)("h2",{id:"testing"},"Testing"),(0,a.kt)("p",null,"Test decoupled parts of your code that don't depend on Memgraph like you would\nin any other setting. E2e (end to end) tests, on the other hand, depend on\ninternal Memgraph data structures, like nodes and edges. After running Memgraph,\nwe need to prepare the testing environment on the host machine. Position\nyourself in the mage directory you cloned from GitHub. The expected folder\nstructure for each module is the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"mage\n\u2514\u2500\u2500 e2e\n    \u2514\u2500\u2500 random_walk_test\n        \u2514\u2500\u2500 test_base\n            \u251c\u2500\u2500 input.cyp\n            \u2514\u2500\u2500 test.yml\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"input.cyp")," represents a Cypher script for entering the data into the database.\nTo simplify this tutorial, we'll leave the database empty. ",(0,a.kt)("inlineCode",{parentName:"p"},"test.yml")," specifies\nwhich test query should be run by the database and what should be the result or\nexception. Create the files following the aforementioned directory structure."),(0,a.kt)("h3",{id:"inputcyp"},"input.cyp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n) DETACH DELETE n;\n")),(0,a.kt)("h3",{id:"testyml"},"test.yml"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"query: >\n  MATCH (start:Node {id: 0})\n    CALL random_walk.get(start, 2) YIELD path\n    RETURN path\n\noutput: []\n")),(0,a.kt)("p",null,"Lastly, run the e2e tests with python:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"python test_e2e\n")),(0,a.kt)("h2",{id:"next-steps"},"Next steps"),(0,a.kt)("p",null,"Feel free to create an issue or open a pull request on our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage"},"Github\nrepo")," to speed up the development.",(0,a.kt)("br",null),"\nAlso, don't forget to throw us a star on GitHub. \u2b50"))}c.isMDXComponent=!0},85162:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(67294),a=r(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>w});var n=r(87462),a=r(67294),o=r(86010),l=r(12466),u=r(16550),i=r(91980),s=r(67392),p=r(50012);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function m(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??d(r);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function c(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:r}=e;const n=(0,u.k6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function g(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,o=m(e),[l,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,s]=h({queryString:r,groupId:n}),[d,g]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,p.Nk)(r);return[n,(0,a.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:n}),y=(()=>{const e=i??d;return c({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{y&&u(y)}),[y]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),s(e),g(e)}),[s,g,o]),tabValues:o}}var y=r(72389);const k="tabList__CuJ",f="tabItem_LNqP";function b(e){let{className:t,block:r,selectedValue:u,selectValue:i,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),m=e=>{const t=e.currentTarget,r=p.indexOf(t),n=s[r].value;n!==u&&(d(t),i(n))},c=e=>{var t;let r=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;r=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;r=p[t]??p[p.length-1];break}}null==(t=r)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},t)},s.map((e=>{let{value:t,label:r,attributes:l}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>p.push(e),onKeyDown:c,onClick:m},l,{className:(0,o.Z)("tabs__item",f,null==l?void 0:l.className,{"tabs__item--active":u===t})}),r??t)})))}function v(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function N(e){const t=g(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",k)},a.createElement(b,(0,n.Z)({},e,t)),a.createElement(v,(0,n.Z)({},e,t)))}function w(e){const t=(0,y.Z)();return a.createElement(N,(0,n.Z)({key:String(t)},e))}}}]);