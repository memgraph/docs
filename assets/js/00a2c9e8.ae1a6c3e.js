(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7509],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),f=u(n),d=l,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},99646:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return f}});var r=n(22122),l=n(19756),a=(n(67294),n(3905)),i=["components"],o={id:"transaction-levels",title:"Transaction levels",sidebar_label:"Transaction levels"},c=void 0,u={unversionedId:"reference-guide/transaction-levels",id:"reference-guide/transaction-levels",isDocsHomePage:!1,title:"Transaction levels",description:"Supported transaction levels",source:"@site/docs/reference-guide/transaction-levels.md",sourceDirName:"reference-guide",slug:"/reference-guide/transaction-levels",permalink:"/memgraph/next/reference-guide/transaction-levels",editUrl:"https://github.com/memgraph/docs/tree/master/docs/reference-guide/transaction-levels.md",version:"current",frontMatter:{id:"transaction-levels",title:"Transaction levels",sidebar_label:"Transaction levels"},sidebar:"memgraph",previous:{title:"TensorFlow Op",permalink:"/memgraph/next/reference-guide/tensorflow"},next:{title:"Audit log (Enterprise)",permalink:"/memgraph/next/reference-guide/audit-log"}},s=[{value:"Supported transaction levels",id:"supported-transaction-levels",children:[]},{value:"Setting the transaction level",id:"setting-the-transaction-level",children:[{value:"Configuration",id:"configuration",children:[]},{value:"Query",id:"query",children:[]}]}],p={toc:s};function f(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"supported-transaction-levels"},"Supported transaction levels"),(0,a.kt)("p",null,"Memgraph currently supports three transaction levels:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SNAPSHOT ISOLATION (default)"),(0,a.kt)("li",{parentName:"ul"},"READ COMMITTED"),(0,a.kt)("li",{parentName:"ul"},"READ UNCOMMITTED")),(0,a.kt)("h2",{id:"setting-the-transaction-level"},"Setting the transaction level"),(0,a.kt)("p",null,"The default transaction level, ",(0,a.kt)("inlineCode",{parentName:"p"},"SNAPSHOT ISOLATION"),", can be changed using the config\nor running a query."),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Changing the ",(0,a.kt)("inlineCode",{parentName:"p"},"--isolation-level")," configuration flag to any of the supported values will change the\ninitial global isolation level for every query being run on that instance."),(0,a.kt)("h3",{id:"query"},"Query"),(0,a.kt)("p",null,"The initially set isolation level can be changed during runtime using a query\nof the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"SET <scope> TRANSACTION ISOLATION LEVEL <isolation_level>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"<scope>")," defines the scope to which the isolation level change should apply.\nIt can take any of the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"GLOBAL - apply the new isolation level globally"),(0,a.kt)("li",{parentName:"ul"},"SESSION - apply the new isolation level only for the current session"),(0,a.kt)("li",{parentName:"ul"},"NEXT - apply the new isolation level only for the next transaction in the current session")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"<isolation_level")," defines the isolation level which we want to use.\nIt can take any of the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SNAPSHOT ISOLATION"),(0,a.kt)("li",{parentName:"ul"},"READ COMMITTED"),(0,a.kt)("li",{parentName:"ul"},"READ UNCOMMITTED")))}f.isMDXComponent=!0}}]);