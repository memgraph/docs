"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63761],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var m=n.createContext({}),l=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),h=o,g=u["".concat(m,".").concat(h)]||u[h]||s[h]||a;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},88368:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return m},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],p={id:"overview",title:"Overview",sidebar_label:"Connect to Memgraph overview",slug:"/connect-to-memgraph"},m=void 0,l={unversionedId:"connect-to-memgraph/overview",id:"version-1.6.1/connect-to-memgraph/overview",isDocsHomePage:!1,title:"Overview",description:"Memgraph supports the openCypher query language",source:"@site/memgraph_versioned_docs/version-1.6.1/connect-to-memgraph/overview.md",sourceDirName:"connect-to-memgraph",slug:"/connect-to-memgraph",permalink:"/memgraph/connect-to-memgraph",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-1.6.1/connect-to-memgraph/overview.md",version:"1.6.1",frontMatter:{id:"overview",title:"Overview",sidebar_label:"Connect to Memgraph overview",slug:"/connect-to-memgraph"},sidebar:"version-1.6.1/memgraph",previous:{title:"Installation troubleshooting",permalink:"/memgraph/windows-installation-troubleshooting"},next:{title:"Connection methods",permalink:"/memgraph/connection-methods"}},c=[{value:"Choose your connection method",id:"choose-your-connection-method",children:[]},{value:"Telemetry",id:"telemetry",children:[]},{value:"Where to next?",id:"where-to-next",children:[]}],s={toc:c};function u(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Memgraph supports the ",(0,a.kt)("a",{parentName:"p",href:"https://www.opencypher.org"},"openCypher")," query language\nwhich has been developed by ",(0,a.kt)("a",{parentName:"p",href:"http://neo4j.com"},"Neo4j"),".\nIt is a declarative language developed specifically\nfor interaction with graph databases, which is currently going through a\nvendor-independent standardization process."),(0,a.kt)("p",null,"There are multiple ways of executing openCypher queries against Memgraph and you can learn more about them below."),(0,a.kt)("h2",{id:"choose-your-connection-method"},"Choose your connection method"),(0,a.kt)("p",null,"Memgraph supports three main options for querying the platform:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph/connect-to-memgraph/methods/mgconsole"},"mgconsole")),": A command-line interface for querying Memgraph."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph-lab"},"Memgraph Lab")),": An interactive GUI application for querying and visualizing your graphs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph/connect-to-memgraph/methods/drivers"},"Programatically - Drivers")),": Connect to Memgraph from your favorite programming language. We support a wide range of drivers.")),(0,a.kt)("h2",{id:"telemetry"},"Telemetry"),(0,a.kt)("p",null,"Telemetry is an automated process by which data is collected at a remote point.\nAt Memgraph, we use telemetry for the sole purpose of improving our product,\nthereby collecting data about the machine that executes the database (CPU,\nmemory, OS, and kernel information) as well as data about the database runtime\n(CPU usage, memory usage, vertices, and edges count)."),(0,a.kt)("p",null,"Here at Memgraph, we care deeply about the privacy of our users and do not\ncollect any sensitive information. If you wish to disable Memgraph's telemetry\nfeatures, you can do so easily, either by altering the line in\n",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/memgraph/memgraph.conf")," that enables telemetry (set\n",(0,a.kt)("inlineCode",{parentName:"p"},"--telemetry-enabled=true")," to the following ",(0,a.kt)("inlineCode",{parentName:"p"},"--telemetry-enabled=false"),"), or by\nincluding ",(0,a.kt)("inlineCode",{parentName:"p"},"--telemetry-enabled=false")," as a command-line argument when running\nthe executable."),(0,a.kt)("p",null,"To learn more about telemetry in Memgraph, visit the ",(0,a.kt)("a",{parentName:"p",href:"/memgraph/concepts/telemetry"},"concept page"),"."),(0,a.kt)("h2",{id:"where-to-next"},"Where to next?"),(0,a.kt)("p",null,"To learn more about the ",(0,a.kt)("strong",{parentName:"p"},"Cypher")," language, visit the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/cypher-manual"},"Cypher manual"))," or ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://playground.memgraph.com/"},"Memgraph Playground"))," for interactive guides.\nFor real-world examples of how to use Memgraph, we strongly suggest going through one of the available ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph/tutorials"},"Tutorials")),".\nDetails on what can be stored in Memgraph can be found in the article about ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/memgraph/concepts/storage"},"Data storage")),"."))}u.isMDXComponent=!0}}]);