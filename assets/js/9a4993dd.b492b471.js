"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16156],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),g=c(r),u=a,h=g["".concat(i,".").concat(u)]||g[u]||l[u]||o;return r?n.createElement(h,p(p({ref:t},s),{},{components:r})):n.createElement(h,p({ref:t},s))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=g;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:a,p[1]=m;for(var c=2;c<o;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},53730:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>l,frontMatter:()=>o,metadata:()=>m,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={id:"overview",title:"Drivers overview",sidebar_label:"Drivers overview",slug:"/connect-to-memgraph/drivers"},p=void 0,m={unversionedId:"connect-to-memgraph/drivers/overview",id:"connect-to-memgraph/drivers/overview",title:"Drivers overview",description:"Memgraph supports the following languages:",source:"@site/docs/connect-to-memgraph/drivers/overview.md",sourceDirName:"connect-to-memgraph/drivers",slug:"/connect-to-memgraph/drivers",permalink:"/docs/memgraph/next/connect-to-memgraph/drivers",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/docs/connect-to-memgraph/drivers/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Drivers overview",sidebar_label:"Drivers overview",slug:"/connect-to-memgraph/drivers"},sidebar:"memgraph",previous:{title:"mgconsole",permalink:"/docs/memgraph/next/connect-to-memgraph/mgconsole"},next:{title:"C#",permalink:"/docs/memgraph/next/connect-to-memgraph/drivers/c-sharp"}},i={},c=[],s={toc:c};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Memgraph supports the following languages: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/c-sharp"},"C#"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mgclient"},"C/C++"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/go"},"Go"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/zmactep/hasbolt"},"Haskell"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/java"},"Java"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/javascript"},"JavaScript"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/nodejs"},"Node.js"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/php"},"PHP"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/python"},"Python"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/neo4jrb/neo4j"},"Ruby"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/next/connect-to-memgraph/drivers/rust"},"Rust")))),(0,a.kt)("p",null,"To query Memgraph programmatically use the ",(0,a.kt)("a",{parentName:"p",href:"https://7687.org/"},"Bolt protocol"),".\nThe Bolt protocol was designed for efficient communication with graph databases\nand ",(0,a.kt)("strong",{parentName:"p"},"Memgraph supports versions 1 and 4")," of the protocol."))}l.isMDXComponent=!0}}]);