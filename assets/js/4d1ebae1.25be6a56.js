"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46345],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(r),m=i,d=h["".concat(s,".").concat(m)]||h[m]||g[m]||a;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},90536:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return h}});var n=r(87462),i=r(63366),a=(r(67294),r(3905)),o=["components"],l={id:"bridges-algorithm",title:"Bridge Detection",sidebar_label:"Bridge Detection"},s=void 0,p={unversionedId:"algorithms/traditional-graph-analytics/bridges-algorithm",id:"algorithms/traditional-graph-analytics/bridges-algorithm",title:"Bridge Detection",description:"Description",source:"@site/mage/algorithms/traditional-graph-analytics/bridges-algorithm.md",sourceDirName:"algorithms/traditional-graph-analytics",slug:"/algorithms/traditional-graph-analytics/bridges-algorithm",permalink:"/docs/mage/algorithms/traditional-graph-analytics/bridges-algorithm",editUrl:"https://github.com/memgraph/docs/tree/master/mage/algorithms/traditional-graph-analytics/bridges-algorithm.md",tags:[],version:"current",frontMatter:{id:"bridges-algorithm",title:"Bridge Detection",sidebar_label:"Bridge Detection"},sidebar:"mage",previous:{title:"Bipartite Matching",permalink:"/docs/mage/algorithms/traditional-graph-analytics/bipartite-matching-algorithm"},next:{title:"Community Detection",permalink:"/docs/mage/algorithms/traditional-graph-analytics/community-detection-algorithm"}},c=[{value:"Description",id:"description",children:[],level:2},{value:"Materials",id:"materials",children:[{value:"Implementation",id:"implementation",children:[],level:3}],level:2},{value:"Use cases",id:"use-cases",children:[],level:2}],g={toc:c};function h(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"As in the real world, the definition of a bridge in graph theory denotes\nsomething that divides an entity into multiple components. Thus, more precisely,\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Bridge_(graph_theory)"},"bridge")," in graph\ntheory denotes an edge that, when removed, divides the graph into two separate\ncomponents."),(0,a.kt)("img",{src:"https://i.imgur.com/X3GzJOQ.png",alt:"drawing"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Example of bridges on the graph. Bold edges represent bridges.")),(0,a.kt)("p",null,"This algorithm is frequent as part of the initial graph analysis. It talks a lot\nabout the connection itself and reveals, depending on the domain, the points of\nthe graph that connect the different components. The first ",(0,a.kt)("a",{parentName:"p",href:"https://www.thealgorists.com/Algo/GraphTheory/Tarjan/Bridges"},"linear\nalgorithm")," for\nfinding bridges within a graph was written in 1974 by ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Robert_Tarjan"},"Robert\nTarjan"),"."),(0,a.kt)("h2",{id:"materials"},"Materials"),(0,a.kt)("h3",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage/blob/main/cpp/bridges_module/bridges_module.cpp"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Bridges-Implementation-FB6E00?style=for-the-badge&logo=github&logoColor=white",alt:"Bridges"}))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/mage/query-modules/cpp/bridges"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Bridges-Documentation-FCC624?style=for-the-badge&logo=cplusplus&logoColor=white",alt:"Bridges"}))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Bridges Detection")," is implemented as part of the\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage"},(0,a.kt)("strong",{parentName:"a"},"MAGE"))," project. Be sure to check it out in\nthe link above. \u261d\ufe0f"),(0,a.kt)("h2",{id:"use-cases"},"Use cases"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/mage/use-cases/transportation"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Transport_industry-Application-8A477F?style=for-the-badge",alt:"Transport\nindustry"}))),(0,a.kt)("p",null,"In the transport industry, the application of the bridge recognition algorithm\nis intuitive. By analogy with the real world, bridges are key points of traffic,\nand their functioning is essential to the functioning of any city."),(0,a.kt)("p",null,"Traffic planning will always involve looking for bottleneck points that will\nconnect more components and thus help build better infrastructure."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/mage/use-cases/telecommunication"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Internet_Network-Application-8A477F?style=for-the-badge",alt:"Internet\nNetworks"}))),(0,a.kt)("p",null,"Just like the previous example, Internet networks are organized similarly to a\ntransport network, and as such, contain bottlenecks that are bridges to that big\ngraph. Such points need to be strengthened with excellent infrastructure, which\nwill prevent the possibility of unexpected system crashes."))}h.isMDXComponent=!0}}]);