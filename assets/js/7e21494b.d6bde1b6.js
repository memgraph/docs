"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[45196],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(a),c=o,f=u["".concat(p,".").concat(c)]||u[c]||m[c]||r;return a?n.createElement(f,i(i({ref:t},d),{},{components:a})):n.createElement(f,i({ref:t},d))}));function c(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},22281:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var n=a(87462),o=(a(67294),a(3905));const r={id:"load-json",title:"Loading from JSON format",sidebar_label:"JSON",pagination_prev:"import-data/overview"},i=void 0,l={unversionedId:"import-data/files/load-json",id:"version-2.9.0/import-data/files/load-json",title:"Loading from JSON format",description:"A JSON file is a file that stores simple data structures and objects in",source:"@site/memgraph_versioned_docs/version-2.9.0/import-data/files/load-json.md",sourceDirName:"import-data/files",slug:"/import-data/files/load-json",permalink:"/docs/memgraph/2.9.0/import-data/files/load-json",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.9.0/import-data/files/load-json.md",tags:[],version:"2.9.0",frontMatter:{id:"load-json",title:"Loading from JSON format",sidebar_label:"JSON",pagination_prev:"import-data/overview"},sidebar:"memgraph",previous:{title:"Import data overview",permalink:"/docs/memgraph/2.9.0/import-data"},next:{title:"CYPHERL",permalink:"/docs/memgraph/2.9.0/import-data/files/cypherl"}},p={},s=[{value:"Examples",id:"examples",level:2},{value:"Load JSON from a local file",id:"load-json-from-a-local-file",level:3},{value:"<code>json_util.load_from_path()</code> procedure",id:"json_utilload_from_path-procedure",level:4},{value:"<code>import_util.json()</code> procedure",id:"import_utiljson-procedure",level:4},{value:"Load JSON from a remote address",id:"load-json-from-a-remote-address",level:3}],d={toc:s};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A JSON file is a file that stores simple data structures and objects in\nJavaScript Object Notation format, which is a standard data interchange format.\nThe data you want to import to the database is often saved in JSON format, and\nyou might want to import parts of that data as graph objects - nodes or\nrelationships."),(0,o.kt)("p",null,"Data can be imported using query modules implemented in ",(0,o.kt)("a",{parentName:"p",href:"/mage"},"the MAGE library"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/mage/query-modules/python/json-util"},(0,o.kt)("inlineCode",{parentName:"a"},"json_util"))," query module"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/mage/query-modules/python/import-util"},(0,o.kt)("inlineCode",{parentName:"a"},"import_util"))," query module.")),(0,o.kt)("p",null,"The difference is that ",(0,o.kt)("inlineCode",{parentName:"p"},"json_util.load_from_path()")," has no requirements about\nthe formatting of data inside the JSON file, while the ",(0,o.kt)("inlineCode",{parentName:"p"},"import_util.json()"),"\nprocedure requires data to be formatted in a specific way. It is the same\nformatting the ",(0,o.kt)("inlineCode",{parentName:"p"},"export_util.json()")," procedure generates when it's used to export\ndata from Memgraph into a JSON file.  "),(0,o.kt)("details",null,(0,o.kt)("summary",null,"JSON file data format required by the ",(0,o.kt)("code",null,"import_util.json()")," procedure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n      "id": 6114,\n      "labels": [\n          "Person"\n      ],\n      "properties": {\n          "name": "Anna"\n      },\n      "type": "node"\n  },\n  {\n      "id": 6115,\n      "labels": [\n          "Person"\n      ],\n      "properties": {\n          "name": "John"\n      },\n      "type": "node"\n  },\n  {\n      "id": 6116,\n      "labels": [\n          "Person"\n      ],\n      "properties": {\n          "name": "Kim"\n      },\n      "type": "node"\n  },\n  {\n      "end": 6115,\n      "id": 21120,\n      "label": "IS_FRIENDS_WITH",\n      "properties": {},\n      "start": 6114,\n      "type": "relationship"\n  },\n  {\n      "end": 6116,\n      "id": 21121,\n      "label": "IS_FRIENDS_WITH",\n      "properties": {},\n      "start": 6114,\n      "type": "relationship"\n  },\n  {\n      "end": 6116,\n      "id": 21122,\n      "label": "IS_MARRIED_TO",\n      "properties": {},\n      "start": 6115,\n      "type": "relationship"\n  }\n]\n'))),(0,o.kt)("p",null,"To be able to call the procedures, you need to ",(0,o.kt)("a",{parentName:"p",href:"/mage/how-to-guides/run-a-query-module"},"install MAGE and load query\nmodules"),". "),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you can choose the format of the data you want to import, the fastest way to\nimport data into Memgraph is from a CSV file using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/2.9.0/import-data/load-csv-clause"},"LOAD CSV\nclause"),". ")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Below, you can find two examples of how to load data from a JSON file depending\non the file location:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#load-json-from-a-local-file"},"Load JSON from a local file")," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#load-json-from-a-remote-address"},"Load JSON from a remote address"))),(0,o.kt)("h3",{id:"load-json-from-a-local-file"},"Load JSON from a local file"),(0,o.kt)("p",null,"To import data from a local JSON file, you can use the\n",(0,o.kt)("a",{parentName:"p",href:"/mage/query-modules/python/json-util"},(0,o.kt)("inlineCode",{parentName:"a"},"json_util.load_from_path()"))," procedure\nor ",(0,o.kt)("a",{parentName:"p",href:"/mage/query-modules/python/import-util"},(0,o.kt)("inlineCode",{parentName:"a"},"import_util.json()"))," procedure. "),(0,o.kt)("p",null,"The difference is that ",(0,o.kt)("inlineCode",{parentName:"p"},"json_util.load_from_path()")," has no requirements about\nthe formatting of data inside the JSON file while the ",(0,o.kt)("inlineCode",{parentName:"p"},"import_util.json()"),"\nprocedure does. It is the same formatting the ",(0,o.kt)("inlineCode",{parentName:"p"},"export_util.json()")," procedure\ngenerates when it's used to export data from Memgraph into a JSON file.  "),(0,o.kt)("h4",{id:"json_utilload_from_path-procedure"},(0,o.kt)("inlineCode",{parentName:"h4"},"json_util.load_from_path()")," procedure"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"json_util.load_from_path()")," procedure takes one string argument (",(0,o.kt)("inlineCode",{parentName:"p"},"path"),")\nand returns a list of JSON objects from the file located at the provided path."),(0,o.kt)("p",null,"Let's import data from a file ",(0,o.kt)("inlineCode",{parentName:"p"},"data.json")," with the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "first_name": "Jessica",\n  "last_name": "Rabbit",\n  "pets": ["dog", "cat", "bird"]\n}\n')),(0,o.kt)("p",null,"If you are using Docker to run Memgraph, you will need to ",(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/2.9.0/how-to-guides/work-with-docker#how-to-copy-files-from-and-to-a-Docker-container"},"copy the files from\nyour local directory into the\nDocker"),"\ncontainer where Memgraph can access them."),(0,o.kt)("p",null,"To create a node with the label ",(0,o.kt)("inlineCode",{parentName:"p"},"Person")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"first_name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"last_name")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"pets"),"\nas properties, run the following query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},'CALL json_util.load_from_path("path/to/data.json")\nYIELD objects\nUNWIND objects AS o\nCREATE (:Person {first_name: o.first_name, last_name: o.last_name, pets: o.pets});\n')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"After you execute the above query, the graph in Memgraph should look like this:"),(0,o.kt)("div",null,(0,o.kt)("img",{src:a(98888).Z}))),(0,o.kt)("h4",{id:"import_utiljson-procedure"},(0,o.kt)("inlineCode",{parentName:"h4"},"import_util.json()")," procedure"),(0,o.kt)("p",null,"To find out how to import data with the ",(0,o.kt)("inlineCode",{parentName:"p"},"import_util.json()")," procedure ",(0,o.kt)("a",{parentName:"p",href:"/mage/query-modules/python/import-util"},"check\nout the MAGE documentation"),". "),(0,o.kt)("h3",{id:"load-json-from-a-remote-address"},"Load JSON from a remote address"),(0,o.kt)("p",null,"To import data from a remote JSON file, use ",(0,o.kt)("inlineCode",{parentName:"p"},"load_from_url(url)")," procedure that\ntakes one string argument (",(0,o.kt)("inlineCode",{parentName:"p"},"url"),") and returns a list of JSON objects from the\nfile located at the provided URL."),(0,o.kt)("p",null,"For example, at ",(0,o.kt)("inlineCode",{parentName:"p"},'"https://download.memgraph.com/asset/mage/data.json"'),", you can\nfind the following ",(0,o.kt)("inlineCode",{parentName:"p"},"data.json")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "first_name": "James",\n  "last_name": "Bond",\n  "pets": ["dog", "cat", "fish"]\n}\n')),(0,o.kt)("p",null,"To create a node with the label ",(0,o.kt)("inlineCode",{parentName:"p"},"Person")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"first_name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"last_name")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"pets")," as properties from the ",(0,o.kt)("inlineCode",{parentName:"p"},"data.json")," file. You can run the following query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},'CALL json_util.load_from_url("https://download.memgraph.com/asset/mage/data.json")\nYIELD objects\nUNWIND objects AS o\nCREATE (:Person {first_name: o.first_name, last_name: o.last_name, pets: o.pets});\n')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"After you run the above query, the graph in Memgraph should look like this:"),(0,o.kt)("div",null,(0,o.kt)("img",{src:a(29345).Z}))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"To load JSON files from another local or remote location, just replace the\nargument of the procedure with the appropriate path or URL. If you want to\ncreate a different kind of graph, you need to change the query accordingly. To\nlearn more about querying, check out the ",(0,o.kt)("a",{parentName:"p",href:"/cypher-manual"},"Cypher manual"),".")))}m.isMDXComponent=!0},98888:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/load_json_from_path-cd0c47fff320681902646cd494e63ef4.png"},29345:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/load_json_from_url-9fa43d2bb5e1f494536f12e3c6eb6550.png"}}]);