"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13736],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),u=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,f=c["".concat(d,".").concat(m)]||c[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7905:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},Highlight:function(){return m},default:function(){return h}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=n(55064),l=n(58215),d=["components"],u={id:"union-find",title:"union_find",sidebar_label:"union_find"},s=void 0,p={unversionedId:"query-modules/python/union-find",id:"query-modules/python/union-find",isDocsHomePage:!1,title:"union_find",description:"<span",source:"@site/mage/query-modules/python/union-find.md",sourceDirName:"query-modules/python",slug:"/query-modules/python/union-find",permalink:"/docs/mage/query-modules/python/union-find",editUrl:"https://github.com/memgraph/docs/tree/master/mage/query-modules/python/union-find.md",tags:[],version:"current",frontMatter:{id:"union-find",title:"union_find",sidebar_label:"union_find"},sidebar:"mage",previous:{title:"tsp",permalink:"/docs/mage/query-modules/python/tsp"},next:{title:"uuid_generator",permalink:"/docs/mage/query-modules/cpp/uuid-generator"}},c=[{value:"Abstract",id:"abstract",children:[]},{value:"Procedures",id:"procedures",children:[{value:"<code>connected(nodes1, nodes2, mode, update)</code>",id:"connectednodes1-nodes2-mode-update",children:[]}]},{value:"Example",id:"example",children:[]}],m=function(e){var t=e.children,n=e.color;return(0,o.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},f={toc:c,Highlight:m};function h(e){var t=e.components,u=(0,a.Z)(e,d);return(0,o.kt)("wrapper",(0,r.Z)({},f,u,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage/blob/main/python/union_find.py"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-union_find-FB6E00?logo=github&style=for-the-badge",alt:"docs-source"}))),(0,o.kt)("h2",{id:"abstract"},"Abstract"),(0,o.kt)("p",null,"Analysis of connected components is a common task in graph analytics."),(0,o.kt)("p",null,"By using a disjoint-set data structure that keeps track of them, the algorithm implemented in this module enables the user to quickly check whether a pair of given nodes is in the same or different connected component.\nA check on a pair of nodes is effectively executed in O(1) time."),(0,o.kt)("p",null,"The implementation of the disjoint-set data structure and its operations uses the ",(0,o.kt)("em",{parentName:"p"},"union by rank")," and ",(0,o.kt)("em",{parentName:"p"},"path splitting"),' optimizations described in "',(0,o.kt)("a",{parentName:"p",href:"https://dl.acm.org/doi/10.1145/62.2160"},"Worst-case Analysis of Set Union Algorithms"),'" ',(0,o.kt)("sup",{parentName:"p",id:"fnref-1"},(0,o.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),", and presented with examples ",(0,o.kt)("a",{parentName:"p",href:"https://www.cs.princeton.edu/~rs/AlgsDS07/01UnionFind.pdf"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("sup",{parentName:"p",id:"fnref-1"},(0,o.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," ",(0,o.kt)("a",{parentName:"p",href:"https://dl.acm.org/doi/10.1145/62.2160"},"Worst-case Analysis of Set Union Algorithms"),", Robert E. Tarjan and Jan van Leeuwen"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Trait"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Module type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"module")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Implementation")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"Python")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Graph direction")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"undirected")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Edge weights")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"unweighted")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Parallelism")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(m,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"sequential")))))),(0,o.kt)("h2",{id:"procedures"},"Procedures"),(0,o.kt)("h3",{id:"connectednodes1-nodes2-mode-update"},(0,o.kt)("inlineCode",{parentName:"h3"},"connected(nodes1, nodes2, mode, update)")),(0,o.kt)("h4",{id:"input"},"Input:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"nodes1: Union[Vertex, List[Vertex]]")," \u27a1 First value (or list thereof) in connectedness calculation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"nodes2: Union[Vertex, List[Vertex]]")," \u27a1 Second value (or list thereof) in connectedness calculation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'mode: str("pairwise")')," \u27a1 Mode of combining ",(0,o.kt)("inlineCode",{parentName:"li"},"nodes1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"nodes2"),". Can be ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("em",{parentName:"strong"},"p"))," or ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("em",{parentName:"strong"},"pairwise"))," for a pairwise product, or ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("em",{parentName:"strong"},"c"))," or ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("em",{parentName:"strong"},"cartesian"))," for a Cartesian product of the arguments. Pairwise by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"update: bool(True)")," \u27a1 Specifies whether the disjoint-set data structure should be reinitialized. Enabled by default. If the graph has been modified since the previous call of this procedure, turning ",(0,o.kt)("inlineCode",{parentName:"li"},"update")," off ensures that the changes are not visible in the output.")),(0,o.kt)("h4",{id:"output"},"Output:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"node1: Vertex")," \u27a1 Node in ",(0,o.kt)("inlineCode",{parentName:"li"},"nodes1"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"node2: Vertex")," \u27a1 Node in ",(0,o.kt)("inlineCode",{parentName:"li"},"nodes2"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"connected: bool")," \u27a1 ",(0,o.kt)("inlineCode",{parentName:"li"},"True")," if the above nodes are in the same connected component of the graph.")),(0,o.kt)("h4",{id:"usage"},"Usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (m:Node)\nWITH collect(m) AS nodes1\nMATCH (n:Node)\nWITH collect(n) AS nodes2, nodes1\nCALL union_find.connected(nodes1, nodes2) YIELD *\nRETURN node1, node2, connected;\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(i.Z,{groupId:"example",defaultValue:"visualization",values:[{label:"Step 1: Input graph",value:"visualization"},{label:"Step 2: Cypher load commands",value:"cypher"},{label:"Step 3: Running command",value:"run"},{label:"Step 4: Results",value:"result"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"visualization",mdxType:"TabItem"},(0,o.kt)("img",{src:n(23678).Z})),(0,o.kt)(l.Z,{value:"cypher",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MERGE (a:Node {id: 0}) MERGE (b:Node {id: 1}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 1}) MERGE (b:Node {id: 2}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 2}) MERGE (b:Node {id: 0}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 3}) MERGE (b:Node {id: 3}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 3}) MERGE (b:Node {id: 4}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 3}) MERGE (b:Node {id: 5}) CREATE (a)-[:RELATION]->(b);\n"))),(0,o.kt)(l.Z,{value:"run",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (m:Node)\nWHERE m.id = 0 OR m.id = 1\nWITH collect(m) AS nodes1\nMATCH (n:Node)\nWHERE n.id = 2 OR n.id = 3\nWITH collect(n) AS nodes2, nodes1\nCALL union_find.connected(nodes1, nodes2) YIELD *\nRETURN node1, node2, connected;\n"))),(0,o.kt)(l.Z,{value:"result",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"+-----------------+-----------------+-----------------+\n| node1           | node2           | connected       |\n+-----------------+-----------------+-----------------+\n| (:Node {id: 0}) | (:Node {id: 2}) | false           |\n| (:Node {id: 1}) | (:Node {id: 3}) | false           |\n+-----------------+-----------------+-----------------+\n")))))}h.isMDXComponent=!0},58215:function(e,t,n){var r=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},55064:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(67294),a=n(79443);var o=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(86010),l="tabItem_1uMI",d="tabItemActive_2DSg";var u=function(e){var t,n=e.lazy,a=e.block,u=e.defaultValue,s=e.values,p=e.groupId,c=e.className,m=r.Children.toArray(e.children),f=null!=s?s:m.map((function(e){return{value:e.props.value,label:e.props.label}})),h=null!=u?u:null==(t=m.find((function(e){return e.props.default})))?void 0:t.props.value,g=o(),k=g.tabGroupChoices,N=g.setTabGroupChoices,b=(0,r.useState)(h),y=b[0],v=b[1],E=[];if(null!=p){var T=k[p];null!=T&&T!==y&&f.some((function(e){return e.value===T}))&&v(T)}var C=function(e){var t=e.currentTarget,n=E.indexOf(t),r=f[n].value;v(r),null!=p&&(N(p,r),setTimeout((function(){var e,n,r,a,o,i,l,u;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,o=e.right,i=window,l=i.innerHeight,u=i.innerWidth,n>=0&&o<=u&&a<=l&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(d),setTimeout((function(){return t.classList.remove(d)}),2e3))}),150))},x=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=E.indexOf(e.target)+1;n=E[r]||E[0];break;case"ArrowLeft":var a=E.indexOf(e.target)-1;n=E[a]||E[E.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},c)},f.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,className:(0,i.Z)("tabs__item",l,{"tabs__item--active":y===t}),key:t,ref:function(e){return E.push(e)},onKeyDown:x,onFocus:C,onClick:C},null!=n?n:t)}))),n?(0,r.cloneElement)(m.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},m.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))}},79443:function(e,t,n){var r=(0,n(67294).createContext)(void 0);t.Z=r},86010:function(e,t,n){function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})},23678:function(e,t,n){t.Z=n.p+"assets/images/union-find-1-179c7651963fee64816cc1689a12dff4.png"}}]);