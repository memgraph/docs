"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16610],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),h=n,d=c["".concat(l,".").concat(h)]||c[h]||m[h]||o;return r?a.createElement(d,s(s({ref:t},u),{},{components:r})):a.createElement(d,s({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},32800:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={id:"mage-faq",title:"MAGE - Frequently asked questions",sidebar_label:"MAGE",slug:"/faq/mage"},s=void 0,i={unversionedId:"faq/mage-faq",id:"faq/mage-faq",title:"MAGE - Frequently asked questions",description:"What is Memgraph?",source:"@site/help-center/faq/mage-faq.md",sourceDirName:"faq",slug:"/faq/mage",permalink:"/docs/help-center/faq/mage",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/help-center/faq/mage-faq.md",tags:[],version:"current",frontMatter:{id:"mage-faq",title:"MAGE - Frequently asked questions",sidebar_label:"MAGE",slug:"/faq/mage"},sidebar:"hel_center",previous:{title:"Memgraph Lab",permalink:"/docs/help-center/faq/memgraph-lab"}},l={},p=[{value:"What is Memgraph?",id:"what-is-memgraph",level:3},{value:"What is MAGE?",id:"what-is-mage",level:3},{value:"What are query modules?",id:"what-are-query-modules",level:3},{value:"What is Cypher?",id:"what-is-cypher",level:3}],u={toc:p};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"what-is-memgraph"},"What is Memgraph?"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/memgraph"},"Memgraph"))," is a native in-memory graph streaming\nplatform built to handle real-time use-cases at enterprise scale. Memgraph\nsupports strongly-consistent ACID transactions and uses the standardized\n",(0,n.kt)("strong",{parentName:"p"},"Cypher")," query language for structuring, manipulating, and exploring data. You\ncan ",(0,n.kt)("a",{parentName:"p",href:"/memgraph/import-data/kafka"},"connect to Kafka")," and use Memgraph to wrangle\nyour graph data source."),(0,n.kt)("h3",{id:"what-is-mage"},"What is MAGE?"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/mage"},"MAGE"))," stands for ",(0,n.kt)("strong",{parentName:"p"},"Memgraph Advanced Graph Extensions"),". It\u2019s an\nopen-source project started by Memgraph that encourages developers to share\ninnovative and useful ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/mage/query-modules/available-queries"},"query modules")),"\n(custom Cypher procedures) so the whole community can benefit from them. If you\nhave used Neo4j's APOC library before, it will be easy for you to get used to\nthe MAGE library. If there is a specific procedure you can't find in the MAGE\nlibrary which you would like to use, please ",(0,n.kt)("a",{parentName:"p",href:"https://memgraph.com/community"},"let us\nknow"),". "),(0,n.kt)("h3",{id:"what-are-query-modules"},"What are query modules?"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/mage/query-modules/available-queries"},"Query modules"))," are essentially\ncollections of custom Cypher procedures that extend the basic functionalities of\nthe Cypher query language. Each query module consists of procedures that are\nconnected by a common theme (community detection for example). You can ",(0,n.kt)("a",{parentName:"p",href:"/mage/usage/loading-modules"},"implement\nquery modules")," using Python or C API."),(0,n.kt)("h3",{id:"what-is-cypher"},"What is Cypher?"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/cypher-manual"},"Cypher"))," is a ",(0,n.kt)("strong",{parentName:"p"},"graph query language")," that allows users to store and retrieve\ndata from a graph database."))}m.isMDXComponent=!0}}]);