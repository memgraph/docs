(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{144:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(3),r=n(8),a=(n(0),n(356)),i={id:"macos-installation-troubleshooting",title:"Troubleshooting installation on macOS",sidebar_label:"Installation troubleshooting",slug:"/macos-installation-troubleshooting"},s={unversionedId:"installation/macos/macos-installation-troubleshooting",id:"installation/macos/macos-installation-troubleshooting",isDocsHomePage:!1,title:"Troubleshooting installation on macOS",description:"Issues when connecting to Memgraph",source:"@site/docs/installation/macos/macos-installation-troubleshooting.md",slug:"/macos-installation-troubleshooting",permalink:"/memgraph/next/macos-installation-troubleshooting",editUrl:"https://github.com/memgraph/docs/tree/master/docs/installation/macos/macos-installation-troubleshooting.md",version:"current",sidebar_label:"Installation troubleshooting",sidebar:"memgraph",previous:{title:"Install Memgraph on macOS with Docker",permalink:"/memgraph/next/install-memgraph-on-macos-docker"},next:{title:"Install Memgraph on Windows with Docker",permalink:"/memgraph/next/install-memgraph-on-windows-docker"}},c=[{value:"Issues when connecting to Memgraph",id:"issues-when-connecting-to-memgraph",children:[]},{value:"Issues with connecting <strong>mg_client</strong> to the database",id:"issues-with-connecting-mg_client-to-the-database",children:[]},{value:"Find the IP address of a Docker Container",id:"find-the-ip-address-of-a-docker-container",children:[]}],l={toc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"issues-when-connecting-to-memgraph"},"Issues when connecting to Memgraph"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"docker run memgraph \n")),Object(a.b)("p",null,"While this command will start a Memgraph instance, not publishing the port will\ncause problems when trying to connect to the database via ",Object(a.b)("strong",{parentName:"p"},"Memgraph Lab"),",\n",Object(a.b)("strong",{parentName:"p"},"mg_client")," or ",Object(a.b)("strong",{parentName:"p"},"mgconsole"),". To avoid this, you should publish the\ncontainer's port to the host using the ",Object(a.b)("inlineCode",{parentName:"p"},"-p")," flag and by specifying the port:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"docker run -p 7687:7687 memgraph \n")),Object(a.b)("h2",{id:"issues-with-connecting-mg_client-to-the-database"},"Issues with connecting ",Object(a.b)("strong",{parentName:"h2"},"mg_client")," to the database"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"docker run -it --entrypoint=mg_client memgraph --host HOST --use-ssl=False \n")),Object(a.b)("p",null,"Although unlikely, sometimes there are issues with connecting ",Object(a.b)("strong",{parentName:"p"},"mg_client")," to\nthe Docker Container\u2019s IP address because it is running on a custom IP rather\nthan ",Object(a.b)("inlineCode",{parentName:"p"},"localhost"),". This problem is most often accompanied with the following\nerror:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"Connection failure: Couldn't connect to 127.0.0.1:7687! \n")),Object(a.b)("p",null,"To fix this issue, just replace ",Object(a.b)("inlineCode",{parentName:"p"},"HOST")," from the first command with\n",Object(a.b)("inlineCode",{parentName:"p"},"host.docker.internal"),". To find out more about networking in Docker, take a\nlook at ",Object(a.b)("a",{parentName:"p",href:"https://docs.docker.com/docker-for-mac/networking/"},"this guide"),"."),Object(a.b)("h2",{id:"find-the-ip-address-of-a-docker-container"},"Find the IP address of a Docker Container"),Object(a.b)("p",null,"Although unlikely, some users might experience minor difficulties after the\nDocker installation. Instead of running on ",Object(a.b)("inlineCode",{parentName:"p"},"localhost"),", a Docker container for\nMemgraph may be running on a custom IP address. Fortunately, that IP address can\nbe found as follows:"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"1.")," Determine the ID of the Memgraph Container by issuing the\ncommand ",Object(a.b)("inlineCode",{parentName:"p"},"docker ps"),". The user should get an output similar to the following:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},'CONTAINER ID    IMAGE       COMMAND                  CREATED\n9397623cd87e    memgraph    "/usr/lib/memgraph/m\u2026"   2 seconds ago \n')),Object(a.b)("p",null,"At this point, it is important to remember the container ID of the Memgraph\nImage. In our case, that is ",Object(a.b)("inlineCode",{parentName:"p"},"9397623cd87e"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"2.")," Use the this ID to retrieve the IP address of the Container:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' 9397623cd87e \n")),Object(a.b)("p",null,"The command above will yield the IP address that should be used when connecting\nto Memgraph via ",Object(a.b)("strong",{parentName:"p"},"Memgraph Lab"),", ",Object(a.b)("strong",{parentName:"p"},"mgconsole")," or ",Object(a.b)("strong",{parentName:"p"},"mg_client")," as described in\nthe ",Object(a.b)("a",{parentName:"p",href:"/memgraph/next/getting-started/querying/querying"},"querying")," section. Just replace\n",Object(a.b)("inlineCode",{parentName:"p"},"HOST")," from the following command with the appropriate IP address: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"docker run -it --entrypoint=mg_client memgraph --host HOST --use-ssl=False \n")))}p.isMDXComponent=!0},356:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,h=m["".concat(i,".").concat(u)]||m[u]||b[u]||a;return n?r.a.createElement(h,s(s({ref:t},l),{},{components:n})):r.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);