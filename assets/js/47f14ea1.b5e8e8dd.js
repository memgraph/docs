"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32747],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>c});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),m=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=m(e.components);return n.createElement(u.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=m(t),c=a,g=d["".concat(u,".").concat(c)]||d[c]||s[c]||o;return t?n.createElement(g,l(l({ref:r},p),{},{components:t})):n.createElement(g,l({ref:r},p))}));function c(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var m=2;m<o;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},41123:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var n=t(87462),a=(t(67294),t(3905));const o={id:"overview",title:"Query modules overview",sidebar_label:"Query modules overview",slug:"/reference-guide/query-modules"},l=void 0,i={unversionedId:"reference-guide/query-modules/overview",id:"version-2.2.0/reference-guide/query-modules/overview",title:"Query modules overview",description:"Memgraph supports extending the query language with user-written procedures in",source:"@site/memgraph_versioned_docs/version-2.2.0/reference-guide/query-modules/overview.md",sourceDirName:"reference-guide/query-modules",slug:"/reference-guide/query-modules",permalink:"/docs/memgraph/2.2.0/reference-guide/query-modules",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.2.0/reference-guide/query-modules/overview.md",tags:[],version:"2.2.0",frontMatter:{id:"overview",title:"Query modules overview",sidebar_label:"Query modules overview",slug:"/reference-guide/query-modules"},sidebar:"memgraph",previous:{title:"Monitoring server",permalink:"/docs/memgraph/2.2.0/reference-guide/monitoring-server"},next:{title:"Available modules",permalink:"/docs/memgraph/2.2.0/reference-guide/query-modules/available-query-modules"}},u={},m=[],p={toc:m};function s(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Memgraph supports extending the query language with user-written procedures in\n",(0,a.kt)("strong",{parentName:"p"},"C"),", ",(0,a.kt)("strong",{parentName:"p"},"C++"),", ",(0,a.kt)("strong",{parentName:"p"},"Python"),", and ",(0,a.kt)("strong",{parentName:"p"},"Rust"),". These procedures are grouped into\nmodules - ",(0,a.kt)("strong",{parentName:"p"},"query modules")," files (either ",(0,a.kt)("inlineCode",{parentName:"p"},"*.so")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".py")," files)."),(0,a.kt)("p",null,"Some query modules are built-in, and others, like those that can help you solve\ncomplex graph issues, are available as part of the MAGE library you can add to\nyour Memgraph installation. The library is already included if you are using\nMemgraph Platform or Memgraph MAGE Docker images to run Memgraph."),(0,a.kt)("p",null,"You can also implement custom query modules. Every single Memgraph installation\ncomes with the ",(0,a.kt)("inlineCode",{parentName:"p"},"example.so")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"py_example.py")," query modules located in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules")," directory. They were provided as examples of\nquery modules for you to examine and learn from."),(0,a.kt)("p",null,"Each query module file corresponds to one query module, and file names are\nmapped as query module names. For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"example.so")," will be mapped as\n",(0,a.kt)("inlineCode",{parentName:"p"},"example")," module, and ",(0,a.kt)("inlineCode",{parentName:"p"},"py_example.py")," will be mapped as ",(0,a.kt)("inlineCode",{parentName:"p"},"py_example")," module. If\neach module file has a procedure called ",(0,a.kt)("inlineCode",{parentName:"p"},"procedure")," defined, those procedures\nwould be mapped in the Cypher query language as ",(0,a.kt)("inlineCode",{parentName:"p"},"example.procedure()")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"py_example.procedure()")," respectively."),(0,a.kt)("p",null,"Regardless of where they come from and who wrote them, all modules need to be\nloaded into Memgraph so that they can be called while querying the database.\nThey are either loaded automatically when Memgraph starts or manually if they\nwere added while Memgraph was already running."),(0,a.kt)("p",null,"To learn more about query modules, take a look at the following guides:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/available-query-modules"},"Available query modules -\nMAGE"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/implement-custom-query-modules/overview"},"Implement custom query\nmodules")),"\nusing:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/api/python-api"},"Python\nAPI"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/api/c-api"},"C\nAPI"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/load-call-query-modules"},"Load and call query\nmodules"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/memgraph/2.2.0/reference-guide/query-modules/module-file-utilities"},"Manage module files from\nMemgraph")))),(0,a.kt)("admonition",{title:"Available Query Modules",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The open-source repository ",(0,a.kt)("strong",{parentName:"p"},"MAGE (Memgraph Advanced Graph Extensions)"),"\ncontains all currently implemented query modules. For more information on all\nthe available graph algorithms and installation instructions, check out the\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/mage"},"MAGE documentation"))," page.")))}s.isMDXComponent=!0}}]);