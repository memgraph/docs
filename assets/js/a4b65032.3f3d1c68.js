"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[64805],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),f=l(t),m=a,d=f["".concat(p,".").concat(m)]||f[m]||u[m]||i;return t?r.createElement(d,s(s({ref:n},c),{},{components:t})):r.createElement(d,s({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=f;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},72973:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return f}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),s=["components"],o={id:"patterns-in-expressions",title:"Patterns in expressions",sidebar_label:"Patterns in expressions"},p=void 0,l={unversionedId:"differences/patterns-in-expressions",id:"differences/patterns-in-expressions",isDocsHomePage:!1,title:"Patterns in expressions",description:"Patterns in expressions are not yet supported in Memgraph. For example, Memgraph",source:"@site/cypher-manual/differences/patterns-in-expressions.md",sourceDirName:"differences",slug:"/differences/patterns-in-expressions",permalink:"/docs/cypher-manual/differences/patterns-in-expressions",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/differences/patterns-in-expressions.md",tags:[],version:"current",frontMatter:{id:"patterns-in-expressions",title:"Patterns in expressions",sidebar_label:"Patterns in expressions"},sidebar:"cypher_manual",previous:{title:"Differences overview",permalink:"/docs/cypher-manual/differences"}},c=[{value:"What is a Cypher alternative for patterns in expressions?",id:"what-is-a-cypher-alternative-for-patterns-in-expressions",children:[],level:2}],u={toc:c};function f(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Patterns in expressions are not yet supported in Memgraph. For example, Memgraph\ndoesn't support ",(0,i.kt)("inlineCode",{parentName:"p"},"size((n)--\x3e())"),". Most of the time, the same functionalities can\nbe expressed differently in Memgraph using ",(0,i.kt)("inlineCode",{parentName:"p"},"OPTIONAL")," expansions, function calls,\netc."),(0,i.kt)("h2",{id:"what-is-a-cypher-alternative-for-patterns-in-expressions"},"What is a Cypher alternative for patterns in expressions?"),(0,i.kt)("p",null,"For example, the following query is not valid in Memgraph:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n:NodeA)\nWHERE NOT (n)-[]->(:NodeB)\nRETURN n;\n")),(0,i.kt)("p",null,"After executing it, you would receive an error:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},"Not yet implemented: atom expression '(n)-[]->(:NodeB)'\n")),(0,i.kt)("p",null,"The same query can be expressed using the ",(0,i.kt)("inlineCode",{parentName:"p"},"OPTIONAL MATCH")," clause.",(0,i.kt)("br",null),"\nThe clause ",(0,i.kt)("inlineCode",{parentName:"p"},"OPTIONAL MATCH")," behaves the same as a regular MATCH, but when it\nfails to find the pattern, missing parts of the pattern will be filled with\n",(0,i.kt)("inlineCode",{parentName:"p"},"null")," values."),(0,i.kt)("p",null,"The example query would look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cypher"},"OPTIONAL MATCH (n:NodeA)-[]->(m:NodeB)\nWHERE m IS null\nRETURN DISTINCT n\n")))}f.isMDXComponent=!0}}]);