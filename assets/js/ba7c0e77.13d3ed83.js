"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[21773],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=l,y=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(y,o(o({ref:t},p),{},{components:n})):r.createElement(y,o({ref:t},p))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66729:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(87462),l=(n(67294),n(3905));const a={id:"installation",title:"How to install GQLAlchemy",sidebar_label:"Installation"},o=void 0,i={unversionedId:"installation",id:"installation",title:"How to install GQLAlchemy",description:"There are two main ways of installing GQLAlchemy, through package managers such",source:"@site/gqlalchemy/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs/gqlalchemy/installation",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/installation.md",tags:[],version:"current",frontMatter:{id:"installation",title:"How to install GQLAlchemy",sidebar_label:"Installation"},sidebar:"gqlalchemy",previous:{title:"Getting started",permalink:"/docs/gqlalchemy/"},next:{title:"How-to guides overview",permalink:"/docs/gqlalchemy/how-to-guides"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install with Pip",id:"pip",level:2},{value:"Building from source",id:"source",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"There are two main ways of installing GQLAlchemy, through package managers such\nas pip and Poetry, and by building it from source."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"To install GQLAlchemy, you will need the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Python 3.7")," or ",(0,l.kt)("strong",{parentName:"li"},"higher"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"CMake")," - You can download CMake from their ",(0,l.kt)("a",{parentName:"li",href:"https://cmake.org/download/"},"official\nwebsite"),".")),(0,l.kt)("h2",{id:"pip"},"Install with Pip"),(0,l.kt)("p",null,"To install GQLAlchemy with pip, simply run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pip install gqlalchemy\n")),(0,l.kt)("h2",{id:"source"},"Building from source"),(0,l.kt)("p",null,"The project uses Poetry to build GQLAlchemy. To build and run tests, execute the\nfollowing commands: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"poetry install\n")),(0,l.kt)("p",null,"Before running tests, make sure you have an active Memgraph instance, then you\ncan run: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'poetry run pytest . -k "not slow"\n')))}u.isMDXComponent=!0}}]);