"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[71507],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return u}});var r=n(67294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var g=r.createContext({}),m=function(e){var t=r.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=m(e.components);return r.createElement(g.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,i=e.originalType,g=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=m(n),u=c,d=p["".concat(g,".").concat(u)]||p[u]||s[u]||i;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function u(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var i=n.length,a=new Array(i);a[0]=p;var o={};for(var g in t)hasOwnProperty.call(t,g)&&(o[g]=t[g]);o.originalType=e,o.mdxType="string"==typeof e?e:c,a[1]=o;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},53272:function(e,t,n){var r=n(67294),c=n(85350);t.Z=function(e){var t=e.className,n=e.alt,i=e.lightImageSrc,a=e.darkImageSrc,o=(0,c.Z)().isDarkTheme;return r.createElement("img",{className:t,alt:n,src:o?a:i})}},19461:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(67294),c={connectButton:"connectButton_2SLc",connectButton__imgActive:"connectButton__imgActive_3K6i",connectButton__img:"connectButton__img_1287"},i=n(53272);function a(e){var t=e.title,n=e.url,a=e.img,o=e.imgActive,g=e.imgDark,m=e.imgDarkActive;return r.createElement("a",{href:n,className:c.connectButton,style:c},r.createElement(i.Z,{className:c.connectButton__img,lightImageSrc:a,darkImageSrc:g}),r.createElement(i.Z,{lightImageSrc:o,darkImageSrc:m,alt:t,className:c.connectButton__imgActive}))}},42215:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(67294),c="mgContainer_K0l8",i="mgContainer__small_11YL";function a(e){var t=e.size,n=void 0===t?"default":t,a=e.children,o=null;return"small"===n&&(o=i),r.createElement("div",{className:c+" "+o},a)}},53687:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return d},default:function(){return k}});var r=n(87462),c=n(63366),i=(n(67294),n(3905)),a=n(42215),o=n(45255),g=n(44996),m=n(19461),l=["components"],s={id:"connect-to-memgraph",title:"Connect to Memgraph",sidebar_label:"Connection methods",slug:"/connection-methods"},p=void 0,u={unversionedId:"connect-to-memgraph/connect-to-memgraph",id:"version-1.6.0/connect-to-memgraph/connect-to-memgraph",title:"Connect to Memgraph",description:"export default function ConnectToMemgraph() {",source:"@site/memgraph_versioned_docs/version-1.6.0/connect-to-memgraph/connect-to-memgraph.mdx",sourceDirName:"connect-to-memgraph",slug:"/connection-methods",permalink:"/docs/memgraph/1.6.0/connection-methods",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-1.6.0/connect-to-memgraph/connect-to-memgraph.mdx",tags:[],version:"1.6.0",frontMatter:{id:"connect-to-memgraph",title:"Connect to Memgraph",sidebar_label:"Connection methods",slug:"/connection-methods"},sidebar:"version-1.6.0/memgraph",previous:{title:"Overview",permalink:"/docs/memgraph/1.6.0/connect-to-memgraph"},next:{title:"mgconsole",permalink:"/docs/memgraph/1.6.0/connect-to-memgraph/methods/mgconsole"}},d=[],v={toc:d},h=function(){var e="img/connect-page/",t=[{title:"Python",img:(0,g.Z)(e+"python-unselected.png"),imgActive:(0,g.Z)(e+"python-selected.png"),imgDark:(0,g.Z)(e+"python-unselected.png"),imgDarkActive:(0,g.Z)(e+"python-selected.png"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/python")},{title:"C#",img:(0,g.Z)(e+"csharp-unselected.png"),imgActive:(0,g.Z)(e+"csharp-selected.png"),imgDark:(0,g.Z)(e+"csharp-unselected.png"),imgDarkActive:(0,g.Z)(e+"csharp-selected.png"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/c-sharp")},{title:"Rust",img:(0,g.Z)(e+"rust-unselected.png"),imgActive:(0,g.Z)(e+"rust-selected.png"),imgDark:(0,g.Z)(e+"dark/rust-unselected-dm.svg"),imgDarkActive:(0,g.Z)(e+"dark/rust-selected-dm.png"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/rust")},{title:"Java",img:(0,g.Z)(e+"java-unselected.png"),imgActive:(0,g.Z)(e+"java-selected.png"),imgDark:(0,g.Z)(e+"dark/java-unselected-dm.svg"),imgDarkActive:(0,g.Z)(e+"dark/java-selected-dm.svg"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/java")},{title:"GoLang",img:(0,g.Z)(e+"golang-unselected.png"),imgActive:(0,g.Z)(e+"golang-selected.png"),imgDark:(0,g.Z)(e+"dark/golang-unselected-dm.png"),imgDarkActive:(0,g.Z)(e+"dark/golang-selected-dm.png"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/go")},{title:"PHP",img:(0,g.Z)(e+"php-unselected.png"),imgActive:(0,g.Z)(e+"php-selected.png"),imgDark:(0,g.Z)(e+"dark/php-unselected-dm.png"),imgDarkActive:(0,g.Z)(e+"dark/php-selected-dm.png"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/php")},{title:"Ruby",img:(0,g.Z)(e+"ruby-unselected.png"),imgActive:(0,g.Z)(e+"ruby-selected.png"),imgDark:(0,g.Z)(e+"dark/ruby-unselected-dm.png"),imgDarkActive:(0,g.Z)(e+"dark/ruby-selected-dm.svg"),url:"https://github.com/neo4jrb/neo4j"},{title:"JavaScript",img:(0,g.Z)(e+"JS-unselected.png"),imgActive:(0,g.Z)(e+"JS-selected.svg"),imgDark:(0,g.Z)(e+"JS-unselected.png"),imgDarkActive:(0,g.Z)(e+"dark/JS-selected-dm.svg"),url:(0,g.Z)("memgraph/getting-started/connecting-applications/javascript")},{title:"Haskell",img:(0,g.Z)(e+"haskell-unselected.svg"),imgActive:(0,g.Z)(e+"haskell-selected.svg"),imgDark:(0,g.Z)(e+"dark/haskell-unselected-dm.svg"),imgDarkActive:(0,g.Z)(e+"haskell-selected.svg"),url:"https://github.com/zmactep/hasbolt"}],n={title:"MemgraphLab",img:(0,g.Z)(e+"lab-unselected.svg"),imgActive:(0,g.Z)(e+"lab-selected.svg"),imgDark:(0,g.Z)(e+"dark/lab-unselected-dm.svg"),imgDarkActive:(0,g.Z)(e+"dark/lab-selected-dm.svg"),url:(0,g.Z)("memgraph-lab/")},r={title:"mgconsole",img:(0,g.Z)(e+"mgconsole-unselected.svg"),imgActive:(0,g.Z)(e+"mgconsole-selected.svg"),imgDark:(0,g.Z)(e+"dark/mgconsole-unselected-dm.svg"),imgDarkActive:(0,g.Z)(e+"dark/mgconsole-selected-dm.svg"),url:(0,g.Z)("memgraph/getting-started/querying#querying-using-console")};return(0,i.kt)(a.Z,{size:"small"},(0,i.kt)("div",{className:o.Z.connectToMemgraph},(0,i.kt)("section",null,(0,i.kt)("h2",null,"Connect via Driver"),(0,i.kt)("p",null,"Connect to Memgraph from your favorite programming language. We support a wide range of drivers."),(0,i.kt)("div",{className:o.Z.connectToMemgraph__grid},t.map((function(e,t){return(0,i.kt)(m.Z,{key:t,url:e.url,title:e.title,img:e.img,imgActive:e.imgActive,imgDark:e.imgDark,imgDarkActive:e.imgDarkActive})})))),(0,i.kt)("section",null,(0,i.kt)("h2",null,"Connect via Memgraph Lab"),(0,i.kt)("p",null,"Memgraph Lab is an interactive application for querying and visualizing your graphs."),(0,i.kt)(m.Z,{title:n.title,url:n.url,img:n.img,imgActive:n.imgActive,imgDark:n.imgDark,imgDarkActive:n.imgDarkActive})),(0,i.kt)("section",null,(0,i.kt)("h2",null,"Connect via mgconsole"),(0,i.kt)("p",null,"A command-line interface for querying Memgraph."),(0,i.kt)(m.Z,{title:r.title,url:r.url,img:r.img,imgActive:r.imgActive,imgDark:r.imgDark,imgDarkActive:r.imgDarkActive}))))};function k(e){var t=e.components,n=(0,c.Z)(e,l);return(0,i.kt)(h,(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}))}k.isMDXComponent=!0},45255:function(e,t){t.Z={connectToMemgraph:"connectToMemgraph_y18K",connectToMemgraph__grid:"connectToMemgraph__grid_2WPe"}}}]);