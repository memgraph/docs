(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7122],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(n),d=a,g=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},87088:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),i={id:"overview",title:"MAGE - Memgraph Advanced Graph Extensions \ud83d\udd2e",sidebar_label:"Overview",slug:"/"},l={unversionedId:"overview",id:"overview",isDocsHomePage:!1,title:"MAGE - Memgraph Advanced Graph Extensions \ud83d\udd2e",description:"MAGE, also known as Memgraph Advanced Graph Extensions, is an",source:"@site/mage/overview.md",sourceDirName:".",slug:"/",permalink:"/mage/",editUrl:"https://github.com/memgraph/docs/tree/master/mage/overview.md",version:"current",sidebar_label:"Overview",frontMatter:{id:"overview",title:"MAGE - Memgraph Advanced Graph Extensions \ud83d\udd2e",sidebar_label:"Overview",slug:"/"},sidebar:"mage",next:{title:"How to install MAGE?",permalink:"/mage/installation"}},s=[{value:"MAGE query modules",id:"mage-query-modules",children:[]},{value:"Spellbook \ud83d\udcd6 - Currently available modules",id:"spellbook----currently-available-modules",children:[]}],m={toc:s};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"MAGE"),", also known as ",(0,o.kt)("strong",{parentName:"p"},"Memgraph Advanced Graph Extensions"),", is an\nopen-source repository that contains all available query modules written by the\nteam behind Memgraph and its users. You can find and contribute implementations\nof various algorithms in multiple programming languages, all runnable inside\nMemgraph. This project aims to give everyone the tools they need to tackle the\nmost interesting and challenging graph analytics problems. "),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"GitHub repository ")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You can find the official GitHub repository here: ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mage"},"MAGE on GitHub\n")),"."))),(0,o.kt)("h2",{id:"mage-query-modules"},"MAGE query modules"),(0,o.kt)("p",null,"Memgraph introduces the concept of ",(0,o.kt)("strong",{parentName:"p"},"query modules"),", user-defined procedures\nthat extend the ",(0,o.kt)("strong",{parentName:"p"},"Cypher query language"),". These procedures are grouped into\nmodules that can be loaded into Memgraph. You can find more information on query\nmodules in the official ",(0,o.kt)("a",{parentName:"p",href:"https://docs.memgraph.com/memgraph/database-functionalities/query-modules/built-in-query-modules"},"Memgraph\ndocumentation"),"."),(0,o.kt)("h2",{id:"spellbook----currently-available-modules"},"Spellbook \ud83d\udcd6 - Currently available modules"),(0,o.kt)("p",null,"Query modules implemented in ",(0,o.kt)("strong",{parentName:"p"},"Python"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/mage/query-modules/python/nxalg"},"nxalg")),": A module that provides NetworkX\nintegration with Memgraph and implements many NetworkX algorithms.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/mage/query-modules/python/graph-analyzer"},"graph_analyzer")),": This Graph\nAnalyzer query module offers insights about the stored graph or a subgraph."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/mage/query-modules/python/graph-analyzer"},"graph_coloring")),": Algorithm for\nassigning labels to the graph elements subject to certain constraints. In this\nform, it is a way of coloring the graph vertices such that no two adjacent\nvertices are of the same color."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/mage/query-modules/python/distance-calculator"},"distance_calculator")),":\nModule for finding the geographical distance between two points defined with\n'lng' and 'lat' coordinates."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/mage/query-modules/python/tsp"},"tsp")),": An algorithm for finding the shortest\npossible route that visits each vertex exactly once."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/mage/query-modules/python/set-cover"},"set_cover")),": The algorithm for finding\nminimum cost subcollection of sets that covers all elements of a universe.")),(0,o.kt)("p",null,"Query modules implemented in ",(0,o.kt)("strong",{parentName:"p"},"C/C++"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mage/tree/main/cpp/connectivity_module"},"connectivity_module")),":\nA module that finds weakly connected components in a graph."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mage/tree/main/cpp/biconnected_components_module"},"biconnected_components_module")),":\nModule for finding biconnected components of the graph.")))}p.isMDXComponent=!0}}]);