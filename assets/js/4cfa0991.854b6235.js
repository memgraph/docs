"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[45700],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>_});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),y=s(r),_=a,k=y["".concat(i,".").concat(_)]||y[_]||u[_]||p;return r?n.createElement(k,o(o({ref:t},d),{},{components:r})):n.createElement(k,o({ref:t},d))}));function _(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,o=new Array(p);o[0]=y;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<p;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},93703:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const p={sidebar_label:"disk_storage",title:"gqlalchemy.disk_storage"},o=void 0,l={unversionedId:"reference/disk_storage",id:"reference/disk_storage",title:"gqlalchemy.disk_storage",description:"OnDiskPropertyDatabase Objects",source:"@site/gqlalchemy/reference/disk_storage.md",sourceDirName:"reference",slug:"/reference/disk_storage",permalink:"/docs/gqlalchemy/reference/disk_storage",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/gqlalchemy/reference/disk_storage.md",tags:[],version:"current",frontMatter:{sidebar_label:"disk_storage",title:"gqlalchemy.disk_storage"},sidebar:"gqlalchemy",previous:{title:"connection",permalink:"/docs/gqlalchemy/reference/connection"},next:{title:"exceptions",permalink:"/docs/gqlalchemy/reference/exceptions"}},i={},s=[{value:"OnDiskPropertyDatabase Objects",id:"ondiskpropertydatabase-objects",level:2},{value:"save_node_property",id:"save_node_property",level:4},{value:"load_node_property",id:"load_node_property",level:4},{value:"delete_node_property",id:"delete_node_property",level:4},{value:"save_relationship_property",id:"save_relationship_property",level:4},{value:"load_relationship_property",id:"load_relationship_property",level:4},{value:"delete_relationship_property",id:"delete_relationship_property",level:4},{value:"drop_database",id:"drop_database",level:4},{value:"SQLitePropertyDatabase Objects",id:"sqlitepropertydatabase-objects",level:2},{value:"execute_query",id:"execute_query",level:4},{value:"drop_database",id:"drop_database-1",level:4},{value:"save_node_property",id:"save_node_property-1",level:4},{value:"load_node_property",id:"load_node_property-1",level:4},{value:"delete_node_property",id:"delete_node_property-1",level:4},{value:"save_relationship_property",id:"save_relationship_property-1",level:4},{value:"load_relationship_property",id:"load_relationship_property-1",level:4},{value:"delete_relationship_property",id:"delete_relationship_property-1",level:4}],d={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ondiskpropertydatabase-objects"},"OnDiskPropertyDatabase Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class OnDiskPropertyDatabase(ABC)\n")),(0,a.kt)("p",null,"An abstract class for implementing on-disk storage features with specific databases."),(0,a.kt)("h4",{id:"save_node_property"},"save","_","node","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def save_node_property(node_id: int, property_name: str,\n                       property_value: str) -> None\n")),(0,a.kt)("p",null,"Saves a node property to an on disk database."),(0,a.kt)("h4",{id:"load_node_property"},"load","_","node","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def load_node_property(node_id: int, property_name: str,\n                       property_value: str) -> Optional[str]\n")),(0,a.kt)("p",null,"Loads a node property from an on disk database."),(0,a.kt)("h4",{id:"delete_node_property"},"delete","_","node","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def delete_node_property(node_id: int, property_name: str,\n                         property_value: str) -> None\n")),(0,a.kt)("p",null,"Deletes a node property from an on disk database."),(0,a.kt)("h4",{id:"save_relationship_property"},"save","_","relationship","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def save_relationship_property(relationship_id: int, property_name: str,\n                               property_value: str) -> None\n")),(0,a.kt)("p",null,"Saves a relationship property to an on disk database."),(0,a.kt)("h4",{id:"load_relationship_property"},"load","_","relationship","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def load_relationship_property(relationship_id: int, property_name: str,\n                               property_value: str) -> Optional[str]\n")),(0,a.kt)("p",null,"Loads a relationship property from an on disk database."),(0,a.kt)("h4",{id:"delete_relationship_property"},"delete","_","relationship","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def delete_relationship_property(node_id: int, property_name: str,\n                                 property_value: str) -> None\n")),(0,a.kt)("p",null,"Deletes a node property from an on disk database."),(0,a.kt)("h4",{id:"drop_database"},"drop","_","database"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def drop_database() -> None\n")),(0,a.kt)("p",null,"Deletes all entries from the on disk database."),(0,a.kt)("h2",{id:"sqlitepropertydatabase-objects"},"SQLitePropertyDatabase Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class SQLitePropertyDatabase(OnDiskPropertyDatabase)\n")),(0,a.kt)("h4",{id:"execute_query"},"execute","_","query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def execute_query(query: str) -> List[str]\n")),(0,a.kt)("p",null,"Executes an SQL query on the on disk property database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"query")," - A string representing an SQL query.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("p",null,"  A list of strings representing the results of the query."),(0,a.kt)("h4",{id:"drop_database-1"},"drop","_","database"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def drop_database() -> None\n")),(0,a.kt)("p",null,"Deletes all properties in the database."),(0,a.kt)("h4",{id:"save_node_property-1"},"save","_","node","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def save_node_property(node_id: int, property_name: str,\n                       property_value: str) -> None\n")),(0,a.kt)("p",null,"Saves a node property to an on disk database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"node_id")," - An integer representing the internal id of the node."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_name")," - A string representing the name of the property."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_value")," - A string representing the value of the property.")),(0,a.kt)("h4",{id:"load_node_property-1"},"load","_","node","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def load_node_property(node_id: int, property_name: str) -> Optional[str]\n")),(0,a.kt)("p",null,"Loads a node property from an on disk database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"node_id")," - An integer representing the internal id of the node."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_name")," - A string representing the name of the property.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("p",null,"  An optional string representing the property value."),(0,a.kt)("h4",{id:"delete_node_property-1"},"delete","_","node","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def delete_node_property(node_id: int, property_name: str) -> None\n")),(0,a.kt)("p",null,"Deletes a node property from an on disk database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"node_id")," - An integer representing the internal id of the node."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_name")," - A string representing the name of the property.")),(0,a.kt)("h4",{id:"save_relationship_property-1"},"save","_","relationship","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def save_relationship_property(relationship_id: int, property_name: str,\n                               property_value: str) -> None\n")),(0,a.kt)("p",null,"Saves a relationship property to an on disk database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"relationship_id")," - An integer representing the internal id of the relationship."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_name")," - A string representing the name of the property."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_value")," - A string representing the value of the property.")),(0,a.kt)("h4",{id:"load_relationship_property-1"},"load","_","relationship","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def load_relationship_property(relationship_id: int,\n                               property_name: str) -> Optional[str]\n")),(0,a.kt)("p",null,"Loads a relationship property from an on disk database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"relationship_id")," - An integer representing the internal id of the relationship."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_name")," - A string representing the name of the property.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("p",null,"  An optional string representing the property value."),(0,a.kt)("h4",{id:"delete_relationship_property-1"},"delete","_","relationship","_","property"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def delete_relationship_property(relationship_id: int,\n                                 property_name: str) -> None\n")),(0,a.kt)("p",null,"Deletes a node property from an on disk database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"relationship_id")," - An integer representing the internal id of the relationship."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"property_name")," - A string representing the name of the property.")))}u.isMDXComponent=!0}}]);