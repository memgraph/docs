"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[12358],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,b=u["".concat(d,".").concat(m)]||u[m]||s[m]||r;return n?a.createElement(b,l(l({ref:t},p),{},{components:n})):a.createElement(b,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},72250:(e,t,n)=>{n.r(t),n.d(t,{Highlight:()=>u,assets:()=>p,contentTitle:()=>d,default:()=>b,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(87462),o=(n(67294),n(3905)),r=n(65488),l=n(85162);const i={id:"biconnected-components",title:"biconnected_components",sidebar_label:"biconnected_components"},d=void 0,c={unversionedId:"query-modules/cpp/biconnected-components",id:"query-modules/cpp/biconnected-components",title:"biconnected_components",description:"docs-source",source:"@site/mage/query-modules/cpp/biconnected_components.md",sourceDirName:"query-modules/cpp",slug:"/query-modules/cpp/biconnected-components",permalink:"/docs/mage/query-modules/cpp/biconnected-components",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/mage/query-modules/cpp/biconnected_components.md",tags:[],version:"current",frontMatter:{id:"biconnected-components",title:"biconnected_components",sidebar_label:"biconnected_components"},sidebar:"mage",previous:{title:"betweenness_centrality_online",permalink:"/docs/mage/query-modules/cpp/betweenness-centrality-online"},next:{title:"bipartite_matching",permalink:"/docs/mage/query-modules/cpp/bipartite-matching"}},p={},s=[{value:"Abstract",id:"abstract",level:2},{value:"Procedures",id:"procedures",level:2},{value:"<code>get()</code>",id:"get",level:3},{value:"Output:",id:"output",level:4},{value:"Usage:",id:"usage",level:4},{value:"Example",id:"example",level:2}],u=e=>{let{children:t,color:n}=e;return(0,o.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},m={toc:s,Highlight:u};function b(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage/blob/main/cpp/biconnected_components_module/biconnected_components_module.cpp"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-biconnected_components-FB6E00?logo=github&style=for-the-badge",alt:"docs-source"}))),(0,o.kt)("h2",{id:"abstract"},"Abstract"),(0,o.kt)("p",null,"Finding biconnected components means finding a maximal biconnected subgraph. Subgraph is biconnected if:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It is possible to go from each node to another within a biconnected subgraph"),(0,o.kt)("li",{parentName:"ul"},"First scenario remains true even after removing any vertex in the subgraph")),(0,o.kt)("p",null,"The algorithm works by finding articulation points, and then traversing from these articulation points toward other nodes, which all together form one biconnected component."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Trait"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Module type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(u,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"algorithm")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Implementation")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(u,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"C++")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Graph direction")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(u,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"undirected")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Edge weights")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(u,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"unweighted")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Parallelism")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(u,{color:"#FB6E00",mdxType:"Highlight"},(0,o.kt)("strong",{parentName:"td"},"sequential")))))),(0,o.kt)("h2",{id:"procedures"},"Procedures"),(0,o.kt)("h3",{id:"get"},(0,o.kt)("inlineCode",{parentName:"h3"},"get()")),(0,o.kt)("h4",{id:"output"},"Output:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bcc_id")," \u27a1 Biconnected component identifier. There is no order of nodes within one biconnected component."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"node_from")," \u27a1 First node of an edge contained in biconnected component."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"node_to")," \u27a1 Second node of an edge contained in biconnected component")),(0,o.kt)("h4",{id:"usage"},"Usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"CALL biconnected_components.get()\nYIELD bcc_id, node_from, node_to;\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(r.Z,{groupId:"example",defaultValue:"visualization",values:[{label:"Step 1: Input graph",value:"visualization"},{label:"Step 2: Cypher load commands",value:"cypher"},{label:"Step 3: Running command",value:"run"},{label:"Step 4: Results",value:"result"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"visualization",mdxType:"TabItem"},(0,o.kt)("img",{src:n(6786).Z})),(0,o.kt)(l.Z,{value:"cypher",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"MERGE (a:Node {id: 0}) MERGE (b:Node {id: 1}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 1}) MERGE (b:Node {id: 2}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 1}) MERGE (b:Node {id: 3}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 2}) MERGE (b:Node {id: 3}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 2}) MERGE (b:Node {id: 4}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 3}) MERGE (b:Node {id: 4}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 1}) MERGE (b:Node {id: 5}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 0}) MERGE (b:Node {id: 6}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 5}) MERGE (b:Node {id: 6}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 5}) MERGE (b:Node {id: 7}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 5}) MERGE (b:Node {id: 8}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 7}) MERGE (b:Node {id: 8}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 8}) MERGE (b:Node {id: 9}) CREATE (a)-[:RELATION]->(b);\nMERGE (a:Node {id: 10}) MERGE (b:Node {id: 11}) CREATE (a)-[:RELATION]->(b);\n"))),(0,o.kt)(l.Z,{value:"run",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cypher"},"CALL biconnected_components.get()\nYIELD bcc_id, node_from, node_to\nWITH bcc_id, node_from, node_to\nMATCH (node_from)-[edge]-(node_to)\nRETURN bcc_id, edge, node_from, node_to;\n"))),(0,o.kt)(l.Z,{value:"result",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"+------------------+------------------+------------------+------------------+\n| bcc_id           | edge             | node_from        | node_to          |\n+------------------+------------------+------------------+------------------+\n| 0                | [:RELATION]      | (:Node {id: 2})  | (:Node {id: 4})  |\n| 0                | [:RELATION]      | (:Node {id: 3})  | (:Node {id: 4})  |\n| 0                | [:RELATION]      | (:Node {id: 1})  | (:Node {id: 3})  |\n| 0                | [:RELATION]      | (:Node {id: 2})  | (:Node {id: 3})  |\n| 0                | [:RELATION]      | (:Node {id: 1})  | (:Node {id: 2})  |\n| 1                | [:RELATION]      | (:Node {id: 8})  | (:Node {id: 9})  |\n| 2                | [:RELATION]      | (:Node {id: 5})  | (:Node {id: 8})  |\n| 2                | [:RELATION]      | (:Node {id: 7})  | (:Node {id: 8})  |\n| 2                | [:RELATION]      | (:Node {id: 5})  | (:Node {id: 7})  |\n| 3                | [:RELATION]      | (:Node {id: 0})  | (:Node {id: 6})  |\n| 3                | [:RELATION]      | (:Node {id: 5})  | (:Node {id: 6})  |\n| 3                | [:RELATION]      | (:Node {id: 1})  | (:Node {id: 5})  |\n| 3                | [:RELATION]      | (:Node {id: 0})  | (:Node {id: 1})  |\n| 4                | [:RELATION]      | (:Node {id: 10}) | (:Node {id: 11}) |\n+------------------+------------------+------------------+------------------+\n")))))}b.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),o=n(86010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),o=n(67294),r=n(86010),l=n(72389),i=n(67392),d=n(7094),c=n(12466);const p="tabList__CuJ",s="tabItem_LNqP";function u(e){var t;const{lazy:n,block:l,defaultValue:u,values:m,groupId:b,className:E}=e,N=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??N.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),h=(0,i.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===u?u:u??(null==(t=N.find((e=>e.props.default)))?void 0:t.props.value)??N[0].props.value;if(null!==f&&!g.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:v}=(0,d.U)(),[y,T]=(0,o.useState)(f),R=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=b){const e=k[b];null!=e&&e!==y&&g.some((t=>t.value===e))&&T(e)}const A=e=>{const t=e.currentTarget,n=R.indexOf(t),a=g[n].value;a!==y&&(O(t),T(a),null!=b&&v(b,String(a)))},I=e=>{var t;let n=null;switch(e.key){case"Enter":A(e);break;case"ArrowRight":{const t=R.indexOf(e.currentTarget)+1;n=R[t]??R[0];break}case"ArrowLeft":{const t=R.indexOf(e.currentTarget)-1;n=R[t]??R[R.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",p)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},E)},g.map((e=>{let{value:t,label:n,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>R.push(e),onKeyDown:I,onClick:A},l,{className:(0,r.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":y===t})}),n??t)}))),n?(0,o.cloneElement)(N.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},N.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function m(e){const t=(0,l.Z)();return o.createElement(u,(0,a.Z)({key:String(t)},e))}},6786:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/biconnected-components-1-4a8b42aeb2149f9f31d1392e55ef1871.png"}}]);