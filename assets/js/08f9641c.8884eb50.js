"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[91823],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var i=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=i.createContext({}),s=function(e){var t=i.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),y=a,m=u["".concat(o,".").concat(y)]||u[y]||d[y]||n;return r?i.createElement(m,l(l({ref:t},c),{},{components:r})):i.createElement(m,l({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var s=2;s<n;s++)l[s]=r[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},46062:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>n,metadata:()=>p,toc:()=>s});var i=r(87462),a=(r(67294),r(3905));const n={id:"gss-viewstyle-map-directive",title:"Graph Style Script @ViewStyle.Map directive properties",sidebar_label:"ViewStyle.Map directive properties"},l=void 0,p={unversionedId:"style-script/gss-viewstyle-map-directive",id:"style-script/gss-viewstyle-map-directive",title:"Graph Style Script @ViewStyle.Map directive properties",description:"@ViewStyle.Map directive is a subset of @ViewStyle because it defines",source:"@site/lab/style-script/gss-graphstyle-map-directive.md",sourceDirName:"style-script",slug:"/style-script/gss-viewstyle-map-directive",permalink:"/docs/memgraph-lab/style-script/gss-viewstyle-map-directive",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/lab/style-script/gss-graphstyle-map-directive.md",tags:[],version:"current",frontMatter:{id:"gss-viewstyle-map-directive",title:"Graph Style Script @ViewStyle.Map directive properties",sidebar_label:"ViewStyle.Map directive properties"}},o={},s=[{value:"<code>@ViewStyle.Map</code>",id:"viewstylemap",level:2},{value:"1. <code>tile-layer: string: &quot;detailed&quot; | &quot;light&quot; | &quot;dark&quot; | &quot;basic&quot; | &quot;satellite&quot;</code>",id:"1-tile-layer-string-detailed--light--dark--basic--satellite",level:3}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@ViewStyle.Map")," directive is a subset of ",(0,a.kt)("inlineCode",{parentName:"p"},"@ViewStyle")," because it defines\nadditional style properties for a graph view when there is a map background.\nStyle properties of the ",(0,a.kt)("inlineCode",{parentName:"p"},"@ViewStyle.Map")," directive are used to style the\nbackground map."),(0,a.kt)("h2",{id:"viewstylemap"},(0,a.kt)("inlineCode",{parentName:"h2"},"@ViewStyle.Map")),(0,a.kt)("p",null,"Here is the list of all properties that can be defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"@ViewStyle.Map"),"\ndirective, along with their expected types."),(0,a.kt)("h3",{id:"1-tile-layer-string-detailed--light--dark--basic--satellite"},"1. ",(0,a.kt)("inlineCode",{parentName:"h3"},'tile-layer: string: "detailed" | "light" | "dark" | "basic" | "satellite"')),(0,a.kt)("p",null,"Sets the map tile for the map background. The default map tile is ",(0,a.kt)("inlineCode",{parentName:"p"},'"light"'),"."),(0,a.kt)("p",null,"Examples:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'tile-layer: "dark"')," sets the map tile to be type ",(0,a.kt)("inlineCode",{parentName:"li"},'"dark"'),".")))}d.isMDXComponent=!0}}]);