"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74442],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),c=a,g=u["".concat(p,".").concat(c)]||u[c]||d[c]||o;return n?r.createElement(g,i(i({ref:t},m),{},{components:n})):r.createElement(g,i({ref:t},m))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},33750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={id:"source",title:"Install MAGE on Linux from source",sidebar_label:"Build from source on Linux"},i=void 0,l={unversionedId:"installation/source",id:"installation/source",title:"Install MAGE on Linux from source",description:"This step is only suitable for Linux users as you need to [download and install",source:"@site/mage/installation/source.md",sourceDirName:"installation",slug:"/installation/source",permalink:"/docs/mage/installation/source",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/mage/installation/source.md",tags:[],version:"current",frontMatter:{id:"source",title:"Install MAGE on Linux from source",sidebar_label:"Build from source on Linux"},sidebar:"mage",previous:{title:"Docker build",permalink:"/docs/mage/installation/docker-build"},next:{title:"MAGE \xd7 NVIDIA cuGraph",permalink:"/docs/mage/installation/cugraph"}},p={},s=[{value:"Installing MAGE",id:"installing-mage",level:2},{value:"Prerequisits",id:"prerequisits",level:3},{value:"Installation process",id:"installation-process",level:3},{value:"Advanced configuration",id:"advanced-configuration",level:2},{value:"1. Set a different <code>query_modules</code> directory",id:"1-set-a-different-query_modules-directory",level:3}],m={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This step is only suitable for Linux users as you need to ",(0,a.kt)("a",{parentName:"p",href:"https://memgraph.com/download"},"download and install\na Linux based Memgraph package"),". To build from\nsource, you will need ",(0,a.kt)("strong",{parentName:"p"},"Python3"),", ",(0,a.kt)("strong",{parentName:"p"},"Make"),", ",(0,a.kt)("strong",{parentName:"p"},"CMake"),", ",(0,a.kt)("strong",{parentName:"p"},"Clang"),", ",(0,a.kt)("strong",{parentName:"p"},"UUID"),"\nand ",(0,a.kt)("strong",{parentName:"p"},"Rust"),"."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You should not build MAGE from source and import the modules into Memgraph\nrunning in a Docker container. You would need to build MAGE inside the same\ncontainer where Memgraph is running due to the possibility of different\narchitectures on your local machine and the Docker container. If you need to\nwork with Docker, we have prepared a Docker image equipped for local\ndevelopment. Make sure to check the ",(0,a.kt)("a",{parentName:"p",href:"/docs/mage/installation/docker-build"},"Docker\nbuild")," or ",(0,a.kt)("a",{parentName:"p",href:"/docs/mage/installation/docker-hub"},"Docker\nHub")," guides.")),(0,a.kt)("h2",{id:"installing-mage"},"Installing MAGE"),(0,a.kt)("h3",{id:"prerequisits"},"Prerequisits"),(0,a.kt)("p",null,"To install MAGE from source, first set up the machine by running the following commands: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update && apt-get install -y \\\n    libcurl4        `memgraph` \\\n    libpython${PY_VERSION}   `memgraph` \\\n    libssl-dev       `memgraph` \\\n    openssl         `memgraph` \\\n    build-essential `mage-memgraph` \\\n    cmake           `mage-memgraph` \\\n    curl            `mage-memgraph` \\\n    g++             `mage-memgraph` \\\n    python3         `mage-memgraph` \\\n    python3-pip     `mage-memgraph` \\\n    python3-setuptools     `mage-memgraph` \\\n    python3-dev     `mage-memgraph` \\\n    clang           `mage-memgraph` \\\n    git             `mage-memgraph` \\\n    --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n")),(0,a.kt)("h3",{id:"installation-process"},"Installation process"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1.")," Download the MAGE source code from\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/memgraph/mage"},"GitHub"))," and run the ",(0,a.kt)("inlineCode",{parentName:"p"},"setup")," script. "),(0,a.kt)("p",null,"The script will generate a ",(0,a.kt)("inlineCode",{parentName:"p"},"dist")," directory with all the needed files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"python3 setup build -p /usr/lib/memgraph/query_modules\n")),(0,a.kt)("p",null,"The command above will also copy the contents of the newly created ",(0,a.kt)("inlineCode",{parentName:"p"},"dist")," directory to\n",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules"),".  Memgraph loads query modules from this directory. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"If something isn't installed properly, the ",(0,a.kt)("inlineCode",{parentName:"strong"},"setup")," script will stop the installation process. If you have any\nquestions, contact us on ",(0,a.kt)("a",{parentName:"strong",href:"https://discord.gg/memgraph"},"Discord"),".")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Be sure you cloned the ",(0,a.kt)("inlineCode",{parentName:"p"},"mage")," GitHub repository using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--recurse-submodules")," flag since it has incorporated Memgraph inside:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone --recurse-submodules https://github.com/memgraph/mage.git\n")),(0,a.kt)("p",{parentName:"admonition"},"if you didn't, you can run following command to update submodules:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git submodule update --init --recursive\n"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2.")," Start Memgraph and enjoy ",(0,a.kt)("strong",{parentName:"p"},"MAGE"),"!"),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Query modules are loaded into Memgraph on startup, so if your instance\nwas already running you will need to execute the following query inside one of\n",(0,a.kt)("a",{parentName:"p",href:"https://memgraph.com/docs/memgraph/connect-to-memgraph"},"querying platforms")," to\nload them:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"CALL mg.load_all();\n")),(0,a.kt)("p",{parentName:"admonition"},"If your changes are not loaded, make sure to restart the instance by running\n",(0,a.kt)("inlineCode",{parentName:"p"},"systemctl stop memgraph")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"systemctl start memgraph"),"."),(0,a.kt)("p",{parentName:"admonition"},"If you want to find out more about loading query modules, visit ",(0,a.kt)("a",{parentName:"p",href:"/docs/mage/usage/loading-modules"},"this\nguide"),".")),(0,a.kt)("h2",{id:"advanced-configuration"},"Advanced configuration"),(0,a.kt)("h3",{id:"1-set-a-different-query_modules-directory"},"1. Set a different ",(0,a.kt)("inlineCode",{parentName:"h3"},"query_modules")," directory"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"setup")," script can set your local ",(0,a.kt)("inlineCode",{parentName:"p"},"mage/dist")," directory or ",(0,a.kt)("strong",{parentName:"p"},"any")," other\ndirectory as the ",(0,a.kt)("strong",{parentName:"p"},"default")," one in the Memgraph configuration file (flag\n",(0,a.kt)("inlineCode",{parentName:"p"},"--query-modules-directory")," defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/memgraph/memgraph.conf"),"). There are\na few options:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1.")," Set ",(0,a.kt)("inlineCode",{parentName:"p"},"<your_directory>")," as the ",(0,a.kt)("strong",{parentName:"p"},"default")," one:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 setup modules_storage -p <your_directory>\n")),(0,a.kt)("p",null,"This way Memgraph will be looking for query modules inside ",(0,a.kt)("inlineCode",{parentName:"p"},"<your_directory>"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Don't forget to copy the aforementioned files from ",(0,a.kt)("inlineCode",{parentName:"p"},"mage/dist")," to\n",(0,a.kt)("inlineCode",{parentName:"p"},"<your_directory>"),".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2.")," Set ",(0,a.kt)("inlineCode",{parentName:"p"},"/mage/dist")," as the ",(0,a.kt)("strong",{parentName:"p"},"default")," one:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 setup modules_storage\n")),(0,a.kt)("p",null,"If the ",(0,a.kt)("strong",{parentName:"p"},"default")," directory is ",(0,a.kt)("inlineCode",{parentName:"p"},"mage/dist")," then you don't need to copy ",(0,a.kt)("inlineCode",{parentName:"p"},"*.so"),"\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"*.py")," files from the ",(0,a.kt)("inlineCode",{parentName:"p"},"mage/dist")," directory\nto",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/lib/memgraph/query_modules")," every time you run ",(0,a.kt)("inlineCode",{parentName:"p"},"build"),"."))}d.isMDXComponent=!0}}]);