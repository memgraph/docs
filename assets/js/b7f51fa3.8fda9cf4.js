"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[23080],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return s}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),m=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=m(e.components);return n.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),h=m(t),s=a,g=h["".concat(c,".").concat(s)]||h[s]||l[s]||o;return t?n.createElement(g,i(i({ref:r},u),{},{components:t})):n.createElement(g,i({ref:r},u))}));function s(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=h;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var m=2;m<o;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},52364:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return s},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return l}});var n=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],p={id:"working-with-memgraph",title:"Working with Memgraph",sidebar_label:"Working with Memgraph"},c=void 0,m={unversionedId:"working-with-memgraph",id:"working-with-memgraph",title:"Working with Memgraph",description:"What is Memgraph",source:"@site/cypher-manual/working-with-memgraph.md",sourceDirName:".",slug:"/working-with-memgraph",permalink:"/docs/cypher-manual/working-with-memgraph",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/working-with-memgraph.md",tags:[],version:"current",frontMatter:{id:"working-with-memgraph",title:"Working with Memgraph",sidebar_label:"Working with Memgraph"},sidebar:"cypher_manual",previous:{title:"Differences in Cypher implementations",permalink:"/docs/cypher-manual/differences"},next:{title:"Import data",permalink:"/docs/cypher-manual/import-data"}},u={},l=[{value:"What is Memgraph",id:"what-is-memgraph",level:2},{value:"How to run a query",id:"how-to-run-a-query",level:2}],h={toc:l};function s(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},h,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"what-is-memgraph"},"What is Memgraph"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://memgraph.com/"},"Memgraph")," is the platform for graph computation on\nstreaming data. It's an end-to-end platform designed to solve complex graph\nproblems in real-time and accelerate graph application development."),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"https://memgraph.com/docs/memgraph/installation"},"install and run\nMemgraph")," using Docker on\nWindows and macOS, or natively on Linux and WSL. If you use Docker, Memgraph\nPlatform is the recommended Docker image. The Memgraph Platform Docker image\ncontains everything you need to start as quickly as possible: MemgraphDB,\nMemgraph Lab, mgconsole and MAGE."),(0,o.kt)("h2",{id:"how-to-run-a-query"},"How to run a query"),(0,o.kt)("p",null,"Memgraph uses ",(0,o.kt)("a",{parentName:"p",href:"/docs/cypher-manual/cypher-query-language"},"Cypher query language")," to work with\ndata. If you like command line tools you can use\n",(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph/connect-to-memgraph/mgconsole"},"mgconsole")," to execute Cypher\nqueries. If you are a fan of graphical interfaces, you can use ",(0,o.kt)("a",{parentName:"p",href:"/docs/memgraph-lab"},"Memgraph\nLab"),". On top of the execution of queries, with Memgraph Lab,\nyou can import, explore and visualize your data."))}s.isMDXComponent=!0}}]);