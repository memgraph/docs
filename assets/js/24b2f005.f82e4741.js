"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[33543],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,k=c["".concat(p,".").concat(u)]||c[u]||d[u]||l;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>T});var n=a(87462),r=a(67294),l=a(86010),i=a(12466),o=a(16550),p=a(91980),m=a(67392),s=a(50012);function d(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function c(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,m.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function u(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,p._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=c(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[p,m]=k({queryString:a,groupId:n}),[d,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,s.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),N=(()=>{const e=p??d;return u({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{N&&o(N)}),[N]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),m(e),h(e)}),[m,h,l]),tabValues:l}}var N=a(72389);const y="tabList__CuJ",g="tabItem_LNqP";function b(e){let{className:t,block:a,selectedValue:o,selectValue:p,tabValues:m}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),c=e=>{const t=e.currentTarget,a=s.indexOf(t),n=m[a].value;n!==o&&(d(t),p(n))},u=e=>{var t;let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;a=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;a=s[t]??s[s.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},m.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>s.push(e),onKeyDown:u,onClick:c},i,{className:(0,l.Z)("tabs__item",g,null==i?void 0:i.className,{"tabs__item--active":o===t})}),a??t)})))}function f(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",y)},r.createElement(b,(0,n.Z)({},e,t)),r.createElement(f,(0,n.Z)({},e,t)))}function T(e){const t=(0,N.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},40044:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>d});var n=a(87462),r=(a(67294),a(3905)),l=a(74866),i=a(85162);const o={id:"data-types",title:"Data types",sidebar_label:"Data types"},p=void 0,m={unversionedId:"reference-guide/data-types",id:"reference-guide/data-types",title:"Data types",description:"Since Memgraph is a graph database management system, data is stored in the form",source:"@site/docs/reference-guide/data-types.md",sourceDirName:"reference-guide",slug:"/reference-guide/data-types",permalink:"/docs/memgraph/next/reference-guide/data-types",draft:!1,editUrl:"https://github.com/memgraph/docs/tree/master/docs/reference-guide/data-types.md",tags:[],version:"current",frontMatter:{id:"data-types",title:"Data types",sidebar_label:"Data types"},sidebar:"memgraph",previous:{title:"Data durability and backup",permalink:"/docs/memgraph/next/reference-guide/backup"},next:{title:"Docker",permalink:"/docs/memgraph/next/reference-guide/deployment/docker"}},s={},d=[{value:"Node labels &amp; relationship types",id:"node-labels--relationship-types",level:2},{value:"Property types",id:"property-types",level:2},{value:"Maps",id:"maps",level:2},{value:"Literal maps",id:"literal-maps",level:3},{value:"Map projection",id:"map-projection",level:3},{value:"Examples",id:"examples",level:4},{value:"Temporal types",id:"temporal-types",level:2},{value:"Duration",id:"duration",level:3},{value:"Date",id:"date",level:3},{value:"LocalTime",id:"localtime",level:3},{value:"LocalDateTime",id:"localdatetime",level:3},{value:"Temporal types arithmetic",id:"temporal-types-arithmetic",level:2},{value:"Procedures API",id:"procedures-api",level:2}],c={toc:d};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Since Memgraph is a graph database management system, data is stored in the form\nof graph elements: nodes and relationships. Each graph element can contain\nvarious types of data. This page describes which data types are supported in\nMemgraph."),(0,r.kt)("h2",{id:"node-labels--relationship-types"},"Node labels & relationship types"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nodes")," can have labels that are used to label or group nodes. A label is of\nthe type ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),", and each node can have none or multiple labels. Labels can be\nchanged at any time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Relationships")," have a type, also represented in the form of a ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),".\nUnlike nodes, relationships must have exactly one relationship type and once it\nis set upon creation, it can never be modified again."),(0,r.kt)("h2",{id:"property-types"},"Property types"),(0,r.kt)("p",null,"Nodes and relationships can store various properties. Properties are similar to\nmappings or tables containing property names and their accompanying values.\nProperty names are represented as text, while values can be of different types."),(0,r.kt)("p",null,"Each property can store a single value, and it is not possible to have multiple\nproperties with the same name on a single graph element. But, the same property\nnames can be found across multiple graph elements."),(0,r.kt)("p",null,"Also, there are no restrictions on the number of properties that can be stored\nin a single graph element. The only restriction is that the values must be of\nthe supported types. Below is a table of supported data types."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Null")),(0,r.kt)("td",{parentName:"tr",align:null},"Property has no value, which is the same as if the property doesn't exist.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A character string (text).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"A boolean value, either ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"An integer number.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Float")),(0,r.kt)("td",{parentName:"tr",align:null},"A floating-point number (real number).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"List")),(0,r.kt)("td",{parentName:"tr",align:null},"A list containing any number of property values of any supported type under a single property name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Map")),(0,r.kt)("td",{parentName:"tr",align:null},"A mapping of string keys to values of any supported type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration"))),(0,r.kt)("td",{parentName:"tr",align:null},"A period of time.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#date"},(0,r.kt)("inlineCode",{parentName:"a"},"Date"))),(0,r.kt)("td",{parentName:"tr",align:null},"A date with year, month, and day.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#localtime"},(0,r.kt)("inlineCode",{parentName:"a"},"LocalTime"))),(0,r.kt)("td",{parentName:"tr",align:null},"Time without the time zone.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#localdatetime"},(0,r.kt)("inlineCode",{parentName:"a"},"LocalDateTime"))),(0,r.kt)("td",{parentName:"tr",align:null},"Date and time without the time zone.")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you want to modify ",(0,r.kt)("inlineCode",{parentName:"p"},"List")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Map")," property values, you need to replace them\nentirely."),(0,r.kt)("p",{parentName:"admonition"},"The following queries are valid:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CREATE (:Node {property: [1, 2, 3]});\nCREATE (:Node {property: {key: "value"}});\n')),(0,r.kt)("p",{parentName:"admonition"},"But these are not:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'MATCH (n:Node) SET n.property[0] = 0;\nMATCH (n:Node) SET n.property.key = "other value";\n'))),(0,r.kt)("h2",{id:"maps"},"Maps"),(0,r.kt)("p",null,"The Cypher query language supports constructing and working with map values."),(0,r.kt)("h3",{id:"literal-maps"},"Literal maps"),(0,r.kt)("p",null,"It is possible to explicitly construct maps by stating key-value pairs:"),(0,r.kt)(l.Z,{groupId:"literal_map",defaultValue:"cypher",values:[{label:"Query",value:"cypher"},{label:"Result",value:"result"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"cypher",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"RETURN {key: 'Value', listKey: [{inner: 'Map1'}, {inner: 'Map2'}]}\n"))),(0,r.kt)(i.Z,{value:"result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 {key: \'Value\', listKey: [{inner: \'Map1\'}, {inner: \'Map2\'}]} \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 {Map} 2 properties                                          \u2502\n\u2502 {                                                           \u2502\n\u2502   "key": "Value",                                           \u2502\n\u2502   "listKey": [                                              \u2502\n\u2502       {                                                     \u2502\n\u2502         "inner": "Map1"                                     \u2502\n\u2502       },                                                    \u2502\n\u2502       {                                                     \u2502\n\u2502         "inner": "Map2"                                     \u2502\n\u2502       }                                                     \u2502\n\u2502   ]                                                         \u2502\n\u2502 }                                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')))),(0,r.kt)("h3",{id:"map-projection"},"Map projection"),(0,r.kt)("p",null,"Cypher\u2019s ",(0,r.kt)("strong",{parentName:"p"},"map projection")," syntax allows for easily constructing map\nprojections from nodes, relationships, other map values, and all other values\nthat have properties."),(0,r.kt)("p",null,"A map projection begins with the variable bound to the graph entity that\u2019s to\nbe projected from, and contains a body of comma-separated map elements enclosed\nby ",(0,r.kt)("inlineCode",{parentName:"p"},"{")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"}"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"map_variable {map_element, [, ...n]}\n")),(0,r.kt)("p",null,"A map element projects one or more key-value pairs to the map projection. There\nare four different types of map projection elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Property selector: Projects the property name as the key, and the value of\n",(0,r.kt)("inlineCode",{parentName:"li"},"map_variable.property")," as the value for the projection."),(0,r.kt)("li",{parentName:"ul"},"All-properties selector: Projects all key-value pairs from the ",(0,r.kt)("inlineCode",{parentName:"li"},"map_variable"),"\nvalue."),(0,r.kt)("li",{parentName:"ul"},"Literal entry: This is a key-value pair, with the value being an arbitrary\nexpression: ",(0,r.kt)("inlineCode",{parentName:"li"},"key: <expression>"),"."),(0,r.kt)("li",{parentName:"ul"},"Variable selector: Projects a variable: the variable name is the key, and the\nvalue it is pointing to is the value of the projection: ",(0,r.kt)("inlineCode",{parentName:"li"},"<variable>"),".")),(0,r.kt)("p",null,"The following conditions apply:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"map_variable")," points to a null value, its projected values will be null."),(0,r.kt)("li",{parentName:"ul"},"As with literal maps, key names must be strings.")),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The following graph is used by all examples here:"),(0,r.kt)(l.Z,{groupId:"example",defaultValue:"visualization",values:[{label:"Graph",value:"visualization"},{label:"Load queries",value:"cypher"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"visualization",mdxType:"TabItem"},(0,r.kt)("img",{src:a(36604).Z})),(0,r.kt)(i.Z,{value:"cypher",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n) DETACH DELETE n;\nCREATE\n(bradley:Person {name: 'Bradley Cooper', oscars: 0}),\n(jennifer:Person {name: 'Jennifer Lawrence', oscars: 1}),\n(slp:Movie {title: 'Silver Linings Playbook', released: 2012}),\n(amhu:Movie {title: 'American Hustle', released: 2013}),\n(joy:Movie {title: 'Joy', released: 2015}),\n(asib:Movie {title: 'A Star Is Born', released: 2018}),\n(dlu:Movie {title: 'Don\u2019t Look Up', released: 2021}),\n(bradley)-[:ACTED_IN]->(slp),\n(bradley)-[:ACTED_IN]->(amhu),\n(bradley)-[:ACTED_IN]->(joy),\n(bradley)-[:ACTED_IN]->(asib),\n(jennifer)-[:ACTED_IN]->(slp),\n(jennifer)-[:ACTED_IN]->(amhu),\n(jennifer)-[:ACTED_IN]->(joy),\n(jennifer)-[:ACTED_IN]->(dlu);\n")))),(0,r.kt)("p",null,"Find Jennifer Lawrence and return data about her and the movies she\u2019s acted in.\nThis example contains a map projection with a literal entry, which in turn also\nuses map projection inside ",(0,r.kt)("inlineCode",{parentName:"p"},"collect()"),"."),(0,r.kt)(l.Z,{groupId:"ex1",defaultValue:"cypher",values:[{label:"Query",value:"cypher"},{label:"Result",value:"result"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"cypher",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (actor:Person {name: 'Jennifer Lawrence'})-[:ACTED_IN]->(movie:Movie)\nWITH actor, collect(movie {.title, .year}) AS movies\nRETURN actor {.name, roles: movies} AS jennifer\n"))),(0,r.kt)(i.Z,{value:"result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 jennifer                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 {Map} 3 properties                                          \u2502\n\u2502 {                                                           \u2502\n\u2502   "name": "Jennifer Lawrence",                              \u2502\n\u2502   "roles": [                                                \u2502\n\u2502       {                                                     \u2502\n\u2502         "year": 2012,                                       \u2502\n\u2502         "title": "Silver Linings Playbook"                  \u2502\n\u2502       },                                                    \u2502\n\u2502       {                                                     \u2502\n\u2502         "year": 2013,                                       \u2502\n\u2502         "title": "American Hustle"                          \u2502\n\u2502       },                                                    \u2502\n\u2502       {                                                     \u2502\n\u2502         "year": 2015,                                       \u2502\n\u2502         "title": "Joy"                                      \u2502\n\u2502       },                                                    \u2502\n\u2502       {                                                     \u2502\n\u2502         "year": 2021,                                       \u2502\n\u2502         "title": "Don\u2019t Look Up"                            \u2502\n\u2502       }                                                     \u2502\n\u2502   ]                                                         \u2502\n\u2502 }                                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')))),(0,r.kt)("p",null,"The below query finds all ",(0,r.kt)("inlineCode",{parentName:"p"},"Person")," nodes that have one or more relationships\nof type ",(0,r.kt)("inlineCode",{parentName:"p"},"ACTED_IN")," connected to ",(0,r.kt)("inlineCode",{parentName:"p"},"Movie")," nodes and returns the number of movies\neach ",(0,r.kt)("inlineCode",{parentName:"p"},"Person")," has starred in. This example introduces the variable selector and\nuses it to project the movie count."),(0,r.kt)(l.Z,{groupId:"ex2",defaultValue:"cypher",values:[{label:"Query",value:"cypher"},{label:"Result",value:"result"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"cypher",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (actor:Person)-[:ACTED_IN]->(movie:Movie)\nWITH actor, count(movie) AS nMovies\nRETURN actor {.name, nMovies}\n"))),(0,r.kt)(i.Z,{value:"result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 actor {.name, nMovies}                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 {Map} 2 properties                                          \u2502\n\u2502 {                                                           \u2502\n\u2502    "name": "Jennifer Lawrence",                             \u2502\n\u2502    "nMovies": 4                                             \u2502\n\u2502 }                                                           \u2502\n\u251c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u254c\u2524\n\u2502 {Map} 2 properties                                          \u2502\n\u2502 {                                                           \u2502\n\u2502    "name": "Bradley Cooper",                                \u2502\n\u2502    "nMovies": 4                                             \u2502\n\u2502 }                                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')))),(0,r.kt)("p",null,"Finally, the next query returns all properties from the Bradley Cooper node. It\nuses an all-properties selector to project node properties, and in addition\nexplicitly projects the ",(0,r.kt)("inlineCode",{parentName:"p"},"dateOfBirth")," property. Since this property does not\nexist, a null value is projected in its place."),(0,r.kt)(l.Z,{groupId:"ex3",defaultValue:"cypher",values:[{label:"Query",value:"cypher"},{label:"Result",value:"result"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"cypher",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (actor:Person {name: 'Bradley Cooper'})\nRETURN actor {.*, .dateOfBirth} as bradley\n"))),(0,r.kt)(i.Z,{value:"result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 bradley                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 {Map} 3 properties                                          \u2502\n\u2502 {                                                           \u2502\n\u2502   "dateOfBirth": null,                                      \u2502\n\u2502   "name": "Bradley Cooper",                                 \u2502\n\u2502   "oscars": 0                                               \u2502\n\u2502 }                                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')))),(0,r.kt)("h2",{id:"temporal-types"},"Temporal types"),(0,r.kt)("h3",{id:"duration"},"Duration"),(0,r.kt)("p",null,"You can create a property of temporal type ",(0,r.kt)("inlineCode",{parentName:"p"},"Duration")," from a string or a map by\ncalling the function ",(0,r.kt)("inlineCode",{parentName:"p"},"duration"),"."),(0,r.kt)("p",null,"For strings, the duration format is: ",(0,r.kt)("inlineCode",{parentName:"p"},"P[nD]T[nH][nM][nS]")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," stands for\na number, and the capital letters are used as a separator with each field in ",(0,r.kt)("inlineCode",{parentName:"p"},"[]"),"\nmarked optional. For strings, Memgraph only allows the last field to be a\ndouble, e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"P2DT2.5H"),". However, for maps, every field can be a double, an int\nor a mixture of both. Memgraph also supports negative durations."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"D"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"H"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hours")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"M"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Minutes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"S"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Seconds")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CREATE (:F1Laps {lap: duration("PT2M2.33S")});\n')),(0,r.kt)("p",null,"Maps can contain the following six fields: ",(0,r.kt)("inlineCode",{parentName:"p"},"day"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"hour"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"minute"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"second"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"millisecond")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"microsecond"),"."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"CREATE (:F1Laps {lap: duration({minute:2, second:2, microsecond:33})});\n")),(0,r.kt)("p",null,"At this point, it must be pointed out that durations internally hold\nmicroseconds. Each of the fields specified above is first converted to\nmicroseconds and then reduced by addition to a single value. This has an\ninteresting use case:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"CREATE (:F1Laps {lap: duration({minute:2, second:-2, microsecond:-33})});\n")),(0,r.kt)("p",null,"This converts ",(0,r.kt)("inlineCode",{parentName:"p"},"minutes"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"seconds")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"microseconds")," and effectively produces\nthe following equation: ",(0,r.kt)("inlineCode",{parentName:"p"},"minutes - seconds - microseconds"),"."),(0,r.kt)("p",null,"Each of the individual fields of a duration can be accessed through its\nproperties as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"day"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Converts all the microseconds back to days and returns the value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"hour"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Subtracts days and returns the leftover value as hours.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"minute"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Subtracts the days and returns the leftover value as minutes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"second"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Subtracts the days and returns the leftover value as seconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"millisecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Subtracts the days and returns the leftover value as milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"microsecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Subtracts the days and returns the leftover value as microseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"nanosecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Subtracts the days and returns the leftover value as nanoseconds.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"CREATE (:F1Laps {lap: duration({day:1, hour: 2, minute:3, second:4})});\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (f:F1Laps) RETURN f.lap.day;\n// Result\n>> 1\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (f:F1Laps) RETURN f.lap.hour;\n// Result\n>> 2\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (f:F1Laps) RETURN f.lap.minute;\n// Result\n>> 123 // The value without days is 2 hours and 3  minutes, that is 123 minutes\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (f:F1Laps) RETURN f.lap.second;\n// Result\n>> 7384 // The value without days is 2 hours, 3 minutes and 4 seconds, that is 7384 minutes\n")),(0,r.kt)("h3",{id:"date"},"Date"),(0,r.kt)("p",null,"You can create a property of temporal type ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")," from a string or map by\ncalling the function ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),". For strings, the date format is specified by the\nISO 8601: ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYYMMDD")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYY-MM"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Year")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"M"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"D"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Day")))),(0,r.kt)("p",null,"The smallest year is ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," and the highest is ",(0,r.kt)("inlineCode",{parentName:"p"},"9999"),"."),(0,r.kt)("p",null,"You can call ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," without arguments. This effectively sets the date field to\nthe current date of the calendar (UTC clock)."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CREATE (:Person {birthday: date("1947-07-30")});\n')),(0,r.kt)("p",null,"For maps, three fields are available: ",(0,r.kt)("inlineCode",{parentName:"p"},"year"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"month"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"day"),"."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"CREATE (:Person {birthday: date({year:1947, month:7, day:30})});\n")),(0,r.kt)("p",null,"You can access the individual fields of a date through its properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"year"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the year field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"month"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the month field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"day"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the day field")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (b:Person) RETURN b.birthday.year;\n")),(0,r.kt)("h3",{id:"localtime"},"LocalTime"),(0,r.kt)("p",null,"You can create a property of temporal type ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalTime")," from a string or map by\ncalling the function ",(0,r.kt)("inlineCode",{parentName:"p"},"localTime"),". For strings, the local time format is\nspecified by the ISO 8601: ",(0,r.kt)("inlineCode",{parentName:"p"},"[T]hh:mm:ss")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"[T]hh:mm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"[T]hhmmss")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"[T]hhmm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"[T]hh"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"h"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hours")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"m"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Minutes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"s"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Seconds")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"seconds")," can be defined as decimal fractions with up to 6 digits. The first 3\ndigits represent milliseconds, and the last 3 digits microseconds. For example,\nthe string ",(0,r.kt)("inlineCode",{parentName:"p"},"T22:10:32.300600")," specifies ",(0,r.kt)("inlineCode",{parentName:"p"},"300")," milliseconds and ",(0,r.kt)("inlineCode",{parentName:"p"},"600"),"\nmicroseconds."),(0,r.kt)("p",null,"You can call ",(0,r.kt)("inlineCode",{parentName:"p"},"localTime")," without arguments. This effectively sets the time field\nto the current time of the calendar (UTC clock)."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CREATE (:School {Calculus: localTime("09:15:00")});\n')),(0,r.kt)("p",null,"For maps, there are 5 fields available: ",(0,r.kt)("inlineCode",{parentName:"p"},"hour"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"minute"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"second"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"millisecond")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"microsecond"),"."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"CREATE (:School {Calculus: localTime({hour:9, minute:15})});\n")),(0,r.kt)("p",null,"You can access the individual fields of a LocalTime through its properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"hour"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the hour field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"minute"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the minute field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"second"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the second field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"millisecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the millisecond field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"microsecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the microsecond field")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (s:School) RETURN s.Calculus.hour;\n")),(0,r.kt)("h3",{id:"localdatetime"},"LocalDateTime"),(0,r.kt)("p",null,"You can create a property of temporal type ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalDateTime")," from a string or map\nby calling the function ",(0,r.kt)("inlineCode",{parentName:"p"},"localDateTime"),". For strings, the local time format is\nspecified by the ISO 8601: ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DDThh:mm:ss")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DDThh:mm")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"YYYYMMDDThhmmss")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYYMMDDThhmm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYYMMDDThh"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Year")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"M"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"D"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Day")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"h"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hours")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"m"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Minutes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"s"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Seconds")))),(0,r.kt)("p",null,"You can call ",(0,r.kt)("inlineCode",{parentName:"p"},"localDateTime")," without arguments. This effectively sets the date\nand time fields to the current date and time of the calendar (UTC clock).\nExample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'CREATE (:Flights {AIR123: localDateTime("2021-10-05T14:15:00")});\n')),(0,r.kt)("p",null,"For maps the following fields are available: ",(0,r.kt)("inlineCode",{parentName:"p"},"year"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"month"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"day"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"hour"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"minute"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"second"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"millisecond")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"microsecond"),"."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"CREATE (:Flights {AIR123: localDateTime({year:2021, month:10, day:5, hour:14, minute:15})});\n")),(0,r.kt)("p",null,"You can access the individual fields of LocalDateTime through its properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"year"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the year field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"month"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the month field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"day"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the day field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"hour"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the hour field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"minute"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the minute field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"second"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the second field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"millisecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the millisecond field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"microsecond"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the microsecond field")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},"MATCH (f:Flights) RETURN f.AIR123.year;\n")),(0,r.kt)("h2",{id:"temporal-types-arithmetic"},"Temporal types arithmetic"),(0,r.kt)("p",null,"Temporal types ",(0,r.kt)("inlineCode",{parentName:"p"},"Duration"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalTime")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalDateTime")," support\nnative arithmetic, and the operations are summarized in the following table:"),(0,r.kt)("p",null,"Duration operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"op"),(0,r.kt)("th",{parentName:"tr",align:"center"},"result"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration + Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration - Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"- Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration")))),(0,r.kt)("p",null,"Date operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"op"),(0,r.kt)("th",{parentName:"tr",align:"center"},"result"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Date + Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Date")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration + Date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Date")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Date - Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Date")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Date - Date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration")))),(0,r.kt)("p",null,"LocalTime operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"op"),(0,r.kt)("th",{parentName:"tr",align:"center"},"result"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalTime + Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalTime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration + LocalTime"),(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalTime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalTime - Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalTime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalTime - LocalTime"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration")))),(0,r.kt)("p",null,"LocalDateTime operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"operation"),(0,r.kt)("th",{parentName:"tr",align:"center"},"result"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalDateTime + Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalDateTime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration + LocalTateTime"),(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalDateTime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalDateTime - Duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalDateTime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"LocalDateTime - LocalDateTime"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Duration")))),(0,r.kt)("h2",{id:"procedures-api"},"Procedures API"),(0,r.kt)("p",null,"Data types are also used within query modules. Check out the documentation for the ",(0,r.kt)("a",{parentName:"p",href:"/docs/memgraph/next/reference-guide/query-modules/api/python-api"},"Python API"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/memgraph/next/reference-guide/query-modules/api/c-api"},"C API")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/memgraph/next/reference-guide/query-modules/api/cpp-api"},"C++ API"),"."))}u.isMDXComponent=!0},36604:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/map-projection-example-3f9c39ce63012b08ce279002416b0d6c.png"}}]);