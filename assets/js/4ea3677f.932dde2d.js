"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53638],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},27239:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],s={id:"c-sharp",title:"C# quick start",sidebar_label:"C#"},l=void 0,p={unversionedId:"connect-to-memgraph/methods/building-applications/c-sharp",id:"version-2.1.1/connect-to-memgraph/methods/building-applications/c-sharp",isDocsHomePage:!1,title:"C# quick start",description:"At the end of this guide, you will have created a simple . NET console **`Hello,",source:"@site/memgraph_versioned_docs/version-2.1.1/connect-to-memgraph/methods/building-applications/c-sharp.md",sourceDirName:"connect-to-memgraph/methods/building-applications",slug:"/connect-to-memgraph/methods/building-applications/c-sharp",permalink:"/docs/memgraph/connect-to-memgraph/methods/building-applications/c-sharp",editUrl:"https://github.com/memgraph/docs/tree/master/memgraph_versioned_docs/version-2.1.1/connect-to-memgraph/methods/building-applications/c-sharp.md",tags:[],version:"2.1.1",frontMatter:{id:"c-sharp",title:"C# quick start",sidebar_label:"C#"},sidebar:"version-2.1.1/memgraph",previous:{title:"Rust",permalink:"/docs/memgraph/connect-to-memgraph/methods/building-applications/rust"},next:{title:"Java",permalink:"/docs/memgraph/connect-to-memgraph/methods/building-applications/java"}},c=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Driver",id:"driver",children:[],level:2},{value:"Basic Setup",id:"basic-setup",children:[],level:2},{value:"Alternative Setup",id:"alternative-setup",children:[],level:2},{value:"Where to next?",id:"where-to-next",children:[],level:2}],u={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"At the end of this guide, you will have created a simple . NET console ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Hello,\nWorld!"))," program that connects to the Memgraph database and executes simple\nqueries."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"For this guide you will need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("strong",{parentName:"li"},"running Memgraph instance"),". If you need to set up Memgraph, take a look\nat the ",(0,o.kt)("a",{parentName:"li",href:"/docs/memgraph/installation"},"Installation guide"),"."),(0,o.kt)("li",{parentName:"ul"},"A basic understanding of graph databases and the property graph model.")),(0,o.kt)("h2",{id:"driver"},"Driver"),(0,o.kt)("p",null,"Please note that the code samples in this guide utilize the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Neo4j.Driver.Simple")," package which implements a blocking interface around the\n'main' driver. It should be used as a tool for getting started quickly. The\n",(0,o.kt)("inlineCode",{parentName:"p"},"Neo4j.Driver")," package contains the official and complete driver for real-world\nprojects. The driver documentation can be found here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/neo4j/neo4j-dotnet-driver"},"Neo4j . NET\nDriver"),"."),(0,o.kt)("h2",{id:"basic-setup"},"Basic Setup"),(0,o.kt)("p",null,"We'll be using Visual Studio 2019 on Windows 10 to connect a simple . NET\nconsole application to a running Memgraph instance. If you're using a different\nIDE, the steps might be slightly different, but the code is probably the same or\nvery similar.",(0,o.kt)("br",null)),(0,o.kt)("p",null,"Let's jump in and connect a simple program to Memgraph."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1.")," Open ",(0,o.kt)("strong",{parentName:"p"},"Visual Studio")," and create a new project.",(0,o.kt)("br",null)," ",(0,o.kt)("strong",{parentName:"p"},"2.")," Find and\nselect the ",(0,o.kt)("strong",{parentName:"p"},"Console App (. NET Core)")," template by using the search box.",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"3.")," Name your project ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"MemgraphApp")),", choose an appropriate location for\nit, and click ",(0,o.kt)("strong",{parentName:"p"},"Create"),".",(0,o.kt)("br",null)," ",(0,o.kt)("strong",{parentName:"p"},"4.")," Select the ",(0,o.kt)("strong",{parentName:"p"},"Tools > NuGet Package\nManager > Package Manager Console")," menu command.",(0,o.kt)("br",null)," ",(0,o.kt)("strong",{parentName:"p"},"5.")," Once the console\nopens, check that the ",(0,o.kt)("strong",{parentName:"p"},"Default project")," drop-down list shows the project into\nwhich you want to install the package. If you have a single project in the\nsolution, it is already selected.",(0,o.kt)("br",null)," ",(0,o.kt)("strong",{parentName:"p"},"6.")," Enter the command\n",(0,o.kt)("strong",{parentName:"p"},"Install-Package Neo4j. Driver. Simple"),"."),(0,o.kt)("p",null,"Now, you should have the newest version of the driver installed and can proceed\nto copy the following code into the ",(0,o.kt)("strong",{parentName:"p"},"Program.cs")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Linq;\nusing Neo4j.Driver;\n\nnamespace MemgraphApp\n{\n    public class Program\n    {\n        public static void Main()\n        {\n            string message = "Hello, World!";\n\n            using var _driver = GraphDatabase.Driver("bolt://localhost:7687", AuthTokens.None);\n            using var session = _driver.Session();\n\n            var greeting = session.WriteTransaction(tx =>\n            {\n                var result = tx.Run("CREATE (n:FirstNode) " +\n                                    "SET n.message = $message " +\n                                    "RETURN \'Node \'  + id(n) + \': \' + n.message",\n                    new { message });\n                return result.Single()[0].As<string>();\n            });\n            Console.WriteLine(greeting);\n        }\n    }\n}\n')),(0,o.kt)("p",null,"Once you run the program, you should see an output similar to the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Node 1: Hello, World!\n")),(0,o.kt)("h2",{id:"alternative-setup"},"Alternative Setup"),(0,o.kt)("p",null,"If you want to try out more complex operations, feel free to use the refactored\ncode below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Linq;\nusing Neo4j.Driver;\n\nnamespace MemgraphApp\n{\n    public class Program : IDisposable\n    {\n        private readonly IDriver _driver;\n\n        public Program(string uri, string user, string password)\n        {\n            _driver = GraphDatabase.Driver(uri, AuthTokens.Basic(user, password));\n        }\n\n        public void PrintGreeting(string message)\n        {\n            using (var session = _driver.Session())\n            {\n                var greeting = session.WriteTransaction(tx =>\n                {\n                    var result = tx.Run("CREATE (n:FirstNode) " +\n                                        "SET n.message = $message " +\n                                        "RETURN \'Node \'  + id(n) + \': \' + n.message",\n                        new { message });\n                    return result.Single()[0].As<string>();\n                });\n                Console.WriteLine(greeting);\n            }\n        }\n\n        public void Dispose()\n        {\n            _driver?.Dispose();\n        }\n\n        public static void Main()\n        {\n            using (var greeter = new Program("bolt://localhost:7687", "", ""))\n            {\n                greeter.PrintGreeting("Hello, World!");\n            }\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"where-to-next"},"Where to next?"),(0,o.kt)("p",null,"For real-world examples of how to use Memgraph, we suggest you take a look at\nthe ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/tutorials"},"Tutorials"))," page. You can also browse through\nthe ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/memgraph/database-functionalities"},"Database functionalities")),"\nsection to get an overview of all the functionalities Memgraph offers."))}m.isMDXComponent=!0}}]);